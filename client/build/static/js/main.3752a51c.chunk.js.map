{"version":3,"sources":["api/typedefs.js","utils/Auth.js","pages/Login.jsx","pages/Signup.jsx","pages/Search.jsx","components/card.jsx","pages/Webplayer.jsx","components/songlist.jsx","pages/Profile.jsx","components/onChangeSearch.jsx","components/navbar.jsx","Router.jsx","components/loader.jsx","App.jsx","utils/serviceWorker.js","config.js","index.js"],"names":["ADD_USER","gql","SEARCH_SONG","ONCHANGE_SEARCH","LOGIN_CHECK","USERS_PLAYLIST","Auth","isAuthenticated","isUsername","token","check","jwt","localStorage","getItem","axios","post","then","res","data","response","client_id","userLogin","status","this","getToken","getAuth","getUserName","signOutUser","removeItem","Login","state","username","password","message","setClientToken","setItem","renderError","Message","negative","Header","handleChange","event","setState","target","name","value","to","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","as","color","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","type","mutation","variables","update","cache","loginCheck","Button","onClick","href","React","Component","Signup","firstName","lastName","email","confirm","image","active","gql_res","createAccount","account","Search","search","loading","console","log","pathname","Container","JSON","parse","searchSong","runSearch","cards","props","handleShow","handleHide","intialPlayer","track","activeTrack","playTrack","index","content","primary","Dimmer","Dimmable","Image","dimmed","dimmer","onMouseEnter","onMouseLeave","src","Webplayer","song_data","location","x","document","querySelector","song","play","stopActiveTrack","renderData","songTiles","z","length","push","className","artwork","artist","undefined","margin","Card","Group","centered","itemsPerRow","id","controls","songlist","List","divided","relaxed","Item","floated","avatar","Content","Profile","activeItem","showSongs","playlistChoice","handleItemClick","e","playlistDisplay","query","error","playlistCards","Row","width","playlistsForUser","playlists","playlist","followerString","followers","songString","song_count","header","meta","description","key","displaySongs","warning","renderItem","paddingBottom","Divider","marginTop","circular","inverted","Menu","pointing","secondary","initialState","isLoading","results","num","OnChangeSearch","_","times","title","price","handleResultSelect","result","handleSearchChange","RegExp","escapeRegExp","handleResData","onChangeSearch","a","onResultSelect","onSearchChange","debounce","leading","Navbar","userStatus","children","link","position","PrivateRoute","component","rest","render","Router","exact","path","Loading","Loader","App","auth","Boolean","window","hostname","match","config","graphql","ApolloClient","uri","ReactDOM","client","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3752a51c.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\nexport const ADD_USER = gql`\n  mutation($account:Account) {\n   createAccount (account:$account){\n        response,\n        status\n}\n    }\n`;\n\nexport const SEARCH_SONG = gql`\n  mutation($search:String) {\n   searchSong (search:$search){\n     response\n   }\n  }\n`;\n\nexport const ONCHANGE_SEARCH = gql`\n  query($search:String) {\n  onChangeSearch(search:$search){\n\n      track\n      artist\n      song\n      album\n      artwork\n  }\n}\n`;\n\nexport const LOGIN_CHECK = gql`\n    mutation($username:String, $password:String) {\n      loginCheck (username:$username, password:$password){\n        response,\n        username,\n        status\n      }\n    }\n`;\n\nexport const USER_DATA = gql`\nquery($username:String){\n  userData(username:$username){\n    response,\n    user {\n      firstName\n      lastName\n      email\n      image\n    },\n    status\n  }\n}\n`;\n\nexport const DELETE_USER = gql`\n    mutation($username:String){\n      deleteUser (username:$username){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UPDATE_USER = gql`  \n    mutation($username:String, $updateData:UpdateData){\n      updateUser(username:$username, updateData: $updateData){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UPDATE_PASSWORD = gql`  \n    mutation($username:String, $currentPass:String, $newPass: String){\n      updatePassword(username:$username, currentPass:$currentPass, newPass:$newPass){\n        response,\n        status\n      }\n    }\n`;\n\nexport const NEW_PLAYLIST = gql`  \n    mutation($playlist:Playlist){\n      newPlaylist(playlist:$playlist){\n        response,\n        status\n      }\n    }\n`;\n\nexport const NEW_TRACK = gql`  \n    mutation($track:PlaylistTrack){\n      newTrack(track:$track){\n        response,\n        status\n      }\n    }\n`;\n\nexport const DELETE_TRACK = gql`  \n    mutation($track:TrackInfo){\n      deleteTrack(track:$track){\n        response,\n        status\n      }\n    }\n`;\n\nexport const FOLLOW_PLAYLIST = gql`  \n    mutation($username:String, $playlistName: String){\n      followPlaylist(username:$username, playlistName:$playlistName){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UNFOLLOW_PLAYLIST = gql`  \n    mutation($username:String, $playlistName: String){\n      unfollowPlaylist(username:$username, playlistName:$playlistName){\n        response,\n        status\n      }\n    }\n`;\n\nexport const USERS_PLAYLIST = gql`  \n  query($username:String) {\n    playlistsForUser(username:$username) {\n      playlists {\n        name\n        followers\n        song_count\n        songs {\n          track\n          artist\n          song\n          album\n          artwork\n        }\n      }\n      response\n      status\n    }\n  }\n`;\n\nexport const VERIFY_USER = gql`\n    mutation($jwt:String){\n      verifytoken(jwt:$jwt){\n        response\n      }\n    }\n\n`;","import axios from 'axios';\n\nconst Auth = {\n    isAuthenticated: false,\n    isUsername: \"\",\n    token: \"\",\n    async check() {\n        let jwt = {\n            token: \"\",\n        }\n        jwt.token = localStorage.getItem('sudo')\n        if (jwt !== \"\") {\n            await axios.post(`/verify`, jwt)\n            .then(res => {\n                this.isAuthenticated = res.data.response\n                this.isUsername = res.data.client_id\n                this.token = jwt.token\n            })\n        }\n    },\n    userLogin(status){\n        this.isAuthenticated = status\n    },\n    getToken() {\n        return this.token\n    },\n    getAuth() {\n    // return true; //uncomment this for dev, to bypass authentication, most services wont work if this is uncommented.\n        return this.isAuthenticated;\n    },\n    getUserName() {\n        return this.isUsername\n    },\n   signOutUser(){\n        localStorage.removeItem('sudo')\n        return false;\n    }\n\n};\n\nexport default Auth;","import React from 'react';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { LOGIN_CHECK } from '../api/typedefs';\nimport { Mutation } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport Auth from '../utils/Auth';\n\nexport default class Login extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    status: Auth.getAuth(),\n    message: '',\n  }\n\n  setClientToken = (token) => {\n    localStorage.setItem('sudo', token)\n  }\n\n  renderError = () => {\n    if (!this.state.status && this.state.message) {\n      return (<Message negative>\n        <Message.Header>{this.state.message}</Message.Header>\n      </Message>)\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    let { username, password,status } = this.state\n    if(status){\n      Auth.userLogin(status)\n      return  <Redirect to='/' />\n    }\n    return (\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            {/* <Image src='/logo.png' /> */}\n            Log-in to your account\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input fluid icon='user' name='username' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\n              <Form.Input fluid icon='lock' name='password' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\n              {this.renderError()}\n              <Mutation mutation={LOGIN_CHECK} variables={{ username, password }}\n                update={(cache, { data }) => {\n                  this.setState({\n                    status: data.loginCheck.status,\n                    message: data.loginCheck.response\n                  });\n                  this.setClientToken(data.loginCheck.response)\n                }\n                }\n              >\n                {loginCheck => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={loginCheck}>\n                    Login\n                  </Button>\n                )}\n              </Mutation>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <a href='#signup'>Sign Up</a>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { ADD_USER } from '../api/typedefs';\nimport { Mutation } from 'react-apollo';\n\n\nexport default class Signup extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    image: \"\",\n    active: true,\n    gql_res: {\n      createAccount: {\n        response: false\n      }\n    }\n  }\n  \n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n\n  render() {\n    let { firstName, lastName, username, email, password, image, active } = this.state\n    let account = {\n      firstName,\n      lastName,\n      username,\n      email,\n      password,\n      image,\n      active\n    }\n    if (this.state.gql_res.createAccount.response === \"Account created\") {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            {/* <Image src='/logo.png' /> */}\n            Create an account\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input name='firstName' fluid icon='user' iconPosition='left' placeholder='Firstname' onChange={this.handleChange} />\n              <Form.Input name='lastName' fluid icon='user' iconPosition='left' placeholder='Lastname' onChange={this.handleChange} />\n              <Form.Input name='username' fluid icon='user' iconPosition='left' placeholder='Username' onChange={this.handleChange} />\n              <Form.Input name='email' fluid icon='mail' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\n              <Form.Input name='password' fluid icon='lock' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\n              <Form.Input name='confirm' fluid icon='lock' iconPosition='left' placeholder='Confirm Password' type='password' onChange={this.handleChange} />\n              <Mutation mutation={ADD_USER} variables={{ account }}\n                update={(cache, { data }) => {\n                  this.setState({ gql_res: data })\n                }\n                }\n              >\n                {createAccount => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={createAccount}>\n                    Signup\n                  </Button>\n                )}\n              </Mutation>\n\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n\n}","import React from 'react';\nimport { Button, Form, Grid, Header, Segment,Container } from 'semantic-ui-react'\nimport { SEARCH_SONG } from '../api/typedefs';\nimport { Redirect } from 'react-router-dom';\nimport { Mutation } from 'react-apollo'\nexport default class Search extends React.Component {\n  state = {\n    search: \"\",\n    gql_res: \"\",\n    loading: false\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      search: event.target.value\n    })\n  }\n\n  render() {\n    let { search } = this.state\n    if(this.state.gql_res !== \"\"){\n      console.log(this.state.gql_res)\n      return(\n        <Redirect to={{pathname: '/webplayer',\n                  state: { data: this.state.gql_res }}} />\n        )\n    }\n    return (\n      <Container>\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Search from over 30 million songs\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input fluid icon='music' iconPosition='left' placeholder='Search Song' onChange={this.handleChange} />\n\n              <Mutation mutation={SEARCH_SONG} variables={{ search }}\n              update={(cache, { data }) => {\n                data = JSON.parse(data.searchSong.response)\n                console.log(data)\n              this.setState({ gql_res: data,\n                              loading:true\n              })\n                }\n                }>\n                {runSearch => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={runSearch}>\n                    Search\n          </Button>\n                )}\n              </Mutation>\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n      </Container>\n    )\n  }\n\n}","import React, { Component } from 'react'\nimport { Button, Dimmer, Image } from 'semantic-ui-react'\n\nexport default class cards extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    }\n  }\n\n  handleShow = () => this.setState({ active: true })\n  handleHide = () => this.setState({ active: false })\n\n  intialPlayer = (track) => {\n    this.setState({activeTrack:track})\n    this.props.playTrack(track)\n  }\n\n  render() {\n    let {image,index} = this.props\n    const { active } = this.state\n    const content = (\n      <div>\n        {/* <Header as='h4' inverted>\n          {track}\n        </Header> */}\n\n        <Button primary icon=\"play\" onClick={() => this.intialPlayer(index)}></Button>\n        {/* <Button>View</Button> */}\n      </div>\n    )\n\n    return (\n      <Dimmer.Dimmable\n        as={Image}\n        dimmed={active}\n        dimmer={{ active, content }}\n        onMouseEnter={this.handleShow}\n        onMouseLeave={this.handleHide}\n        size='small'\n        src={image}\n      />\n    )\n  }\n}","import React from 'react';\nimport '../styling/App.css';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Card } from 'semantic-ui-react';\nimport Cards from '../components/card';\n\nexport default class Webplayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTrack: ''\n    }\n  }\n\n  playTrack = (track) => {\n    let song_data = this.props.location.state.data\n    let x = document.querySelector(\"#player\");\n    x.src = song_data[track].song\n    x.play();\n  }\n\n  stopActiveTrack = () => {\n\n  }\n\n  renderData = () => {\n    let song_data = this.props.location.state.data\n    let songTiles = [];\n    for (let z = 0; z < song_data.length; z++) {\n      songTiles.push(\n        <div className=\"cardDiv\">\n          <Cards image={song_data[z].artwork}\n            artist={song_data[z].artist}\n            track={song_data[z].track}\n            song={song_data[z].song}\n            playTrack={this.playTrack}\n            index={z}\n          /><br />\n          <strong>{song_data[z].track}</strong>\n        </div>\n      )\n    }\n    return songTiles\n    {/* <Button>View</Button> */}\n  }\n\n  render() {\n    if (this.props.location.state === undefined) {\n      return <Redirect to=\"/\" />\n    } else {\n      return (\n        <div className=\"cardContainer\">\n          <Container style={{ margin: 15 }}>\n            <Card.Group centered itemsPerRow={6}>\n              {this.renderData()}\n            </Card.Group>\n          </Container>\n          <div className=\"audioPlayer\">\n            <audio id=\"player\" controls>\n              <source src=\"\" />\n            </audio>\n          </div>\n        </div>\n      )\n    }\n  }\n\n}","import React, { Component } from 'react'\nimport { List, Image } from 'semantic-ui-react'\n\nexport default class songlist extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  render() {\n\n    return (\n          <List divided relaxed>\n            <List.Item>\n              <Image floated='left' avatar src='https://react.semantic-ui.com/images/avatar/small/daniel.jpg' />\n              <List.Content>\n                Daniel Louise\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <Image avatar src='https://react.semantic-ui.com/images/avatar/small/stevie.jpg' />\n              <List.Content>\n                Stevie Feliciano\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <Image avatar src='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\n              <List.Content>\n                Elliot Fu\n              </List.Content>\n            </List.Item>\n          </List>\n    )\n  }\n}","import React from 'react';\nimport { Message, Card, Image, Menu, Grid, Header, Divider, Container } from 'semantic-ui-react';\nimport { USERS_PLAYLIST } from '../api/typedefs';\nimport { Query } from 'react-apollo';\nimport SongList from '../components/songlist';\nimport Auth from '../utils/Auth'\n\n\nexport default class Profile extends React.Component {\n    state = {\n        activeItem: 'Playlists',\n        showSongs: false,\n        playlistChoice: '',\n        data: {}\n    };\n\n    handleItemClick = (e, { name }) => {\n        this.setState({ activeItem: name });\n    }\n\n    playlistDisplay = () => (\n        <Query query={USERS_PLAYLIST} variables={{ username: Auth.getUserName() }}>\n            {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n                let playlistCards = [];\n                let response;\n                let index = 0;\n                if (this.state.showSongs) {\n                    return (\n                        <Container>\n                            <Grid.Row width={16}>\n                                <SongList />\n                            </Grid.Row>\n                        </Container>\n                    )\n                } else if (data.playlistsForUser.playlists) {\n                    for (const playlist of data.playlistsForUser.playlists) {\n                        let followerString = 'followers: ' + playlist.followers;\n                        let songString = 'songs: ' + playlist.song_count;\n                        playlistCards.push(\n                            <Card\n                                color='teal'\n                                header={playlist.name}\n                                meta={followerString}\n                                description={songString}\n                                key={index}\n                                onClick={() => { this.displaySongs(playlist.name) }}\n                            />\n                        )\n                        index++;\n                    }\n                    response = playlistCards;\n                } else {\n                    response = (\n                        <Message\n                            icon='info circle'\n                            warning\n                            header='No playlists'\n                            content={data.playlistsForUser.response}\n                        />)\n                }\n                return response;\n            }}\n        </Query>\n    );\n\n    displaySongs = (value) => {\n        this.setState({\n            showSongs: true,\n            playlistChoice: value\n        });\n    }\n\n    renderItem = () => {\n        if (this.state.activeItem === 'Playlists') {\n            return (\n                <Container>\n                    <Grid.Row width={16}>\n                        <Card.Group itemsPerRow={3}>\n                            {this.playlistDisplay()}\n                        </Card.Group>\n                    </Grid.Row>\n                </Container>\n            )\n        } else if (this.state.activeItem === 'Settings') {\n            return (\n                <Header as='h4'>\n                    Settings\n                </Header>\n            )\n        }\n    };\n\n    render() {\n        let username = Auth.getUserName();\n        return (\n            <Grid>\n                <Grid.Row style={{ paddingBottom: 0 }}>\n                    <Grid.Column width={16}>\n                        <Divider />\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row color='teal' style={{ marginTop: 15 }}>\n                    <Grid.Column width={3}>\n                        <Image circular src='https://react.semantic-ui.com/images/avatar/large/patrick.png' />\n                    </Grid.Column>\n                    <Grid.Column width={13}>\n                        <Header as='h2' inverted floated='left'>\n                            {username}\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        <Menu pointing secondary>\n                            <Menu.Item\n                                name='Playlists'\n                                active={this.state.activeItem === 'Playlists'}\n                                onClick={this.handleItemClick}\n                            >\n                            </Menu.Item>\n                            <Menu.Item\n                                name='Settings'\n                                active={this.state.activeItem === 'Settings'}\n                                onClick={this.handleItemClick}\n                            >\n                            </Menu.Item>\n                        </Menu>\n                    </Grid.Column>\n                </Grid.Row>\n                {this.renderItem()}\n            </Grid>\n        )\n    }\n\n}","import PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport React from 'react'\nimport { Query } from 'react-apollo';\nimport { ONCHANGE_SEARCH } from '../api/typedefs';\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react'\n\nconst initialState = { isLoading: false, results: [], value: '', num: 1 }\n\nconst source = _.times(5, () => ({\n  title: \"title\",\n  description: \"descript\",\n  image: \"image\",\n  price: \"price\"\n}))\n\nexport default class OnChangeSearch extends React.Component {\n  state = initialState\n\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value, num:1 })\n\n    // setTimeout(() => {\n    //   if (this.state.value.length < 1) return this.setState(initialState)\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      const isMatch = (result) => re.test(result.title)\n\n      this.setState({\n        isLoading: false,\n        // results: _.filter(source, isMatch),\n                //   results: ([{title:\"J. Cole\",description:\"G.O.M.D\"}]),\n                // results: this.state.data,\n        //         // results: _.filter(this.state.data, isMatch),\n      })\n    // }, 300)\n  }\n\n  handleResData = (data) => {\n    console.log(data)\n    if (data.onChangeSearch.length > 0) {\n        let a = data.onChangeSearch[0]\n        // console.log(a.artist)\n        this.setState({\n            num: 0,\n            results: [{\n                title:a.artist,\n                description:a.track,\n                image:a.artwork\n            }]\n        })\n    }\n}\n  \n    render() {\n        let { isLoading, value, results, num } = this.state\n        let search = value\n        return (\n            <Query query={ONCHANGE_SEARCH} variables={{ search }}>\n                {({ loading, error, data }) => {\n                    if (!loading && num === 1) {\n                        this.handleResData(data)\n                    }\n                    return (\n                        <Grid>\n                            <Grid.Column width={6}>\n                                <Search\n                                    loading={loading}\n                                    onResultSelect={this.handleResultSelect}\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                        leading: true,\n                                    })}\n                                    results={results}\n                                    value={value}\n                                    {...this.props}\n                                />\n                            </Grid.Column>\n                        </Grid>\n                    );\n                }}\n            </Query>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Input, Menu } from 'semantic-ui-react'\nimport Auth from '../utils/Auth'\nimport OnChangeSearch from './onChangeSearch';\n\nexport default class Navbar extends Component {\n  state = { activeItem: 'home' }\n\n  handleItemClick = (e, { name }) => {\n      this.setState({ activeItem: name })\n    }\n\n    userStatus = () => {\n        const { activeItem } = this.state\n        if(Auth.getAuth() === true){\n           return <Menu.Item\n            name={`Welcome ${Auth.getUserName()}`}\n            active={activeItem === 'greet'}\n            onClick={this.handleItemClick}\n          />\n        }else{\n           return <Menu.Item\n            name='login'\n            active={activeItem === 'login'}\n            onClick={this.handleItemClick}\n          />\n        }\n    }\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu secondary\n      style={{ margin: 5 }} \n      >\n          <Menu.Header\n          style={{margin:5, color:'teal'}}\n          as=\"h2\"\n          children=\"Audago\"\n          />\n\n        <Menu.Item\n          name='home'\n          active={activeItem === 'home'}\n          link=\"/\"\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='playlist'\n          active={activeItem === 'playlist'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='about'\n          active={activeItem === 'about'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Menu position='right'>\n          <Menu.Item>\n            <OnChangeSearch />\n            {/* <Input icon='search' placeholder='Search...' /> */}\n          </Menu.Item>\n          {this.userStatus()}\n        </Menu.Menu>\n      </Menu>\n    )\n  }\n}\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Search from './pages/Search';\nimport Webplayer from './pages/Webplayer';\nimport Auth from './utils/Auth';\nimport { Redirect } from 'react-router-dom';\nimport Profile from './pages/Profile';\nimport Navbar from './components/navbar';\n\nconst Router = (props) => (\n\n  <HashRouter>\n    <Navbar />\n    <Switch>\n    <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <PrivateRoute exact path=\"/\" component={Search} />\n      <PrivateRoute exact path=\"/webplayer\" component={Webplayer} />\n      <PrivateRoute exact path=\"/profile\" component={Profile} />\n      {/* <PrivateRoute exact path=\"/edit-user\" component={Edit_User} /> */}\n    </Switch>\n  </HashRouter>\n)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      Auth.getAuth() ? (\n        <Component {...props} />\n      ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\"\n            }}\n          />\n        )\n    }\n  />\n);\n\n\nexport default Router;","import React from 'react'\nimport { Dimmer, Loader, Image, Segment, Container } from 'semantic-ui-react'\n\nconst Loading = () => (\n  <div>\n      <Container style={{margin:50}}>\n    {/* <Segment> */}\n      <Dimmer active inverted>\n        <Loader size='large'>Loading</Loader>\n      </Dimmer>\n\n      {/* <Image src='/images/wireframe/paragraph.png' /> */}\n    {/* </Segment> */}\n    </Container>\n  </div>\n)\n\nexport default Loading\n","import React, { Component } from 'react';\nimport './styling/App.css';\nimport Router from './Router.jsx';\nimport { Container } from 'semantic-ui-react';\nimport Auth from './utils/Auth';\nimport Loading from './components/loader';\n\nclass App extends Component {\n  state = {\n    auth: false,\n    loading: true\n  }\n\n  async componentDidMount() {\n    this.setState({ auth: await Auth.check(), loading: false })\n  }\n\n  render() {\n    if(this.state.loading){\n      return(\n        <Loading />\n        )\n    }else{\n      return (\n      <div className=\"App\">\n        <Container>\n        <Router />\n        </Container>\n      </div>\n    );\n  }\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ApolloClient from 'apollo-boost';\nconst config ={\n\n    graphql: new ApolloClient({\n        uri: '/graphql',\n      })\n\n}\nexport default config","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styling/index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './utils/serviceWorker';\nimport config from './config'\nimport { ApolloProvider } from '@apollo/react-hooks';\n\n// const { loading, error, data } = useQuery(DATA);\n// console.log(data)\n\n\nReactDOM.render(\n  <ApolloProvider client={config.graphql}>\n    <App />\n  </ApolloProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}