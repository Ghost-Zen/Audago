{"version":3,"sources":["api/queries.js","utils/Auth.js","components/onChangeSearch.jsx","components/dropdown.jsx","components/navbar.jsx","pages/Login.jsx","pages/Signup.jsx","pages/Homepage.jsx","components/playlistCards.jsx","components/songlist.jsx","components/webplayerPlaylists.jsx","components/card.jsx","components/player.jsx","components/sidebar.jsx","pages/Webplayer.jsx","components/editSettings.jsx","components/profilePlaylist.jsx","pages/Profile.jsx","Router.jsx","components/loader.jsx","App.jsx","utils/serviceWorker.js","config.js","index.js"],"names":["ADD_USER","gql","ONCHANGE_SEARCH","LOGIN_CHECK","USER_DATA","UPDATE_USER","UPDATE_PASSWORD","NEW_PLAYLIST","DELETE_TRACK","FOLLOW_PLAYLIST","UNFOLLOW_PLAYLIST","USERS_PLAYLIST","ALL_PLAYLISTS","Auth","isAuthenticated","isUsername","token","check","jwt","localStorage","getItem","axios","post","then","res","data","response","client_id","userLogin","status","username","this","getToken","getAuth","getUserName","signOutUser","removeItem","window","location","reload","initialState","isLoading","results","value","preventLoop","redirect","selectedSongData","OnChangeSearch","state","handleResultSelect","e","result","songData","allSongs","key","searchSong","setState","title","handleSearchChange","console","log","props","switchtab","handleResData","onChangeSearch","length","top4Res","rawData","z","apiRes","onSearchData","artist","description","image","track","artwork","push","search","to","pathname","query","variables","loading","error","Grid","Column","width","Search","onResultSelect","onSearchChange","_","debounce","leading","React","Component","trigger","Image","avatar","src","options","text","icon","href","onClick","NavBarDropDown","Dropdown","pointing","Navbar","activeItem","handleItemClick","name","userStatus","Menu","Item","active","logo","size","inverted","secondary","className","Header","style","margin","color","content","position","Login","password","message","setClientToken","setItem","renderError","Message","negative","handleChange","event","target","textAlign","height","verticalAlign","maxWidth","as","Form","Segment","stacked","Input","fluid","iconPosition","placeholder","onChange","type","mutation","update","cache","loginCheck","Button","Signup","firstName","lastName","email","confirm","gql_res","account","Popup","wide","List","bulleted","createAccount","HomePage","fontSize","marginTop","Content","cards","handleShow","handleHide","intialPlayer","playlist","activePlaylist","songList","songs","song","playTrack","resetCard","renderFollowButton","playlist_meta","follower_list","includes","playlistName","unfollowPlaylist","followPlaylist","index","primary","Dimmer","Dimmable","dimmed","dimmer","onMouseEnter","onMouseLeave","songlist","startTrack","choice","indexOf","playSong","deleteTrack","trackInfo","id","playlist_name","delete","renderDelete","buildList","renderDeleteState","renderRemove","creator","from","floated","basic","Icon","ref","link","playlists","listItems","Description","album","open","x","document","querySelector","undefined","playPromise","play","addEventListener","a","catch","reset","centered","celled","relaxed","WebplayerPlaylists","item","viewSongs","renderSongs","renderPlaylists","pollInterval","playlistData","allPlaylists","songTiles","renderData","Card","Group","itemsPerRow","activeTrack","song_meta","Player","source","controls","Sidebar","tabSwitch","selected","setTab","onSelect","Toggle","Nav","defaultSelected","eventKey","Webplayer","song_data","renderTab","tab","current_Tab","Row","Container","settings","renderUserSettings","info","userData","user","float","label","tag","renderEmail","renderMessage","positive","handleOpen","modalOpen","handleClose","modalError","handleCheck","newPass","testPass","handleModalError","currentPass","updateData","updateUser","updateInfo","Modal","onClose","Divider","circular","Actions","updatePassword","updatePass","PlaylistDisplay","showSongs","playlistChoice","editSettings","close","newPlaylist","displaySongs","playlistCards","unfollow","Confirm","onCancel","onConfirm","playlistsForUser","followerString","followers","songString","song_count","header","meta","transparent","Profile","chosen_tab","renderBannerInfo","Label","Detail","timeStamp","created","renderItem","backgroundColor","padding","paddingBottom","borderRadius","PrivateRoute","component","rest","render","Router","exact","path","Loading","Loader","App","auth","Boolean","hostname","match","config","graphql","ApolloClient","uri","ReactDOM","client","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50f47e25.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\nexport const ADD_USER = gql`\n  mutation($account:Account) {\n   createAccount (account:$account){\n        response,\n        status\n}\n    }\n`;\n\nexport const SEARCH_SONG = gql`\n  mutation($search:String) {\n   searchSong (search:$search){\n    track\n    artist\n    song\n    album\n    artwork\n   }\n  }\n`;\n\nexport const ONCHANGE_SEARCH = gql`\n  query($search:String) {\n  onChangeSearch(search:$search){\n\n      track\n      artist\n      song\n      album\n      artwork\n  }\n}\n`;\n\nexport const LOGIN_CHECK = gql`\n    mutation($username:String, $password:String) {\n      loginCheck (username:$username, password:$password){\n        response,\n        username,\n        status\n      }\n    }\n`;\n\nexport const USER_DATA = gql`\nquery($username:String){\n  userData(username:$username){\n    response,\n    user {\n      firstName\n      lastName\n      email\n      image\n      timeStamp{\n        created\n        lastSeen\n      }\n    },\n    status\n  }\n}\n`;\n\nexport const DELETE_USER = gql`\n    mutation($username:String){\n      deleteUser (username:$username){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UPDATE_USER = gql`  \n    mutation($username:String, $updateData:UpdateData){\n      updateUser(username:$username, updateData: $updateData){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UPDATE_PASSWORD = gql`  \n    mutation($username:String, $currentPass:String, $newPass: String, $testPass:String){\n      updatePassword(username:$username, currentPass:$currentPass, newPass:$newPass, testPass:$testPass){\n        response,\n        status\n      }\n    }\n`;\n\nexport const NEW_PLAYLIST = gql`  \n    mutation($name:String, $creator:String){\n      newPlaylist(name:$name, creator:$creator){\n        response,\n        status\n      }\n    }\n`;\n\nexport const NEW_TRACK = gql`  \n    mutation($username:String, $track:PlaylistTrack){\n      newTrack(username:$username, track:$track){\n        response,\n        status\n      }\n    }\n`;\n\nexport const DELETE_TRACK = gql`  \n    query($username:String,$trackInfo:TrackInfo){\n      deleteTrack(username:$username,trackInfo:$trackInfo){\n        response,\n        status\n      }\n    }\n`;\n\nexport const FOLLOW_PLAYLIST = gql`  \n    mutation($username:String, $playlistName: String){\n      followPlaylist(username:$username, playlistName:$playlistName){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UNFOLLOW_PLAYLIST = gql`  \n    mutation($username:String, $playlistName: String){\n      unfollowPlaylist(username:$username, playlistName:$playlistName){\n        response,\n        status\n      }\n    }\n`;\n\nexport const USERS_PLAYLIST = gql`  \n  query($username:String) {\n    playlistsForUser(username:$username) {\n      playlists {\n        name\n        creator\n        followers\n        song_count\n        songs {\n          track\n          artist\n          song\n          album\n          artwork\n        }\n        follower_list\n      }\n      response\n      status\n    }\n  }\n`;\n\nexport const ALL_PLAYLISTS = gql`\n  query {\n    allPlaylists {\n      playlists {\n        name\n        creator\n        followers\n        song_count\n        songs {\n          track\n          artist\n          song\n          album\n          artwork\n        }\n        follower_list\n      }\n      response\n      status\n    }\n  }\n`;\n\nexport const VERIFY_USER = gql`\n    mutation($jwt:String){\n      verifytoken(jwt:$jwt){\n        response\n      }\n    }\n\n`;","import axios from 'axios';\n\nconst Auth = {\n    isAuthenticated: false,\n    isUsername: \"\",\n    token: \"\",\n    async check() {\n        let jwt = {\n            token: \"\",\n        }\n        jwt.token = localStorage.getItem('sudo')\n        if (jwt !== \"\") {\n            await axios.post(`/verify`, jwt)\n            .then(res => {\n                this.isAuthenticated = res.data.response\n                this.isUsername = res.data.client_id\n                this.token = jwt.token\n            })\n        }\n    },\n    userLogin(status, username){\n        this.isAuthenticated = status\n        if(status) this.isUsername = username\n    },\n    getToken() {\n        return this.token\n    },\n    getAuth() {\n    // return true; //uncomment this for dev, to bypass authentication, most services wont work if this is uncommented.\n        return this.isAuthenticated;\n    },\n    getUserName() {\n        return this.isUsername\n    },\n   signOutUser(){\n        localStorage.removeItem('sudo')\n        window.location.reload();\n        // return false;\n    }\n\n};\n\nexport default Auth;","import React from 'react'\nimport _ from 'lodash'\nimport { Query } from 'react-apollo';\nimport { ONCHANGE_SEARCH } from '../api/queries';\nimport { Search, Grid } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\n\nconst initialState = {\n    isLoading: false,\n    results: [],\n    value: '',\n    preventLoop: 1,\n    redirect: false,\n    selectedSongData: ''\n}\n\nexport default class OnChangeSearch extends React.Component {\n    state = initialState\n\n    handleResultSelect = (e, { result }) => {\n        let { songData, allSongs } = this.state\n        if (result.key === '@') {\n            let selectedSongData = { searchSong: allSongs }\n            this.setState({ value: result.title, redirect: true, selectedSongData })\n        } else {\n            let selectedSongData = { searchSong: [songData[result.key]] }\n            this.setState({ value: result.title, redirect: true, selectedSongData })\n        }\n    }\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: false, value, preventLoop: 1, results: [] })\n        console.log(this.props)\n        this.props.switchtab('home')\n    }\n\n    handleResData = (data) => {\n        if (data.onChangeSearch.length > 0) {\n            let top4Res = [];\n            let rawData = [];\n            for (let z = 0; z < 4; z++) {\n                let apiRes = data.onChangeSearch[z]\n                let onSearchData;\n                if (z < 1) {\n                    onSearchData = {\n                        key: '@',\n                        title: apiRes.artist,\n                        description: 'Search All',\n                        image: ''\n                    }\n                } else {\n                    onSearchData = {\n                        key: z,\n                        title: apiRes.artist,\n                        description: apiRes.track,\n                        image: apiRes.artwork\n                    }\n                }\n                rawData.push(apiRes)\n                top4Res.push(onSearchData)\n            }\n            this.setState({\n                preventLoop: 0,\n                results: top4Res,\n                songData: rawData,\n                allSongs: data.onChangeSearch\n            })\n        }\n    }\n\n    render() {\n        let { value, results, preventLoop, redirect, selectedSongData } = this.state\n        let search = value\n        if (redirect) {\n            this.setState({ redirect: false })\n            return (\n                <Redirect to={{\n                    pathname: '/webplayer',\n                    state: { data: selectedSongData }\n                }} />\n            )\n        }\n        return (\n            <Query query={ONCHANGE_SEARCH} variables={{ search }}>\n                {({ loading, error, data }) => {\n                    if (!loading && preventLoop === 1) {\n                        this.handleResData(data)\n                    }\n                    return (\n                        <Grid>\n                            <Grid.Column width={8}>\n                                <Search\n                                    loading={loading}\n                                    onResultSelect={this.handleResultSelect}\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                        leading: true,\n                                    })}\n                                    results={results}\n                                    value={value}\n                                    {...this.props}\n                                />\n                            </Grid.Column>\n                        </Grid>\n                    );\n                }}\n            </Query>\n        )\n    }\n}\n","  import React from 'react';\nimport { Dropdown, Image } from 'semantic-ui-react';\nimport Auth from '../utils/Auth';\nconst trigger = (\n  <span>\n    <Image avatar src={'https://randomuser.me/api/portraits/lego/1.jpg'} /> {Auth.getUserName()}\n  </span>\n)\n\nconst options = [\n  { key: 'profile', text: 'Profile', icon: 'user', href:'/#profile' },\n  { key: 'sign-out', text: 'Sign Out', icon: 'sign out', onClick: () => Auth.signOutUser() }\n]\n\nconst NavBarDropDown = () => (\n  <Dropdown\n    trigger={trigger}\n    options={options}\n    pointing='top right'\n    icon={null}\n  />\n)\n\nexport default NavBarDropDown\n","import React, { Component } from 'react'\nimport { Menu, Image } from 'semantic-ui-react'\nimport Auth from '../utils/Auth'\nimport OnChangeSearch from './onChangeSearch';\nimport NavBarDropDown from './dropdown';\n\nexport default class Navbar extends Component {\n  state = { activeItem: 'home' }\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name })\n  }\n\n  userStatus = () => {\n    const { activeItem } = this.state\n    if (Auth.getAuth() === true) {\n      return (\n        <Menu.Item>\n          <NavBarDropDown />\n        </Menu.Item>\n      )\n    } else {\n      return <Menu.Item\n        name='not logged in'\n        active={activeItem === 'login'}\n        onClick={this.handleItemClick}\n        href='/#login'\n      />\n    }\n  }\n\n  logo = () => {\n    return (\n      <Image src=\"/audago.png\" size='small'></Image>\n    )\n  }\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu inverted  secondary className=\"navbar\">\n        <Menu.Header\n          style={{ margin: 10, color: 'teal' }}\n          content={this.logo()}\n        />\n        <Menu.Item\n          name='home'\n          active={activeItem === 'home'}\n          href=\"#\"\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          content={<s>Explore</s>}\n          active={activeItem === 'explore'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          content={<s>About</s>}\n          active={activeItem === 'about'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Menu position='right'>\n          <Menu.Item>\n            <OnChangeSearch />\n          </Menu.Item>\n          {this.userStatus()}\n        </Menu.Menu>\n      </Menu>\n    )\n  }\n}\n","import React from 'react';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { LOGIN_CHECK } from '../api/queries';\nimport { Mutation } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport Auth from '../utils/Auth';\nimport Navbar from '../components/navbar';\n\nexport default class Login extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    status: Auth.getAuth(),\n    message: '',\n  }\n\n  setClientToken = (token) => {\n    localStorage.setItem('sudo', token)\n  }\n\n  renderError = () => {\n    if (!this.state.status && this.state.message) {\n      return (<Message negative>\n        <Message.Header>{this.state.message}</Message.Header>\n      </Message>)\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    let { username, password, status } = this.state\n    if (status) {\n      Auth.userLogin(status, username)\n      return <Redirect to='/' />\n    }\n    return (\n      <div className=\"bg\">\n        <Navbar />\n        <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as='h2' inverted textAlign='center'>\n              {/* <Image src='/logo.png' /> */}\n              Log-in to your account\n      </Header>\n            <Form size='large'>\n              <Segment stacked>\n                <Form.Input fluid icon='user' name='username' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\n                <Form.Input fluid icon='lock' name='password' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\n                {this.renderError()}\n                <Mutation mutation={LOGIN_CHECK} variables={{ username, password }}\n                  update={(cache, { data }) => {\n                    this.setState({\n                      status: data.loginCheck.status,\n                      message: data.loginCheck.response\n                    });\n                    this.setClientToken(data.loginCheck.response)\n                  }\n                  }\n                >\n                  {loginCheck => (\n                    <Button type=\"submit\" color='teal' fluid size='large' onClick={loginCheck}>\n                      Login\n                  </Button>\n                  )}\n                </Mutation>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <a href='#signup'>Sign Up</a>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Segment, Message, Popup, List } from 'semantic-ui-react';\nimport { ADD_USER } from '../api/queries';\nimport { Mutation } from 'react-apollo';\nimport Navbar from '../components/navbar';\n\n\nexport default class Signup extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    image: \"\",\n    active: true,\n    gql_res: {},\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  renderError = () => {\n    let { gql_res } = this.state\n    if (!gql_res.status && gql_res.response) {\n      return (<Message negative>\n        <Message.Header>{gql_res.response}</Message.Header>\n      </Message>)\n    }\n  }\n\n\n  render() {\n    let { firstName, lastName, username, email, password, image, active } = this.state\n    let account = {\n      firstName,\n      lastName,\n      username,\n      email,\n      password,\n      image,\n      active\n    }\n    if (this.state.gql_res.status) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"bg\" style={{ height: '100vh' }}>\n        <Navbar />\n        <Grid style={{ margin: 50 + 'px' }} textAlign='center' verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as='h2' inverted textAlign='center'>\n              Create an account\n      </Header>\n            <Form size='large'>\n              <Segment stacked>\n                <Form.Input name='firstName' fluid icon='user' iconPosition='left' placeholder='Firstname' onChange={this.handleChange} />\n                <Form.Input name='lastName' fluid icon='user' iconPosition='left' placeholder='Lastname' onChange={this.handleChange} />\n                <Form.Input name='username' fluid icon='user' iconPosition='left' placeholder='Username' onChange={this.handleChange} />\n                <Form.Input name='email' fluid icon='mail' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\n                <Popup trigger={\n                  <Form.Input name='password' fluid icon='lock' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />} wide>\n                  <Header as='h2'>\n                    A strong password requires:\n                    </Header>\n                  <List bulleted>\n                    <List.Item>More than 8 Characters</List.Item>\n                    <List.Item>Atleast 1 Uppercase letter</List.Item>\n                    <List.Item>Atleast 1 Lowercase letter</List.Item>\n                    <List.Item>Atleast 1 Special character (!@#$%^&*)</List.Item>\n                    <List.Item>Atleast 1 Number</List.Item>\n                  </List>\n                </Popup>\n                <Form.Input name='confirm' fluid icon='lock' iconPosition='left' placeholder='Confirm Password' type='password' onChange={this.handleChange} />\n                <Mutation mutation={ADD_USER} variables={{ account }}\n                  update={(cache, { data }) => {\n                    console.log(data)\n                    this.setState({ gql_res: data.createAccount })\n                  }\n                  }\n                >\n                  {createAccount => (\n                    <Button type=\"submit\" color='teal' fluid size='large' onClick={createAccount}>\n                      Signup\n                  </Button>\n                  )}\n                </Mutation>\n                {this.renderError()}\n              </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n\n}","import React from 'react';\nimport Navbar from '../components/navbar';\nimport { Header, Button } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nexport default class HomePage extends React.Component {\n    state = {\n        redirect: false\n    }\n\n    render() {\n        let { redirect } = this.state\n        if (redirect) {\n            return <Redirect to='/webplayer' />\n        }\n        return (\n            <div className=\"bg\">\n                <Navbar />\n                <Header as='h1' icon textAlign='center' inverted style={{ fontSize: 40, marginTop: '4em' }}>\n                    <Header.Content>\n                        Lose yourself in\n                  50 million songs.\n      </Header.Content>\n                    <Button onClick={() => this.setState({ redirect: true })}>Start Listening</Button>\n                </Header>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Button, Dimmer, Image } from 'semantic-ui-react'\nimport Auth from '../utils/Auth'\nimport { FOLLOW_PLAYLIST, UNFOLLOW_PLAYLIST } from '../api/queries'\nimport { Mutation } from 'react-apollo';\n\nexport default class cards extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: Auth.getUserName(),\n      playlist: this.props.playlist_meta.name\n    }\n  }\n\n  handleShow = () => this.setState({ active: true })\n  handleHide = () => this.setState({ active: false })\n\n  intialPlayer = (playlist) => {\n    this.setState({ activePlaylist: playlist })\n    let songList = [];\n    for (const track of this.props.songs) {\n      songList.push(track.song);\n    }\n    this.props.playTrack(songList, 0)\n  }\n\n  resetCard = () => {\n    this.setState({\n      active: false\n    })\n  }\n\n  renderFollowButton = () => {\n    let { username, playlist } = this.state;\n    let follower_list = this.props.playlist_meta.follower_list\n    if (follower_list.includes(Auth.getUserName())) {\n      return (\n        <Mutation mutation={UNFOLLOW_PLAYLIST} variables={{ username, playlistName: playlist }}>\n          {unfollowPlaylist => (\n            <Button icon=\"heart\" color='red' onClick={unfollowPlaylist}></Button>\n          )}\n        </Mutation>\n      )\n    } else {\n      return (\n        <Mutation mutation={FOLLOW_PLAYLIST} variables={{ username, playlistName: playlist }}>\n          {followPlaylist => (\n            <Button icon=\"heart outline\" color='red' onClick={followPlaylist}></Button>\n          )}\n        </Mutation>\n      )\n    }\n  }\n\n  render() {\n    let { image, index } = this.props\n    const { active } = this.state\n    const content = (\n      <div>\n        <Button primary icon=\"play\" onClick={() => this.intialPlayer(index)}></Button>\n        {this.renderFollowButton()}\n      </div>\n    )\n\n    return (\n      <Dimmer.Dimmable\n        as={Image}\n        dimmed={active}\n        dimmer={{ active, content }}\n        onMouseEnter={this.handleShow}\n        onMouseLeave={this.handleHide}\n        size='small'\n        src={image}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Header, Button, List, Icon, Popup } from 'semantic-ui-react'\nimport { DELETE_TRACK } from '../api/queries';\nimport Auth from '../utils/Auth';\nimport { Query } from 'react-apollo';\n\nexport default class songlist extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: Auth.getUserName(),\n      delete: false,\n      trackInfo: {},\n      open: false\n    }\n  }\n\n  playTrack = (track) => {\n    let songList = [];\n    let startTrack;\n    for (const playlist of this.props.data) {\n      if (playlist.name === this.props.choice) {\n        for (const song of playlist.songs) {\n          songList.push(song.song);\n        }\n      }\n    }\n    startTrack = songList.indexOf(track);\n    this.playSong(songList, startTrack);\n  }\n\n  async playSong(songList, startTrack) {\n    if (!this.props.from) {\n      let index = startTrack;\n      let x = document.querySelector(\"#player\");\n      x.src = songList[index];\n      index++;\n      var playPromise = x.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(_ => {\n          x.addEventListener('ended', async () => {\n            if (index !== songList.length) {\n              await this.playSong(songList, index);\n            } else {\n              await this.playSong(songList, 0);\n            }\n          });\n        })\n          .catch(error => {\n          });\n      }\n    } else {\n      this.props.playTrack(songList, startTrack);\n    }\n  }\n\n  deleteTrack = (event) => {\n    let trackInfo = { track: event.target.id, artist: '', playlist_name: this.props.choice }\n\n    for (const playlist of this.props.data) {\n      if (playlist.name === this.props.choice) {\n        for (const song of playlist.songs) {\n          if (song.track === trackInfo.track) {\n            trackInfo.artist = song.artist\n          }\n        }\n      }\n    }\n    this.setState({\n      delete: true,\n      trackInfo\n    });\n  }\n\n  renderDelete = () => {\n    if (this.state.delete) {\n      return (\n        <Query query={DELETE_TRACK} variables={{ username: this.state.username, trackInfo: this.state.trackInfo }}>\n          {({ loading, error, data }) => {\n            if (loading) return 'Loading...';\n            if (error) return `Error! ${error.message}`;\n            console.log(data)\n            return (\n              <div>\n                {this.buildList()}\n              </div>\n            )\n          }}\n        </Query>\n      )\n    }\n  }\n\n  renderDeleteState = () => {\n    if (this.state.delete) {\n      this.setState({\n        delete: false\n      });\n    }\n  }\n\n  renderRemove = (song, creator) => {\n    if (this.state.username === creator && !this.props.from) {\n      return (\n        <List.Content floated='right'>\n          {this.renderDelete()}\n          <Popup basic content='Remove from playlist' trigger={<Icon inverted id={song.track} ref={song.artist} onClick={this.deleteTrack} link name='remove' />} />\n          {this.renderDeleteState()}\n        </List.Content>\n      )\n    }\n  }\n\n  buildList = () => {\n    let playlists = this.props.data;\n    let listItems = [];\n    let index = 0;\n    for (const playlist of playlists) {\n      if (playlist.name === this.props.choice) {\n        let songs = playlist.songs;\n        for (const song of songs) {\n\n          listItems.push(\n            <List.Item key={index}>\n            <Button inverted floated='left' size='mini' onClick={() => this.playTrack(song.song)} style={{ marginTop: 10 }} icon>\n              <Icon name='play'/>\n            </Button>\n              <List.Header>\n                {song.track}\n                  </List.Header>\n              <List.Description>{song.artist} | {song.album}</List.Description>\n              {this.renderRemove(song, playlist.creator)}\n\n            </List.Item>\n          )\n          index++;\n        }\n      }\n    }\n    return listItems;\n  }\n\n  render() {\n    let choice = this.props.choice;\n    return (\n      <div>\n        <Button onClick={this.props.reset} floated='left' size='small' icon='angle left' />\n        <Header centered='true' as='h2' inverted>\n          {choice}\n        </Header>\n        <List celled relaxed inverted>\n          {this.buildList()}\n        </List>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport { ALL_PLAYLISTS } from '../api/queries';\nimport '../styling/App.css';\nimport { Query } from 'react-apollo';\nimport PlaylistCards from './playlistCards';\nimport SongList from '../components/songlist';\n\nexport default class WebplayerPlaylists extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewSongs: false,\n            data: [],\n            choice: ''\n        }\n    }\n\n    playTrack = (songList, item) => {\n        let index = item\n        let x = document.querySelector(\"#player\");\n        x.src = songList[index];\n        index++;\n        var playPromise = x.play();\n\n        if (playPromise !== undefined) {\n            playPromise.then(_ => {\n                x.addEventListener('ended', async () => {\n                    if (index !== songList.length) {\n                        await this.playTrack(songList, index);\n                    } else {\n                        await this.playTrack(songList, 0);\n                    }\n                });\n            })\n                .catch(error => {\n                });\n        }\n    }\n    viewSongs = (data, choice) => {\n        this.setState({\n            viewSongs: true,\n            data,\n            choice\n        });\n    }\n\n    renderSongs = () => {\n        return (\n            <SongList\n                data={this.state.data}\n                choice={this.state.choice}\n                from='webplayer'\n                playTrack={this.playTrack}\n                reset={this.reset}\n            />\n        )\n    }\n\n    renderPlaylists = () => (\n        <Query query={ALL_PLAYLISTS} pollInterval={500}>\n            {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n                let playlistData = data.allPlaylists.playlists;\n                let songTiles = [];\n                for (let z = 0; z < playlistData.length; z++) {\n                    let playlist = playlistData[z];\n                    if (playlist.songs.length > 0) {\n                        songTiles.push(\n                            <div key={z} className=\"cardDiv\">\n                                <PlaylistCards\n                                    image={playlist.songs[0].artwork}\n                                    songs={playlist.songs}\n                                    playTrack={this.playTrack}\n                                    playlist_meta={playlist}\n                                    index={z}\n                                /><br />\n                                <strong className='playlistSelect' onClick={() => this.viewSongs(playlistData, playlist.name)}>{playlist.name}</strong>\n                            </div>\n                        )\n                    }\n                }\n                return songTiles\n            }}\n        </Query>\n    )\n\n    reset = () => {\n        this.setState({\n            viewSongs: false,\n            choice: ''\n        });\n    }\n\n    renderData = () => {\n        if (this.state.viewSongs) {\n            return (\n                <div>\n                    {this.renderSongs()}\n                </div>\n            )\n        } else {\n            return (\n                <Card.Group centered itemsPerRow={6}>\n                    {this.renderPlaylists()}\n                </Card.Group>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderData()}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button, Dimmer, Image } from 'semantic-ui-react'\nimport PlaylistPopup from '../components/webplayerPlaylists'\nexport default class cards extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    }\n  }\n\n  handleShow = () => this.setState({ active: true })\n  handleHide = () => this.setState({ active: false })\n\n  intialPlayer = (track) => {\n    this.setState({activeTrack:track})\n    this.props.playTrack(track)\n  }\n\n  resetCard = () => {\n    this.setState({\n      active:false\n    })\n  }\n\n  render() {\n    let {image,index,song_meta} = this.props\n    const { active } = this.state\n    const content = (\n      <div>\n        <Button primary icon=\"play\" onClick={() => this.intialPlayer(index)}></Button>\n        <PlaylistPopup song={song_meta} reset={this.resetCard}/>\n      </div>\n    )\n\n    return (\n      <Dimmer.Dimmable\n        as={Image}\n        dimmed={active}\n        dimmer={{ active, content }}\n        onMouseEnter={this.handleShow}\n        onMouseLeave={this.handleHide}\n        size='small'\n        src={image}\n      />\n    )\n  }\n}\n","import React from 'react';\n\nexport default class Player extends React.Component{\n    render(){\n      let { source } = this.props\n        return(\n            <div className=\"audioPlayer\">\n            <audio id=\"player\" controls>\n              <source src=\"\" />\n            </audio>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport Auth from '../utils/Auth';\n\nexport default class Sidebar extends React.Component {\n\n    tabSwitch = (selected) => {\n        this.props.setTab(selected)\n    }\n\n    render() {\n        return (\n            <SideNav className=\"sidebar\"\n                onSelect={(selected) => {\n                    if (selected === 'signout') return Auth.signOutUser()\n                    this.tabSwitch(selected)\n                }}\n            >\n                <SideNav.Toggle />\n                <SideNav.Nav defaultSelected=\"home\">\n                    <NavItem eventKey=\"home\">\n                        <NavIcon>\n                            <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Home\n            </NavText>\n                    </NavItem>\n                    <NavItem eventKey=\"playlist\">\n                        <NavIcon>\n                            <i className=\"fas fa-list\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Playlist\n            </NavText>\n                    </NavItem>\n\n                    <NavItem eventKey=\"more\">\n                        <NavIcon>\n                            <i className=\"fa fas fa-cogs\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Settings\n            </NavText>\n                        <NavItem >\n                            <NavText>\n                                Profile\n                            </NavText>\n                        </NavItem>\n                        <NavItem eventKey=\"manage_playlist\">\n                            <NavText>\n                                Manage playlists\n                            </NavText>\n                        </NavItem>\n                    </NavItem>\n\n                    <NavItem eventKey=\"signout\">\n                        <NavIcon>\n                                <i className=\"fas fa-sign-out-alt\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                            <NavText>\n                                Signout\n            </NavText>\n                    </NavItem>\n                </SideNav.Nav>\n            </SideNav>\n                )\n            }\n        }\n","import React from 'react';\nimport '../styling/App.css';\nimport { Container, Card, Grid } from 'semantic-ui-react';\nimport Cards from '../components/card';\nimport Player from '../components/player';\nimport SidebarA from '../components/sidebar';\nimport OnChangeSearch from '../components/onChangeSearch';\nimport Playlists from '../components/webplayerPlaylists';\nimport { Redirect } from 'react-router-dom'\nexport default class Webplayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_Tab:'',\n      track:''\n    }\n  }\n\n  playTrack = (track) => {\n    let song_data = this.props.location.state.data.searchSong\n    // let x = document.querySelector(\"#player\");\n    this.setState({track: song_data[track].song})\n    // x.src = song_data[track].song\n    // x.play();\n  }\n\n  renderTab = (tab) => {\n    if(tab === undefined) tab = 'home'\n    if(tab === 'home') return this.renderData()\n    if(tab === 'playlist') return <Playlists />\n    if(tab === 'manage_playlist') return <Redirect to='/profile'/>\n  }\n\n  setTab = (tab) => {\n      this.setState({current_Tab:tab})\n  }\n\n  renderData = () => {\n    if (this.props.location.state !== undefined) {\n      let song_data = this.props.location.state.data.searchSong\n      let songTiles = [];\n      for (let z = 0; z < song_data.length; z++) {\n        songTiles.push(\n          <div key={z} className=\"cardDiv\">\n            <Cards\n              image={song_data[z].artwork}\n              artist={song_data[z].artist}\n              track={song_data[z].track}\n              song={song_data[z].song}\n              playTrack={this.playTrack}\n              song_meta={song_data[z]}\n              index={z}\n            /><br />\n            <strong>{song_data[z].track}</strong>\n          </div>\n        )\n      }\n      return <Card.Group centered itemsPerRow={6}>{songTiles}</Card.Group>\n    }\n  }\n\n  render() {\n    let { current_Tab, track } = this.state\n    return (\n      <div className='webplayer'>\n        <SidebarA setTab={this.setTab}/>\n        <div className=\"cardContainer\">\n          <Grid >\n            <Grid.Row centered><OnChangeSearch switchtab={this.setTab} /></Grid.Row>\n          </Grid>\n          <Container style={{ margin: 15 }}>\n          {this.renderTab(current_Tab)}\n          </Container>\n        </div>\n        <Player source={track}/>\n      </div>\n    )\n  }\n\n\n}\n","import React, { Component } from 'react'\nimport { Header, Grid, Input, Button, Message, Icon, Modal, Divider, Popup, List } from 'semantic-ui-react'\nimport { USER_DATA, UPDATE_USER, UPDATE_PASSWORD } from '../api/queries';\nimport { Query, Mutation } from 'react-apollo';\nimport Auth from '../utils/Auth';\n\nexport default class settings extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: Auth.getUserName(),\n            firstName: '',\n            lastName: '',\n            email: '',\n            response: '',\n            status: false,\n            modalOpen: false,\n            currentPass: '',\n            newPass: '',\n            testPass: '',\n            modalError: false\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    renderUserSettings = () => (\n        <Query query={USER_DATA} variables={{ username: Auth.getUserName() }} pollInterval={500}>\n            {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n                let info = data.userData.user;\n                return (\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Header inverted floated='left' as='h4'>\n                                    Username: {this.state.username}\n                                </Header>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={7}>\n                                <Input style={{ width: 200, float: 'left' }} label={{ tag: false, color: 'teal', content: 'First name' }} placeholder={info.firstName} name='firstName' onChange={this.handleChange} />\n                            </Grid.Column>\n                            <Grid.Column width={9}>\n                                <Input style={{ width: 200, float: 'left' }} label={{ tag: false, color: 'teal', content: 'Last name' }} placeholder={info.lastName} name='lastName' onChange={this.handleChange} />\n                            </Grid.Column>\n                        </Grid.Row>\n                        {this.renderEmail(info)}\n                    </Grid>\n                )\n            }}\n        </Query>\n    )\n\n    renderMessage = () => {\n        if (this.state.status && this.state.response) {\n            return (\n                <Message positive>\n                    <Message.Header>{this.state.response}</Message.Header>\n                </Message>\n            )\n        }\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => {\n        this.setState({\n            modalOpen: false,\n            modalError: false\n        })\n    }\n\n    handleCheck = (info) => {\n        if (this.state.newPass === this.state.testPass) {\n            if (info.status) {\n                this.setState({ modalOpen: false })\n            } else {\n                this.setState({\n                    modalError: true,\n                    response: info.response\n                });\n            }\n        } else {\n            this.setState({\n                modalError: true,\n                response: info.response\n            });\n        }\n    }\n\n    renderEmail = (info) => {\n        return (\n            <Grid.Row>\n                <Grid.Column width={10}>\n                    <Input fluid label={{ tag: false, color: 'teal', content: 'Email' }} placeholder={info.email} name='email' onChange={this.handleChange} />\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n\n    handleModalError = () => {\n        if (this.state.modalError) {\n            return (\n                <Message style={{ margin: 0 }} negative>\n                    <Message.Header>{this.state.response}</Message.Header>\n                </Message>\n            )\n        }\n    }\n\n\n    render() {\n        let { username, firstName, lastName, email, currentPass, newPass, testPass } = this.state;\n        return (\n            <div>\n                {this.renderUserSettings()}\n                <br />\n                {this.renderMessage()}\n                <Mutation mutation={UPDATE_USER} variables={{ username, updateData: { firstName, lastName, email } }}\n                    update={(cache, { data }) => {\n                        this.setState({\n                            response: data.updateUser.response,\n                            status: data.updateUser.status\n                        });\n                    }\n                    }\n                >\n                    {updateInfo => (\n                        <Button type=\"submit\" color='teal' onClick={updateInfo}>\n                            Update\n                    </Button>\n                    )}\n                </Mutation>\n                <Modal\n                    trigger={<Button onClick={this.handleOpen}>Change Password</Button>}\n                    open={this.state.modalOpen}\n                    onClose={this.handleClose}\n                    size='mini'\n                >\n                    <Header icon='lock' content='Change password' />\n                    <Modal.Content>\n                        <Header as='h4'> Current Password\n                            <Input name='currentPass' type='password' onChange={this.handleChange}></Input>\n                        </Header>\n                    </Modal.Content>\n                    <Divider style={{ margin: 0 }} />\n                    <Modal.Content>\n                        <Header as='h4'> New Password <br />\n                            <Input name='newPass' type='password' onChange={this.handleChange}></Input>\n                            <Popup trigger={<Icon size='mini' style={{ float: 'right' }} circular name='info' />} wide>\n                                <Header as='h2'>\n                                    A strong password requires:\n                                </Header>\n                                <List bulleted>\n                                    <List.Item>More than 8 Characters</List.Item>\n                                    <List.Item>Atleast 1 Uppercase letter</List.Item>\n                                    <List.Item>Atleast 1 Lowercase letter</List.Item>\n                                    <List.Item>Atleast 1 Special character (!@#$%^&*)</List.Item>\n                                    <List.Item>Atleast 1 Number</List.Item>\n                                </List>\n                            </Popup>\n                        </Header>\n                        <Header as='h4'> Confirm Password\n                        <Input style={{ marginTop: 3 }} name='testPass' type='password' onChange={this.handleChange}></Input>\n                        </Header>\n                    </Modal.Content>\n                    {this.handleModalError()}\n                    <Modal.Actions>\n                        <Button color='red' onClick={this.handleClose} inverted>\n                            <Icon name='cancel' /> Cancel\n                        </Button>\n                        <Mutation mutation={UPDATE_PASSWORD} variables={{ username, currentPass, newPass, testPass }}\n                            update={(cache, { data }) => {\n                                let info = data.updatePassword;\n                                this.handleCheck(info);\n                            }\n                            }\n                        >\n                            {updatePass => (\n                                <Button color='green' onClick={updatePass} inverted>\n                                    <Icon name='check' /> Update\n                            </Button>\n                            )}\n                        </Mutation>\n                    </Modal.Actions>\n                </Modal>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Icon, Button, Message, Card, Grid, Container, Modal, Input, Header, Confirm } from 'semantic-ui-react';\nimport { USERS_PLAYLIST, NEW_PLAYLIST, UNFOLLOW_PLAYLIST } from '../api/queries';\nimport { Query, Mutation } from 'react-apollo';\nimport SongList from './songlist';\nimport Auth from '../utils/Auth';\nimport AudioPlayer from './player';\n\nexport default class PlaylistDisplay extends React.Component {\n    state = {\n        username: Auth.getUserName(),\n        showSongs: false,\n        playlistChoice: '',\n        modalOpen: false,\n        editSettings: false,\n        modalError: false,\n        response: '',\n        playlistName: '',\n        open: false\n    }\n\n    open = () => this.setState({ open: true })\n    close = () => this.setState({ open: false })\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => {\n        this.setState({\n            modalOpen: false,\n            modalError: false,\n            playlistName: ''\n        })\n    }\n\n    handleModalError = () => {\n        if (this.state.modalError && this.state.response) {\n            return (\n                <Message style={{ margin: 0 }} negative>\n                    <Message.Header>{this.state.response}</Message.Header>\n                </Message>\n            )\n        }\n    }\n\n    handleCheck = (res) => {\n        if (res.newPlaylist.status) {\n            this.setState({\n                modalOpen: false,\n                modalError: false\n            })\n        } else {\n            this.setState({\n                modalError: true,\n                response: res.newPlaylist.response\n            })\n        }\n    }\n\n    displaySongs = (value) => {\n        this.setState({\n            showSongs: true,\n            playlistChoice: value\n        });\n    }\n\n    reset = () => {\n        this.setState({\n            showSongs: false,\n            playlistChoice: ''\n        });\n    }\n\n    render() {\n        return (\n            <Query query={USERS_PLAYLIST} variables={{ username: Auth.getUserName() }} pollInterval={500}>\n                {({ loading, error, data }) => {\n                    if (loading) return 'Loading...';\n                    if (error) return `Error! ${error.message}`;\n                    let playlistCards = [];\n                    let response;\n                    let index = 0;\n                    if (this.state.showSongs) {\n                        return (\n                            <Grid.Row>\n                                <Grid.Column>\n                                    <Mutation mutation={UNFOLLOW_PLAYLIST} variables={{ username: this.state.username, playlistName: this.state.playlistChoice }}\n                                        update={(cache, { data }) => {\n                                            this.reset() \n                                        }\n                                        }\n                                    >\n                                        {unfollow => (\n                                            <div>\n                                                <Button onClick={this.open} floated='right' basic inverted color='teal'>\n                                                    Unfollow\n                                                </Button>\n                                                <Confirm\n                                                    size='mini'\n                                                    open={this.state.open}\n                                                    onCancel={this.close}\n                                                    onConfirm={unfollow}\n                                                />\n                                            </div>\n                                        )}\n                                    </Mutation>\n                                    <SongList\n                                        data={data.playlistsForUser.playlists}\n                                        choice={this.state.playlistChoice}\n                                        reset={this.reset}\n                                    />\n                                    <AudioPlayer />\n                                </Grid.Column>\n                            </Grid.Row>\n                        )\n                    } else {\n                        if (data.playlistsForUser.playlists) {\n                            for (const playlist of data.playlistsForUser.playlists) {\n                                let followerString = 'followers: ' + playlist.followers;\n                                let songString = 'songs: ' + playlist.song_count;\n                                playlistCards.push(\n                                    <Card\n                                        color='teal'\n                                        header={playlist.name}\n                                        meta={followerString}\n                                        description={songString}\n                                        key={index}\n                                        onClick={() => { this.displaySongs(playlist.name) }}\n                                    />\n                                )\n                                index++;\n                            }\n                        }\n                        response = (\n                            <Container>\n                                <Grid.Row width={16}>\n                                    <Card.Group itemsPerRow={3}>\n                                        {playlistCards}\n                                        <Modal\n                                            trigger={\n                                                <Card onClick={this.handleOpen} color='teal' key='create'>\n                                                    <Card.Content>\n                                                        <Button style={{ width: 50, height: 50 }} circular icon='add' />\n                                                    </Card.Content>\n                                                </Card>}\n                                            open={this.state.modalOpen}\n                                            basic\n                                            onClose={this.handleClose}\n                                            size='mini'\n                                        >\n                                            <Header icon='music' content='Give your playlist a name' />\n                                            <Modal.Content>\n                                                <Input transparent inverted placeholder='Playlist name..' name='playlistName' type='text' onChange={this.handleChange}></Input>\n                                            </Modal.Content>\n                                            {this.handleModalError()}\n                                            <Modal.Actions>\n                                                <Button color='red' onClick={this.handleClose} inverted>\n                                                    <Icon name='cancel' /> Cancel\n                                                </Button>\n                                                <Mutation mutation={NEW_PLAYLIST} variables={{ name: this.state.playlistName, creator: this.state.username }}\n                                                    update={(cache, { data }) => {\n                                                        let res = data;\n                                                        this.handleCheck(res);\n                                                    }\n                                                    }\n                                                >\n                                                    {newPlaylist => (\n                                                        <Button color='green' onClick={newPlaylist} inverted>\n                                                            <Icon name='check' /> Create\n                                                        </Button>\n                                                    )}\n                                                </Mutation>\n                                            </Modal.Actions>\n                                        </Modal>\n                                    </Card.Group>\n                                </Grid.Row>\n                            </Container>);\n                    }\n                    return response;\n                }}\n            </Query>\n\n        )\n    }\n\n}\n","import React from 'react';\nimport { Image, Menu, Grid, Header, Container, Label } from 'semantic-ui-react';\nimport Settings from '../components/editSettings';\nimport PlaylistDisplay from '../components/profilePlaylist';\nimport { USER_DATA } from '../api/queries';\nimport { Query } from 'react-apollo';\nimport Auth from '../utils/Auth';\nimport Navbar from '../components/navbar';\n\n\nexport default class Profile extends React.Component {\n    state = {\n        activeItem: 'Playlists'\n    };\n\n    handleItemClick = (e, { name }) => {\n        this.setState({ activeItem: name });\n    };\n\n    setTab = (chosen_tab) => {\n      this.setState({activeItem: chosen_tab})\n    }\n\n    renderBannerInfo = () => (\n        <Query query={USER_DATA} variables={{ username: Auth.getUserName() }}>\n            {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n                return (\n                    <Header as='h1' style={{marginTop: 0.8 + 'em'}} inverted floated='left'>\n                        Hello,  {Auth.getUserName()} <br />\n                        <Label as='a' color='purple' image>\n                            Joined\n                    <Label.Detail>{data.userData.user.timeStamp.created}</Label.Detail>\n                        </Label>\n                    </Header>\n                )\n            }}\n        </Query>\n    )\n\n    renderItem = () => {\n        if (this.state.activeItem === 'Playlists') {\n            return (\n                <PlaylistDisplay />\n            )\n        } else if (this.state.activeItem === 'Settings') {\n            return (\n                <Settings />\n            )\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"profile\" style={{backgroundColor:'black'}}>\n                <Navbar />\n                <Container style={{padding:10}}>\n                    <Grid>\n                        <Grid.Row style={{ paddingBottom: 0 }}>\n                            <Grid.Column width={16}>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row color='teal' style={{ marginTop: 15, borderRadius:10 }}>\n                            <Grid.Column width={2}>\n                                <Image style={{width:112, height:112}} circular src='https://react.semantic-ui.com/images/avatar/large/patrick.png' />\n                            </Grid.Column>\n                            <Grid.Column width={14}>\n                                {this.renderBannerInfo()}\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={16}>\n                                <Menu pointing secondary inverted>\n                                    <Menu.Item\n                                        name='Playlists'\n                                        active={this.state.activeItem === 'Playlists'}\n                                        onClick={this.handleItemClick}\n                                    >\n                                    </Menu.Item>\n                                    <Menu.Item\n                                        name='Settings'\n                                        active={this.state.activeItem === 'Settings'}\n                                        onClick={this.handleItemClick}\n                                    >\n                                    </Menu.Item>\n                                </Menu>\n                            </Grid.Column>\n                        </Grid.Row>\n                        {this.renderItem()}\n                    </Grid>\n                </Container>\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport HomePage from './pages/Homepage';\nimport Webplayer from './pages/Webplayer';\nimport Auth from './utils/Auth';\nimport { Redirect } from 'react-router-dom';\nimport Profile from './pages/Profile';\n\nconst Router = (props) => (\n\n  <HashRouter>\n    <Switch>\n    <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <Route exact path=\"/\" component={HomePage} />\n      <PrivateRoute exact path=\"/webplayer\" component={Webplayer} />\n      <PrivateRoute exact path=\"/profile\" component={Profile} />\n      {/* <PrivateRoute exact path=\"/edit-user\" component={Edit_User} /> */}\n    </Switch>\n  </HashRouter>\n)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      Auth.getAuth() ? (\n        <Component {...props} />\n      ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\"\n            }}\n          />\n        )\n    }\n  />\n);\n\n\nexport default Router;\n","import React from 'react'\nimport { Dimmer, Loader, Container } from 'semantic-ui-react'\n\nconst Loading = () => (\n  <div>\n      <Container style={{margin:50}}>\n    {/* <Segment> */}\n      <Dimmer active inverted>\n        <Loader size='large'>Loading</Loader>\n      </Dimmer>\n\n      {/* <Image src='/images/wireframe/paragraph.png' /> */}\n    {/* </Segment> */}\n    </Container>\n  </div>\n)\n\nexport default Loading\n","import React, { Component } from 'react';\nimport './styling/App.css';\nimport Router from './Router.jsx';\nimport Auth from './utils/Auth';\nimport Loading from './components/loader';\n\nclass App extends Component {\n  state = {\n    auth: false,\n    loading: true\n  }\n\n  async componentDidMount() {\n    this.setState({ auth: await Auth.check(), loading: false })\n  }\n\n  render() {\n    if(this.state.loading){\n      return(\n        <Loading />\n        )\n    }else{\n      return (\n      <div className=\"App\">\n        <Router />\n      </div>\n    );\n  }\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ApolloClient from 'apollo-boost';\nconst config ={\n\n    graphql: new ApolloClient({\n        uri: '/graphql',\n      })\n\n}\nexport default config","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styling/index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './utils/serviceWorker';\nimport config from './config'\nimport { ApolloProvider } from '@apollo/react-hooks';\n\n// const { loading, error, data } = useQuery(DATA);\n// console.log(data)\n\n\nReactDOM.render(\n  <ApolloProvider client={config.graphql}>\n    <App />\n  </ApolloProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}