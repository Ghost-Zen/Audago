{"version":3,"sources":["api/queries.js","utils/Auth.js","components/onChangeSearch.jsx","components/dropdown.jsx","components/navbar.jsx","pages/Login.jsx","pages/Signup.jsx","pages/Homepage.jsx","pages/Search.jsx","components/card.jsx","pages/Webplayer.jsx","components/songlist.jsx","components/editSettings.jsx","pages/Profile.jsx","Router.jsx","components/loader.jsx","App.jsx","utils/serviceWorker.js","config.js","index.js"],"names":["ADD_USER","gql","SEARCH_SONG","ONCHANGE_SEARCH","LOGIN_CHECK","USER_DATA","UPDATE_USER","UPDATE_PASSWORD","USERS_PLAYLIST","Auth","isAuthenticated","isUsername","token","check","jwt","localStorage","getItem","axios","post","then","res","data","response","client_id","userLogin","status","this","getToken","getAuth","getUserName","signOutUser","removeItem","window","location","reload","initialState","isLoading","results","value","preventLoop","redirect","selectedSongData","OnChangeSearch","state","handleResultSelect","e","result","searchSong","songData","id","setState","title","handleSearchChange","handleResData","onChangeSearch","length","top4Res","rawData","z","apiRes","onSearchData","artist","description","track","image","artwork","push","search","to","pathname","query","variables","loading","error","Grid","Column","width","onResultSelect","onSearchChange","_","debounce","leading","props","React","Component","trigger","Image","avatar","src","options","key","text","icon","href","onClick","NavBarDropDown","Dropdown","pointing","Navbar","activeItem","handleItemClick","name","userStatus","Menu","Item","active","logo","size","inverted","secondary","className","Header","style","margin","color","content","position","Login","username","password","message","setClientToken","setItem","renderError","Message","negative","handleChange","event","target","textAlign","height","verticalAlign","maxWidth","as","Form","Segment","stacked","Input","fluid","iconPosition","placeholder","onChange","type","mutation","update","cache","loginCheck","Button","Signup","firstName","lastName","email","confirm","gql_res","account","console","log","createAccount","HomePage","fontSize","marginTop","Content","cards","handleShow","handleHide","intialPlayer","activeTrack","playTrack","index","primary","Dimmer","Dimmable","dimmed","dimmer","onMouseEnter","onMouseLeave","Webplayer","song_data","x","document","querySelector","song","play","renderData","songTiles","undefined","Container","Card","Group","centered","itemsPerRow","controls","songlist","startTrack","songList","playlist","choice","songs","indexOf","playSong","buildList","playlists","listItems","List","floated","Description","album","Icon","playPromise","addEventListener","a","catch","divided","relaxed","settings","renderUserSettings","info","userData","user","Row","float","label","tag","renderEmail","renderMessage","positive","handleOpen","modalOpen","handleClose","modalError","handleCheck","newPass","testPass","handleModalError","currentPass","updateData","updateUser","updateInfo","Modal","open","onClose","Divider","Actions","updatePassword","updatePass","Profile","showSongs","playlistChoice","editSettings","reset","playlistDisplay","playlistCards","playlistsForUser","followerString","followers","songString","song_count","header","meta","displaySongs","warning","renderItem","paddingBottom","circular","PrivateRoute","component","rest","render","Router","exact","path","Loading","Loader","App","auth","Boolean","hostname","match","config","graphql","ApolloClient","uri","ReactDOM","client","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40bd9c53.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\nexport const ADD_USER = gql`\n  mutation($account:Account) {\n   createAccount (account:$account){\n        response,\n        status\n}\n    }\n`;\n\nexport const SEARCH_SONG = gql`\n  mutation($search:String) {\n   searchSong (search:$search){\n    track\n    artist\n    song\n    album\n    artwork\n   }\n  }\n`;\n\nexport const ONCHANGE_SEARCH = gql`\n  query($search:String) {\n  onChangeSearch(search:$search){\n\n      track\n      artist\n      song\n      album\n      artwork\n  }\n}\n`;\n\nexport const LOGIN_CHECK = gql`\n    mutation($username:String, $password:String) {\n      loginCheck (username:$username, password:$password){\n        response,\n        username,\n        status\n      }\n    }\n`;\n\nexport const USER_DATA = gql`\nquery($username:String){\n  userData(username:$username){\n    response,\n    user {\n      firstName\n      lastName\n      email\n      image\n    },\n    status\n  }\n}\n`;\n\nexport const DELETE_USER = gql`\n    mutation($username:String){\n      deleteUser (username:$username){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UPDATE_USER = gql`  \n    mutation($username:String, $updateData:UpdateData){\n      updateUser(username:$username, updateData: $updateData){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UPDATE_PASSWORD = gql`  \n    mutation($username:String, $currentPass:String, $newPass: String, $testPass:String){\n      updatePassword(username:$username, currentPass:$currentPass, newPass:$newPass, testPass:$testPass){\n        response,\n        status\n      }\n    }\n`;\n\nexport const NEW_PLAYLIST = gql`  \n    mutation($playlist:Playlist){\n      newPlaylist(playlist:$playlist){\n        response,\n        status\n      }\n    }\n`;\n\nexport const NEW_TRACK = gql`  \n    mutation($username:String, $track:PlaylistTrack){\n      newTrack(username:$username, track:$track){\n        response,\n        status\n      }\n    }\n`;\n\nexport const DELETE_TRACK = gql`  \n    mutation($username:String,$track:TrackInfo){\n      deleteTrack(username:$username,track:$track){\n        response,\n        status\n      }\n    }\n`;\n\nexport const FOLLOW_PLAYLIST = gql`  \n    mutation($username:String, $playlistName: String){\n      followPlaylist(username:$username, playlistName:$playlistName){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UNFOLLOW_PLAYLIST = gql`  \n    mutation($username:String, $playlistName: String){\n      unfollowPlaylist(username:$username, playlistName:$playlistName){\n        response,\n        status\n      }\n    }\n`;\n\nexport const USERS_PLAYLIST = gql`  \n  query($username:String) {\n    playlistsForUser(username:$username) {\n      playlists {\n        name\n        followers\n        song_count\n        songs {\n          track\n          artist\n          song\n          album\n          artwork\n        }\n      }\n      response\n      status\n    }\n  }\n`;\n\nexport const VERIFY_USER = gql`\n    mutation($jwt:String){\n      verifytoken(jwt:$jwt){\n        response\n      }\n    }\n\n`;","import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nconst Auth = {\n    isAuthenticated: false,\n    isUsername: \"\",\n    token: \"\",\n    async check() {\n        let jwt = {\n            token: \"\",\n        }\n        jwt.token = localStorage.getItem('sudo')\n        if (jwt !== \"\") {\n            await axios.post(`/verify`, jwt)\n            .then(res => {\n                this.isAuthenticated = res.data.response\n                this.isUsername = res.data.client_id\n                this.token = jwt.token\n            })\n        }\n    },\n    userLogin(status){\n        this.isAuthenticated = status\n    },\n    getToken() {\n        return this.token\n    },\n    getAuth() {\n    // return true; //uncomment this for dev, to bypass authentication, most services wont work if this is uncommented.\n        return this.isAuthenticated;\n    },\n    getUserName() {\n        return this.isUsername\n    },\n   signOutUser(){\n        localStorage.removeItem('sudo')\n        window.location.reload();\n        // return false;\n    }\n\n};\n\nexport default Auth;","import React from 'react'\nimport _ from 'lodash'\nimport { Query } from 'react-apollo';\nimport { ONCHANGE_SEARCH } from '../api/queries';\nimport { Search, Grid } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\n\nconst initialState = {\n    isLoading: false,\n    results: [],\n    value: '',\n    preventLoop: 1,\n    redirect: false,\n    selectedSongData: ''\n}\n\nexport default class OnChangeSearch extends React.Component {\n    state = initialState\n\n    handleResultSelect = (e, { result }) => {\n        let {songData} = this.state\n        let selectedSongData = {searchSong:[songData[result.id]]}\n        this.setState({ value: result.title, redirect: true, selectedSongData })\n    }\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, value, preventLoop: 1, results:[] })\n        this.setState({\n            isLoading: false,\n        })\n    }\n\n    handleResData = (data) => {\n        if (data.onChangeSearch.length > 0) {\n            let top4Res = [];\n            let rawData = [];\n            for (let z = 0; z < 4; z++) {\n                let apiRes = data.onChangeSearch[z]\n                let onSearchData = {\n                    id: z,\n                    title: apiRes.artist,\n                    description: apiRes.track,\n                    image: apiRes.artwork\n                }\n                rawData.push(apiRes)\n                top4Res.push(onSearchData)\n            }\n            this.setState({\n                preventLoop: 0,\n                results: top4Res,\n                songData: rawData\n            })\n        }\n    }\n\n    render() {\n        let { value, results, preventLoop, redirect, selectedSongData } = this.state\n        let search = value\n        if (redirect) {\n            this.setState({ redirect: false })\n            return (\n                <Redirect to={{\n                    pathname: '/webplayer',\n                    state: { data: selectedSongData }\n                }} />\n            )\n        }\n        return (\n            <Query query={ONCHANGE_SEARCH} variables={{ search }}>\n                {({ loading, error, data }) => {\n                    if (!loading && preventLoop === 1) {\n                        this.handleResData(data)\n                    }\n                    return (\n                        <Grid>\n                            <Grid.Column width={8}>\n                                <Search\n                                    loading={loading}\n                                    onResultSelect={this.handleResultSelect}\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                        leading: true,\n                                    })}\n                                    results={results}\n                                    value={value}\n                                    {...this.props}\n                                />\n                            </Grid.Column>\n                        </Grid>\n                    );\n                }}\n            </Query>\n        )\n    }\n}\n","import React from 'react';\nimport { Dropdown, Image } from 'semantic-ui-react';\nimport Auth from '../utils/Auth';\nimport { Redirect } from 'react-router-dom';\nconst trigger = (\n  <span>\n    <Image avatar src={'https://randomuser.me/api/portraits/lego/1.jpg'} /> {Auth.getUserName()}\n  </span>\n)\n\nconst options = [\n  { key: 'profile', text: 'Profile', icon: 'user', href:'/#profile' },\n  { key: 'sign-out', text: 'Sign Out', icon: 'sign out', onClick: () => Auth.signOutUser() }\n]\n\nconst NavBarDropDown = () => (\n  <Dropdown\n    trigger={trigger}\n    options={options}\n    pointing='top right'\n    icon={null}\n  />\n)\n\nexport default NavBarDropDown\n","import React, { Component } from 'react'\nimport { Input, Menu, Image } from 'semantic-ui-react'\nimport Auth from '../utils/Auth'\nimport OnChangeSearch from './onChangeSearch';\nimport NavBarDropDown from './dropdown';\n\nexport default class Navbar extends Component {\n  state = { activeItem: 'home' }\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name })\n  }\n\n  userStatus = () => {\n    const { activeItem } = this.state\n    if (Auth.getAuth() === true) {\n      return (\n        <Menu.Item>\n          <NavBarDropDown />\n        </Menu.Item>\n      )\n    } else {\n      return <Menu.Item\n        name='not logged in'\n        active={activeItem === 'login'}\n        onClick={this.handleItemClick}\n        href='/#login'\n      />\n    }\n  }\n\n  logo = () => {\n    return (\n      <Image src=\"/audago.png\" size='small'></Image>\n    )\n  }\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu inverted  secondary className=\"navbar\">\n        <Menu.Header\n          style={{ margin: 10, color: 'teal' }}\n          content={this.logo()}\n        />\n        <Menu.Item\n          name='home'\n          active={activeItem === 'home'}\n          href=\"#\"\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='explore'\n          active={activeItem === 'explore'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='about'\n          active={activeItem === 'about'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Menu position='right'>\n          <Menu.Item>\n            <OnChangeSearch />\n          </Menu.Item>\n          {this.userStatus()}\n        </Menu.Menu>\n      </Menu>\n    )\n  }\n}\n","import React from 'react';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { LOGIN_CHECK } from '../api/queries';\nimport { Mutation } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport Auth from '../utils/Auth';\nimport Navbar from '../components/navbar';\n\nexport default class Login extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    status: Auth.getAuth(),\n    message: '',\n  }\n\n  setClientToken = (token) => {\n    localStorage.setItem('sudo', token)\n  }\n\n  renderError = () => {\n    if (!this.state.status && this.state.message) {\n      return (<Message negative>\n        <Message.Header>{this.state.message}</Message.Header>\n      </Message>)\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    let { username, password,status } = this.state\n    if(status){\n      Auth.userLogin(status)\n      return  <Redirect to='/' />\n    }\n    return (\n      <div>\n      <Navbar />\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            {/* <Image src='/logo.png' /> */}\n            Log-in to your account\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input fluid icon='user' name='username' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\n              <Form.Input fluid icon='lock' name='password' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\n              {this.renderError()}\n              <Mutation mutation={LOGIN_CHECK} variables={{ username, password }}\n                update={(cache, { data }) => {\n                  this.setState({\n                    status: data.loginCheck.status,\n                    message: data.loginCheck.response\n                  });\n                  this.setClientToken(data.loginCheck.response)\n                }\n                }\n              >\n                {loginCheck => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={loginCheck}>\n                    Login\n                  </Button>\n                )}\n              </Mutation>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <a href='#signup'>Sign Up</a>\n          </Message>\n        </Grid.Column>\n      </Grid>\n      </div>\n    )\n  }\n\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react';\nimport { ADD_USER } from '../api/queries';\nimport { Mutation } from 'react-apollo';\nimport Navbar from '../components/navbar';\n\n\nexport default class Signup extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    image: \"\",\n    active: true,\n    gql_res: {},\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  renderError = () => {\n    let { gql_res } = this.state\n    if (!gql_res.status && gql_res.response) {\n      return (<Message negative>\n        <Message.Header>{gql_res.response}</Message.Header>\n      </Message>)\n    }\n  }\n\n\n  render() {\n    let { firstName, lastName, username, email, password, image, active } = this.state\n    let account = {\n      firstName,\n      lastName,\n      username,\n      email,\n      password,\n      image,\n      active\n    }\n    if (this.state.gql_res.status) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div style={{ height: '100vh' }}>\n        <Navbar />\n      <Grid style={{ margin: 50 + 'px' }} textAlign='center' verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Create an account\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input name='firstName' fluid icon='user' iconPosition='left' placeholder='Firstname' onChange={this.handleChange} />\n              <Form.Input name='lastName' fluid icon='user' iconPosition='left' placeholder='Lastname' onChange={this.handleChange} />\n              <Form.Input name='username' fluid icon='user' iconPosition='left' placeholder='Username' onChange={this.handleChange} />\n              <Form.Input name='email' fluid icon='mail' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\n              <Form.Input name='password' fluid icon='lock' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\n              <Form.Input name='confirm' fluid icon='lock' iconPosition='left' placeholder='Confirm Password' type='password' onChange={this.handleChange} />\n              <Mutation mutation={ADD_USER} variables={{ account }}\n                update={(cache, { data }) => {\n                  console.log(data)\n                  this.setState({ gql_res: data.createAccount })\n                }\n                }\n              >\n                {createAccount => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={createAccount}>\n                    Signup\n                  </Button>\n                )}\n              </Mutation>\n              {this.renderError()}\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n      </div>\n    )\n  }\n\n}","import React from 'react';\nimport Navbar from '../components/navbar';\nimport { Header, Button } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nexport default class HomePage extends React.Component {\n    state = {\n        redirect: false\n    }\n\n    render() {\n        let { redirect } = this.state\n        if (redirect) {\n            return <Redirect to='/login' />\n        }\n        return (\n            <div className=\"bg\">\n                <Navbar />\n                <Header as='h1' icon textAlign='center' inverted color='white' style={{ fontSize: 40, marginTop: '4em' }}>\n                    <Header.Content>\n                        Lose yourself in\n                  50 million songs.\n      </Header.Content>\n                    <Button onClick={() => this.setState({ redirect: true })}>Start Listening</Button>\n                </Header>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Button, Form, Grid, Header, Segment,Container } from 'semantic-ui-react'\nimport { SEARCH_SONG } from '../api/queries';\nimport { Redirect } from 'react-router-dom';\nimport { Mutation } from 'react-apollo'\nimport Navbar from '../components/navbar';\nexport default class Search extends React.Component {\n  state = {\n    search: \"\",\n    gql_res: \"\",\n    loading: false\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      search: event.target.value\n    })\n  }\n\n  render() {\n    let { search } = this.state\n    if(this.state.gql_res !== \"\"){\n      console.log(this.state.gql_res)\n      return(\n        <Redirect to={{pathname: '/webplayer',\n                  state: { data: this.state.gql_res }}} />\n        )\n    }\n    return (\n      <Container>\n        <Navbar />\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Search from over 30 million songs\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input fluid icon='music' iconPosition='left' placeholder='Search Song' onChange={this.handleChange} />\n\n              <Mutation mutation={SEARCH_SONG} variables={{ search }}\n              update={(cache, { data }) => {\n              this.setState({ gql_res: data,\n                              loading:true\n              })\n                }\n                }>\n                {runSearch => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={runSearch}>\n                    Search\n          </Button>\n                )}\n              </Mutation>\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n      </Container>\n    )\n  }\n\n}","import React, { Component } from 'react'\nimport { Button, Dimmer, Image } from 'semantic-ui-react'\n\nexport default class cards extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    }\n  }\n\n  handleShow = () => this.setState({ active: true })\n  handleHide = () => this.setState({ active: false })\n\n  intialPlayer = (track) => {\n    this.setState({activeTrack:track})\n    this.props.playTrack(track)\n  }\n\n  render() {\n    let {image,index} = this.props\n    const { active } = this.state\n    const content = (\n      <div>\n        {/* <Header as='h4' inverted>\n          {track}\n        </Header> */}\n\n        <Button primary icon=\"play\" onClick={() => this.intialPlayer(index)}></Button>\n        {/* <Button>View</Button> */}\n      </div>\n    )\n\n    return (\n      <Dimmer.Dimmable\n        as={Image}\n        dimmed={active}\n        dimmer={{ active, content }}\n        onMouseEnter={this.handleShow}\n        onMouseLeave={this.handleHide}\n        size='small'\n        src={image}\n      />\n    )\n  }\n}","import React from 'react';\nimport '../styling/App.css';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Card } from 'semantic-ui-react';\nimport Cards from '../components/card';\nimport Navbar from '../components/navbar';\nexport default class Webplayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTrack: ''\n    }\n  }\n\n  playTrack = (track) => {\n    let song_data = this.props.location.state.data.searchSong\n    let x = document.querySelector(\"#player\");\n    x.src = song_data[track].song\n    x.play();\n  }\n\n  // stopActiveTrack = () => {\n\n  // }\n\n  renderData = () => {\n    let song_data = this.props.location.state.data.searchSong\n    let songTiles = [];\n    for (let z = 0; z < song_data.length; z++) {\n      songTiles.push(\n        <div key={z} className=\"cardDiv\">\n          <Cards \n            image={song_data[z].artwork}\n            artist={song_data[z].artist}\n            track={song_data[z].track}\n            song={song_data[z].song}\n            playTrack={this.playTrack}\n            index={z}\n          /><br />\n          <strong>{song_data[z].track}</strong>\n        </div>\n      )\n    }\n    return songTiles\n  }\n\n  render() {\n    if (this.props.location.state === undefined) {\n      return <Redirect to=\"/\" />\n    } else {\n      return (\n        <div>\n          <Navbar />\n        <div className=\"cardContainer\">\n          <Container style={{ margin: 15 }}>\n            <Card.Group centered itemsPerRow={6}>\n              {this.renderData()}\n            </Card.Group>\n          </Container>\n        </div>\n          <div className=\"audioPlayer\">\n          <audio id=\"player\" controls>\n            <source src=\"\" />\n          </audio>\n        </div>\n        </div>\n      )\n    }\n  }\n\n}","import React, { Component } from 'react'\nimport { Header, Button, List, Image, Icon } from 'semantic-ui-react'\n\nexport default class songlist extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  playTrack = (track) => {\n    let songList = [];\n    let startTrack;\n    for (const playlist of this.props.data) {\n      if (playlist.name === this.props.choice) {\n        for (const song of playlist.songs) {\n          songList.push(song.song);\n        }\n      }\n    }\n    startTrack = songList.indexOf(track);\n    this.playSong(songList, startTrack);\n  }\n\n  async playSong(songList, startTrack) {\n    let index = startTrack;\n    let x = document.querySelector(\"#player\");\n    x.src = songList[index];\n    index++;\n    var playPromise = x.play();\n\n    if (playPromise !== undefined) {\n      playPromise.then(_ => {\n        x.addEventListener('ended', async () => {\n          if (index !== songList.length) {\n            await this.playSong(songList, index);\n          } else {\n            await this.playSong(songList, 0);\n          }\n        });\n      })\n        .catch(error => {\n        });\n    }\n  }\n\n  buildList = () => {\n    let playlists = this.props.data;\n    let listItems = [];\n    let index = 0;\n    for (const playlist of playlists) {\n      if (playlist.name === this.props.choice) {\n        let songs = playlist.songs;\n        for (const song of songs) {\n          listItems.push(\n            <List.Item key={index}>\n              <Image floated='left' style={{ height: 100, width: 100 }} src={song.artwork} />\n              <List.Header>\n                {song.track}\n              </List.Header>\n              <List.Description>{song.artist}</List.Description>\n              <List.Description>{song.album}</List.Description>\n              <Button onClick={() => this.playTrack(song.song)} style={{ marginTop: 10 }} icon>\n                <Icon name='play' />\n              </Button>\n            </List.Item>\n          )\n          index++;\n        }\n      }\n    }\n    return listItems;\n  }\n\n  render() {\n    return (\n      <div>\n\n        <Header floated='left' as='h2'>\n          {this.props.choice}\n        </Header>\n        <br/>\n        <br/>\n        <br/>\n        <List divided relaxed>\n          {this.buildList()}\n        </List>\n        <div className=\"audioPlayer\">\n          <audio id=\"player\" controls>\n            <source src=\"\" />\n          </audio>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Header, Grid, Input, Button, Message, Icon, Modal, Divider } from 'semantic-ui-react'\nimport { USER_DATA, UPDATE_USER, UPDATE_PASSWORD } from '../api/queries';\nimport { Query, Mutation } from 'react-apollo';\nimport Auth from '../utils/Auth';\n\nexport default class settings extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: Auth.getUserName(),\n            firstName: '',\n            lastName: '',\n            email: '',\n            response: '',\n            status: false,\n            modalOpen: false,\n            currentPass: '',\n            newPass: '',\n            testPass: '',\n            modalError: false\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    renderUserSettings = () => (\n        <Query query={USER_DATA} variables={{ username: Auth.getUserName() }}>\n            {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n                let info = data.userData.user;\n                return (\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Header floated='left' as='h4'>\n                                    Username: {this.state.username}\n                                </Header>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                <Input style={{ width: 200, float: 'left' }} label={{ tag: false, color: 'teal', content: 'First name' }} placeholder={info.firstName} name='firstName' onChange={this.handleChange} />\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                <Input style={{ width: 200, float: 'left' }} label={{ tag: false, color: 'teal', content: 'Last name' }} placeholder={info.lastName} name='lastName' onChange={this.handleChange} />\n                            </Grid.Column>\n                        </Grid.Row>\n                        {this.renderEmail(info)}\n                    </Grid>\n                )\n            }}\n        </Query>\n    )\n\n    renderMessage = () => {\n        if (this.state.status && this.state.response) {\n            return (\n                <Message positive>\n                    <Message.Header>{this.state.response}</Message.Header>\n                </Message>\n            )\n        }\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => {\n        this.setState({\n            modalOpen: false,\n            modalError: false\n        })\n    }\n\n    handleCheck = (info) => {\n        if (this.state.newPass === this.state.testPass) {\n            if (info.status) {\n                this.setState({ modalOpen: false })\n            } else {\n                this.setState({\n                    modalError: true,\n                    response: info.response\n                });\n            }\n        } else {\n            this.setState({\n                modalError: true,\n                response: info.response\n            });\n        }\n    }\n\n    renderEmail = (info) => {\n        return (\n            <Grid.Row>\n                <Grid.Column width={10}>\n                    <Input fluid label={{ tag: false, color: 'teal', content: 'Email' }} placeholder={info.email} name='email' onChange={this.handleChange} />\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n\n    handleModalError = () => {\n        if (this.state.modalError) {\n            return (\n                <Message style={{ margin: 0 }} negative>\n                    <Message.Header>{this.state.response}</Message.Header>\n                </Message>\n            )\n        }\n    }\n\n\n    render() {\n        let { username, firstName, lastName, email, currentPass, newPass, testPass } = this.state;\n        return (\n            <div>\n                {this.renderUserSettings()}\n                <br />\n                {this.renderMessage()}\n                <Mutation mutation={UPDATE_USER} variables={{ username, updateData: { firstName, lastName, email } }}\n                    update={(cache, { data }) => {\n                        this.setState({\n                            response: data.updateUser.response,\n                            status: data.updateUser.status\n                        });\n                    }\n                    }\n                >\n                    {updateInfo => (\n                        <Button type=\"submit\" color='teal' fluid size='large' onClick={updateInfo}>\n                            Update\n                    </Button>\n                    )}\n                </Mutation>\n                <br />\n                <Modal\n                    trigger={<Button onClick={this.handleOpen}>Change Password</Button>}\n                    open={this.state.modalOpen}\n                    onClose={this.handleClose}\n                    size='mini'\n                >\n                    <Header icon='lock' content='Change password' />\n                    <Modal.Content>\n                        <Header as='h4'> Current Password\n                            <Input name='currentPass' type='password' onChange={this.handleChange}></Input>\n                        </Header>\n                    </Modal.Content>\n                    <Divider style={{ margin: 0 }} />\n                    <Modal.Content>\n                        <Header as='h4'> New Password <br/>\n                        <Input name='newPass' type='password' onChange={this.handleChange}></Input>\n                        </Header>\n                        <Header as='h4'> Confirm Password\n                        <Input style={{ marginTop: 3 }} name='testPass' type='password' onChange={this.handleChange}></Input>\n                        </Header>\n                    </Modal.Content>\n                    {this.handleModalError()}\n                    <Modal.Actions>\n                        <Button color='red' onClick={this.handleClose} inverted>\n                            <Icon name='cancel' /> Cancel\n                        </Button>\n                        <Mutation mutation={UPDATE_PASSWORD} variables={{ username, currentPass, newPass, testPass }}\n                            update={(cache, { data }) => {\n                                console.log(data);\n                                let info = data.updatePassword;\n                                this.handleCheck(info);\n                            }\n                            }\n                        >\n                            {updatePass => (\n                                <Button color='green' onClick={updatePass} inverted>\n                                    <Icon name='check' /> Update\n                            </Button>\n                            )}\n                        </Mutation>\n                    </Modal.Actions>\n                </Modal>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Icon, Button, Message, Card, Image, Menu, Grid, Header, Divider, Container } from 'semantic-ui-react';\nimport { USERS_PLAYLIST } from '../api/queries';\nimport { Query } from 'react-apollo';\nimport SongList from '../components/songlist';\nimport Settings from '../components/editSettings'\nimport Auth from '../utils/Auth'\nimport Navbar from '../components/navbar';\n\n\nexport default class Profile extends React.Component {\n    state = {\n        activeItem: 'Playlists',\n        showSongs: false,\n        playlistChoice: '',\n        editSettings: false\n    };\n\n    handleItemClick = (e, { name }) => {\n        this.setState({ activeItem: name });\n    }\n\n    reset = () => {\n        this.setState({\n            showSongs: false,\n            playlistChoice: ''\n        });\n    }\n\n    playlistDisplay = () => (\n        <Query query={USERS_PLAYLIST} variables={{ username: Auth.getUserName() }}>\n            {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n                let playlistCards = [];\n                let response;\n                let index = 0;\n                if (this.state.showSongs) {\n                    return (\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Button onClick={this.reset} floated='left' icon>\n                                    <Icon name='angle left' />\n                                </Button>\n                                <SongList\n                                    data={data.playlistsForUser.playlists}\n                                    choice={this.state.playlistChoice}\n                                />\n                            </Grid.Column>\n                        </Grid.Row>\n                    )\n                } else if (data.playlistsForUser.playlists) {\n                    for (const playlist of data.playlistsForUser.playlists) {\n                        let followerString = 'followers: ' + playlist.followers;\n                        let songString = 'songs: ' + playlist.song_count;\n                        playlistCards.push(\n                            <Card\n                                color='teal'\n                                header={playlist.name}\n                                meta={followerString}\n                                description={songString}\n                                key={index}\n                                onClick={() => { this.displaySongs(playlist.name) }}\n                            />\n                        )\n                        index++;\n                    }\n                    response = (\n                        <Container>\n                            <Grid.Row width={16}>\n                                <Card.Group itemsPerRow={3}>\n                                    {playlistCards}\n                                </Card.Group>\n                            </Grid.Row>\n                        </Container>);\n                } else {\n                    response = (\n                        <Message\n                            icon='info circle'\n                            warning\n                            header='No playlists'\n                            content={data.playlistsForUser.response}\n                        />)\n                }\n                return response;\n            }}\n        </Query>\n    );\n\n    displaySongs = (value) => {\n        this.setState({\n            showSongs: true,\n            playlistChoice: value\n        });\n    }\n\n    renderItem = () => {\n        if (this.state.activeItem === 'Playlists') {\n            return (\n                this.playlistDisplay()\n            )\n        } else if (this.state.activeItem === 'Settings') {\n            return (\n                <Settings />\n            )\n        }\n    };\n\n    render() {\n        let username = Auth.getUserName();\n        return (\n            <div>\n                <Navbar />\n                <Container>\n                    <Grid>\n                        <Grid.Row style={{ paddingBottom: 0 }}>\n                            <Grid.Column width={16}>\n                                <Divider />\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row color='teal' style={{ marginTop: 15 }}>\n                            <Grid.Column width={3}>\n                                <Image circular src='https://react.semantic-ui.com/images/avatar/large/patrick.png' />\n                            </Grid.Column>\n                            <Grid.Column width={13}>\n                                <Header as='h2' inverted floated='left'>\n                                    {username}\n                                </Header>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={16}>\n                                <Menu pointing secondary>\n                                    <Menu.Item\n                                        name='Playlists'\n                                        active={this.state.activeItem === 'Playlists'}\n                                        onClick={this.handleItemClick}\n                                    >\n                                    </Menu.Item>\n                                    <Menu.Item\n                                        name='Settings'\n                                        active={this.state.activeItem === 'Settings'}\n                                        onClick={this.handleItemClick}\n                                    >\n                                    </Menu.Item>\n                                </Menu>\n                            </Grid.Column>\n                        </Grid.Row>\n                        {this.renderItem()}\n                    </Grid>\n                </Container>\n            </div>\n        )\n    }\n\n}","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Search from './pages/Search';\nimport HomePage from './pages/Homepage';\nimport Webplayer from './pages/Webplayer';\nimport Auth from './utils/Auth';\nimport { Redirect } from 'react-router-dom';\nimport Profile from './pages/Profile';\n\nconst Router = (props) => (\n\n  <HashRouter>\n    <Switch>\n    <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <Route exact path=\"/\" component={HomePage} />\n      <PrivateRoute exact path=\"/webplayer\" component={Webplayer} />\n      <PrivateRoute exact path=\"/profile\" component={Profile} />\n      {/* <PrivateRoute exact path=\"/edit-user\" component={Edit_User} /> */}\n    </Switch>\n  </HashRouter>\n)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      Auth.getAuth() ? (\n        <Component {...props} />\n      ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\"\n            }}\n          />\n        )\n    }\n  />\n);\n\n\nexport default Router;","import React from 'react'\nimport { Dimmer, Loader, Image, Segment, Container } from 'semantic-ui-react'\n\nconst Loading = () => (\n  <div>\n      <Container style={{margin:50}}>\n    {/* <Segment> */}\n      <Dimmer active inverted>\n        <Loader size='large'>Loading</Loader>\n      </Dimmer>\n\n      {/* <Image src='/images/wireframe/paragraph.png' /> */}\n    {/* </Segment> */}\n    </Container>\n  </div>\n)\n\nexport default Loading\n","import React, { Component } from 'react';\nimport './styling/App.css';\nimport Router from './Router.jsx';\nimport { Container } from 'semantic-ui-react';\nimport Auth from './utils/Auth';\nimport Loading from './components/loader';\n\nclass App extends Component {\n  state = {\n    auth: false,\n    loading: true\n  }\n\n  async componentDidMount() {\n    this.setState({ auth: await Auth.check(), loading: false })\n  }\n\n  render() {\n    if(this.state.loading){\n      return(\n        <Loading />\n        )\n    }else{\n      return (\n      <div className=\"App\">\n        <Router />\n      </div>\n    );\n  }\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ApolloClient from 'apollo-boost';\nconst config ={\n\n    graphql: new ApolloClient({\n        uri: '/graphql',\n      })\n\n}\nexport default config","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styling/index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './utils/serviceWorker';\nimport config from './config'\nimport { ApolloProvider } from '@apollo/react-hooks';\n\n// const { loading, error, data } = useQuery(DATA);\n// console.log(data)\n\n\nReactDOM.render(\n  <ApolloProvider client={config.graphql}>\n    <App />\n  </ApolloProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}