{"version":3,"sources":["api/queries.js","utils/Auth.js","components/onChangeSearch.jsx","components/dropdown.jsx","components/navbar.jsx","pages/Login.jsx","pages/Signup.jsx","pages/Homepage.jsx","components/PlaylistPopup.jsx","components/card.jsx","components/player.jsx","components/sidebar.jsx","pages/Webplayer.jsx","components/editSettings.jsx","components/songlist.jsx","components/playlistDisplay.jsx","pages/Profile.jsx","Router.jsx","components/loader.jsx","App.jsx","utils/serviceWorker.js","config.js","index.js"],"names":["ADD_USER","gql","ONCHANGE_SEARCH","LOGIN_CHECK","USER_DATA","UPDATE_USER","UPDATE_PASSWORD","NEW_PLAYLIST","NEW_TRACK","DELETE_TRACK","USERS_PLAYLIST","Auth","isAuthenticated","isUsername","token","check","jwt","localStorage","getItem","axios","post","then","res","data","response","client_id","userLogin","status","this","getToken","getAuth","getUserName","signOutUser","removeItem","window","location","reload","initialState","isLoading","results","value","preventLoop","redirect","selectedSongData","OnChangeSearch","state","handleResultSelect","e","result","songData","allSongs","id","searchSong","setState","title","handleSearchChange","handleResData","onChangeSearch","length","top4Res","rawData","z","apiRes","onSearchData","artist","description","image","track","artwork","push","search","to","pathname","query","variables","loading","error","Grid","Column","width","Search","onResultSelect","onSearchChange","_","debounce","leading","props","React","Component","trigger","Image","avatar","src","options","key","text","icon","href","onClick","NavBarDropDown","Dropdown","pointing","Navbar","activeItem","handleItemClick","name","userStatus","Menu","Item","active","logo","size","inverted","secondary","className","Header","style","margin","color","content","position","Login","username","password","message","setClientToken","setItem","renderError","Message","negative","handleChange","event","target","textAlign","height","verticalAlign","maxWidth","as","Form","Segment","stacked","Input","fluid","iconPosition","placeholder","onChange","type","mutation","update","cache","loginCheck","Button","Signup","firstName","lastName","email","confirm","gql_res","account","console","log","createAccount","HomePage","fontSize","marginTop","Content","PlaylistPopup","closeModal","open","reset","openModal","setPlaylist","playlist","song","song_proto","album","playlist_name","getPlaylist","playlists","allPlaylists","Modal","basic","playlistsForUser","Actions","Icon","addToPlaylist","cards","handleShow","handleHide","intialPlayer","activeTrack","playTrack","resetCard","index","song_meta","primary","Dimmer","Dimmable","dimmed","dimmer","onMouseEnter","onMouseLeave","AudioPlayer","controls","Sidebar","onSelect","selected","Toggle","Nav","defaultSelected","eventKey","Webplayer","song_data","x","document","querySelector","play","renderData","undefined","songTiles","Container","Card","Group","centered","itemsPerRow","settings","renderUserSettings","pollInterval","info","userData","user","Row","floated","float","label","tag","renderEmail","renderMessage","positive","handleOpen","modalOpen","handleClose","modalError","handleCheck","newPass","testPass","handleModalError","currentPass","updateData","updateUser","updateInfo","onClose","Divider","updatePassword","updatePass","songlist","startTrack","songList","choice","songs","indexOf","playSong","deleteTrack","trackInfo","delete","renderDelete","buildList","renderDeleteState","renderRemove","creator","List","ref","link","listItems","Description","playPromise","addEventListener","a","catch","divided","relaxed","PlaylistDisplay","showSongs","playlistChoice","editSettings","playlistName","newPlaylist","displaySongs","playlistCards","followerString","followers","songString","song_count","header","meta","circular","transparent","Profile","renderItem","paddingBottom","PrivateRoute","component","rest","render","Router","exact","path","Loading","Loader","App","auth","Boolean","hostname","match","config","graphql","ApolloClient","uri","ReactDOM","client","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f2877ce.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\nexport const ADD_USER = gql`\n  mutation($account:Account) {\n   createAccount (account:$account){\n        response,\n        status\n}\n    }\n`;\n\nexport const SEARCH_SONG = gql`\n  mutation($search:String) {\n   searchSong (search:$search){\n    track\n    artist\n    song\n    album\n    artwork\n   }\n  }\n`;\n\nexport const ONCHANGE_SEARCH = gql`\n  query($search:String) {\n  onChangeSearch(search:$search){\n\n      track\n      artist\n      song\n      album\n      artwork\n  }\n}\n`;\n\nexport const LOGIN_CHECK = gql`\n    mutation($username:String, $password:String) {\n      loginCheck (username:$username, password:$password){\n        response,\n        username,\n        status\n      }\n    }\n`;\n\nexport const USER_DATA = gql`\nquery($username:String){\n  userData(username:$username){\n    response,\n    user {\n      firstName\n      lastName\n      email\n      image\n    },\n    status\n  }\n}\n`;\n\nexport const DELETE_USER = gql`\n    mutation($username:String){\n      deleteUser (username:$username){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UPDATE_USER = gql`  \n    mutation($username:String, $updateData:UpdateData){\n      updateUser(username:$username, updateData: $updateData){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UPDATE_PASSWORD = gql`  \n    mutation($username:String, $currentPass:String, $newPass: String, $testPass:String){\n      updatePassword(username:$username, currentPass:$currentPass, newPass:$newPass, testPass:$testPass){\n        response,\n        status\n      }\n    }\n`;\n\nexport const NEW_PLAYLIST = gql`  \n    mutation($name:String, $creator:String){\n      newPlaylist(name:$name, creator:$creator){\n        response,\n        status\n      }\n    }\n`;\n\nexport const NEW_TRACK = gql`  \n    mutation($username:String, $track:PlaylistTrack){\n      newTrack(username:$username, track:$track){\n        response,\n        status\n      }\n    }\n`;\n\nexport const DELETE_TRACK = gql`  \n    query($username:String,$trackInfo:TrackInfo){\n      deleteTrack(username:$username,trackInfo:$trackInfo){\n        response,\n        status\n      }\n    }\n`;\n\nexport const FOLLOW_PLAYLIST = gql`  \n    mutation($username:String, $playlistName: String){\n      followPlaylist(username:$username, playlistName:$playlistName){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UNFOLLOW_PLAYLIST = gql`  \n    mutation($username:String, $playlistName: String){\n      unfollowPlaylist(username:$username, playlistName:$playlistName){\n        response,\n        status\n      }\n    }\n`;\n\nexport const USERS_PLAYLIST = gql`  \n  query($username:String) {\n    playlistsForUser(username:$username) {\n      playlists {\n        name\n        creator\n        followers\n        song_count\n        songs {\n          track\n          artist\n          song\n          album\n          artwork\n        }\n      }\n      response\n      status\n    }\n  }\n`;\n\nexport const VERIFY_USER = gql`\n    mutation($jwt:String){\n      verifytoken(jwt:$jwt){\n        response\n      }\n    }\n\n`;","import axios from 'axios';\n\nconst Auth = {\n    isAuthenticated: false,\n    isUsername: \"\",\n    token: \"\",\n    async check() {\n        let jwt = {\n            token: \"\",\n        }\n        jwt.token = localStorage.getItem('sudo')\n        if (jwt !== \"\") {\n            await axios.post(`/verify`, jwt)\n            .then(res => {\n                this.isAuthenticated = res.data.response\n                this.isUsername = res.data.client_id\n                this.token = jwt.token\n            })\n        }\n    },\n    userLogin(status){\n        this.isAuthenticated = status\n    },\n    getToken() {\n        return this.token\n    },\n    getAuth() {\n    // return true; //uncomment this for dev, to bypass authentication, most services wont work if this is uncommented.\n        return this.isAuthenticated;\n    },\n    getUserName() {\n        return this.isUsername\n    },\n   signOutUser(){\n        localStorage.removeItem('sudo')\n        window.location.reload();\n        // return false;\n    }\n\n};\n\nexport default Auth;","import React from 'react'\nimport _ from 'lodash'\nimport { Query } from 'react-apollo';\nimport { ONCHANGE_SEARCH } from '../api/queries';\nimport { Search, Grid } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\n\nconst initialState = {\n    isLoading: false,\n    results: [],\n    value: '',\n    preventLoop: 1,\n    redirect: false,\n    selectedSongData: ''\n}\n\nexport default class OnChangeSearch extends React.Component {\n    state = initialState\n\n    handleResultSelect = (e, { result }) => {\n        let { songData, allSongs } = this.state\n        if (result.id === '@') {\n            let selectedSongData = { searchSong: allSongs }\n            this.setState({ value: result.title, redirect: true, selectedSongData })\n        } else {\n            let selectedSongData = { searchSong: [songData[result.id]] }\n            this.setState({ value: result.title, redirect: true, selectedSongData })\n        }\n    }\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, value, preventLoop: 1, results: [] })\n        this.setState({\n            isLoading: false,\n        })\n    }\n\n    handleResData = (data) => {\n        if (data.onChangeSearch.length > 0) {\n            let top4Res = [];\n            let rawData = [];\n            for (let z = 0; z < 4; z++) {\n                let apiRes = data.onChangeSearch[z]\n                let onSearchData;\n                if (z < 1) {\n                    onSearchData = {\n                        id: '@',\n                        title: apiRes.artist,\n                        description: 'Search All',\n                        image: ''\n                    }\n                } else {\n                    onSearchData = {\n                        id: z,\n                        title: apiRes.artist,\n                        description: apiRes.track,\n                        image: apiRes.artwork\n                    }\n                }\n                rawData.push(apiRes)\n                top4Res.push(onSearchData)\n            }\n            this.setState({\n                preventLoop: 0,\n                results: top4Res,\n                songData: rawData,\n                allSongs: data.onChangeSearch\n            })\n        }\n    }\n\n    render() {\n        let { value, results, preventLoop, redirect, selectedSongData } = this.state\n        let search = value\n        if (redirect) {\n            this.setState({ redirect: false })\n            return (\n                <Redirect to={{\n                    pathname: '/webplayer',\n                    state: { data: selectedSongData }\n                }} />\n            )\n        }\n        return (\n            <Query query={ONCHANGE_SEARCH} variables={{ search }}>\n                {({ loading, error, data }) => {\n                    if (!loading && preventLoop === 1) {\n                        this.handleResData(data)\n                    }\n                    return (\n                        <Grid>\n                            <Grid.Column width={8}>\n                                <Search\n                                    loading={loading}\n                                    onResultSelect={this.handleResultSelect}\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                        leading: true,\n                                    })}\n                                    results={results}\n                                    value={value}\n                                    {...this.props}\n                                />\n                            </Grid.Column>\n                        </Grid>\n                    );\n                }}\n            </Query>\n        )\n    }\n}\n","import React from 'react';\nimport { Dropdown, Image } from 'semantic-ui-react';\nimport Auth from '../utils/Auth';\nconst trigger = (\n  <span>\n    <Image avatar src={'https://randomuser.me/api/portraits/lego/1.jpg'} /> {Auth.getUserName()}\n  </span>\n)\n\nconst options = [\n  { key: 'profile', text: 'Profile', icon: 'user', href:'/#profile' },\n  { key: 'sign-out', text: 'Sign Out', icon: 'sign out', onClick: () => Auth.signOutUser() }\n]\n\nconst NavBarDropDown = () => (\n  <Dropdown\n    trigger={trigger}\n    options={options}\n    pointing='top right'\n    icon={null}\n  />\n)\n\nexport default NavBarDropDown\n","import React, { Component } from 'react'\nimport { Menu, Image } from 'semantic-ui-react'\nimport Auth from '../utils/Auth'\nimport OnChangeSearch from './onChangeSearch';\nimport NavBarDropDown from './dropdown';\n\nexport default class Navbar extends Component {\n  state = { activeItem: 'home' }\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name })\n  }\n\n  userStatus = () => {\n    const { activeItem } = this.state\n    if (Auth.getAuth() === true) {\n      return (\n        <Menu.Item>\n          <NavBarDropDown />\n        </Menu.Item>\n      )\n    } else {\n      return <Menu.Item\n        name='not logged in'\n        active={activeItem === 'login'}\n        onClick={this.handleItemClick}\n        href='/#login'\n      />\n    }\n  }\n\n  logo = () => {\n    return (\n      <Image src=\"/audago.png\" size='small'></Image>\n    )\n  }\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu inverted  secondary className=\"navbar\">\n        <Menu.Header\n          style={{ margin: 10, color: 'teal' }}\n          content={this.logo()}\n        />\n        <Menu.Item\n          name='home'\n          active={activeItem === 'home'}\n          href=\"#\"\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='explore'\n          active={activeItem === 'explore'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='about'\n          active={activeItem === 'about'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Menu position='right'>\n          <Menu.Item>\n            <OnChangeSearch />\n          </Menu.Item>\n          {this.userStatus()}\n        </Menu.Menu>\n      </Menu>\n    )\n  }\n}\n","import React from 'react';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { LOGIN_CHECK } from '../api/queries';\nimport { Mutation } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport Auth from '../utils/Auth';\nimport Navbar from '../components/navbar';\n\nexport default class Login extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    status: Auth.getAuth(),\n    message: '',\n  }\n\n  setClientToken = (token) => {\n    localStorage.setItem('sudo', token)\n  }\n\n  renderError = () => {\n    if (!this.state.status && this.state.message) {\n      return (<Message negative>\n        <Message.Header>{this.state.message}</Message.Header>\n      </Message>)\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    let { username, password,status } = this.state\n    if(status){\n      Auth.userLogin(status)\n      return  <Redirect to='/' />\n    }\n    return (\n      <div className=\"bg\">\n      <Navbar />\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' inverted textAlign='center'>\n            {/* <Image src='/logo.png' /> */}\n            Log-in to your account\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input fluid icon='user' name='username' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\n              <Form.Input fluid icon='lock' name='password' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\n              {this.renderError()}\n              <Mutation mutation={LOGIN_CHECK} variables={{ username, password }}\n                update={(cache, { data }) => {\n                  this.setState({\n                    status: data.loginCheck.status,\n                    message: data.loginCheck.response\n                  });\n                  this.setClientToken(data.loginCheck.response)\n                }\n                }\n              >\n                {loginCheck => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={loginCheck}>\n                    Login\n                  </Button>\n                )}\n              </Mutation>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <a href='#signup'>Sign Up</a>\n          </Message>\n        </Grid.Column>\n      </Grid>\n      </div>\n    )\n  }\n\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react';\nimport { ADD_USER } from '../api/queries';\nimport { Mutation } from 'react-apollo';\nimport Navbar from '../components/navbar';\n\n\nexport default class Signup extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    image: \"\",\n    active: true,\n    gql_res: {},\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  renderError = () => {\n    let { gql_res } = this.state\n    if (!gql_res.status && gql_res.response) {\n      return (<Message negative>\n        <Message.Header>{gql_res.response}</Message.Header>\n      </Message>)\n    }\n  }\n\n\n  render() {\n    let { firstName, lastName, username, email, password, image, active } = this.state\n    let account = {\n      firstName,\n      lastName,\n      username,\n      email,\n      password,\n      image,\n      active\n    }\n    if (this.state.gql_res.status) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"bg\" style={{ height: '100vh' }}>\n        <Navbar />\n      <Grid style={{ margin: 50 + 'px' }} textAlign='center' verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' inverted textAlign='center'>\n            Create an account\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input name='firstName' fluid icon='user' iconPosition='left' placeholder='Firstname' onChange={this.handleChange} />\n              <Form.Input name='lastName' fluid icon='user' iconPosition='left' placeholder='Lastname' onChange={this.handleChange} />\n              <Form.Input name='username' fluid icon='user' iconPosition='left' placeholder='Username' onChange={this.handleChange} />\n              <Form.Input name='email' fluid icon='mail' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\n              <Form.Input name='password' fluid icon='lock' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\n              <Form.Input name='confirm' fluid icon='lock' iconPosition='left' placeholder='Confirm Password' type='password' onChange={this.handleChange} />\n              <Mutation mutation={ADD_USER} variables={{ account }}\n                update={(cache, { data }) => {\n                  console.log(data)\n                  this.setState({ gql_res: data.createAccount })\n                }\n                }\n              >\n                {createAccount => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={createAccount}>\n                    Signup\n                  </Button>\n                )}\n              </Mutation>\n              {this.renderError()}\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n      </div>\n    )\n  }\n\n}","import React from 'react';\nimport Navbar from '../components/navbar';\nimport { Header, Button } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nexport default class HomePage extends React.Component {\n    state = {\n        redirect: false\n    }\n\n    render() {\n        let { redirect } = this.state\n        if (redirect) {\n            return <Redirect to='/login' />\n        }\n        return (\n            <div className=\"bg\">\n                <Navbar />\n                <Header as='h1' icon textAlign='center' inverted style={{ fontSize: 40, marginTop: '4em' }}>\n                    <Header.Content>\n                        Lose yourself in\n                  50 million songs.\n      </Header.Content>\n                    <Button onClick={() => this.setState({ redirect: true })}>Start Listening</Button>\n                </Header>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\nimport { Mutation, Query } from '@apollo/react-components';\nimport { USERS_PLAYLIST,NEW_TRACK } from '../api/queries';\nimport Auth from '../utils/Auth';\n\nexport default class PlaylistPopup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      playlist:''\n    }\n  }\n\n  closeModal = () => {\n    this.setState({\n      open: false\n    })\n    this.props.reset()\n  }\n\n  openModal = () => {\n    this.setState({\n      open: true\n    })\n  }\n\n  setPlaylist = (event) => {\n    let playlist = event.target.name\n    let { song } = this.props\n    let song_proto = {\n      track: song.track,\n      artist: song.artist,\n      album: song.album,\n      song: song.song,\n      artwork: song.artwork,\n      playlist_name: playlist\n    }\n    this.setState({song_proto})\n  }\n\n  getPlaylist = (playlists) => {\n    let allPlaylists = [];\n    for (let z of playlists) {\n      allPlaylists.push(<button name={z.name} onClick={this.setPlaylist}>{z.name}</button>)\n    }\n    return allPlaylists;\n  }\n\n  render() {\n    let { open } = this.props\n    let { song_proto } = this.state\n    return (\n      <Modal trigger={<Button onClick={this.openModal} icon=\"add\"></Button>} basic size='small' open={open}>\n        <Header icon='archive' content='Archive Old Messages' />\n        <Modal.Content>\n\n          <Query query={USERS_PLAYLIST} variables={{ username: Auth.getUserName() }}>\n            {({ loading, error, data }) => {\n              if(loading) return 'loading...'\n              return (\n                  <div>\n                    {this.getPlaylist(data.playlistsForUser.playlists)}\n                  </div>\n                )\n            }\n            }\n          </Query>\n\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color='red' inverted onClick={this.closeModal}>\n            <Icon name='remove' /> No\n      </Button>\n      <Mutation mutation={NEW_TRACK} variables={{ username:Auth.getUserName(),track:song_proto }}\n                update={(cache, { data }) => {\n                  console.log(`response:${data}`)\n                }\n                }\n              >\n                 {addToPlaylist => (\n          <Button color='green' onClick={addToPlaylist} inverted>\n            <Icon name='checkmark' /> Add\n      </Button>\n                 )}\n      </Mutation>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Button, Dimmer, Image } from 'semantic-ui-react'\nimport PlaylistPopup from '../components/PlaylistPopup'\nexport default class cards extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    }\n  }\n\n  handleShow = () => this.setState({ active: true })\n  handleHide = () => this.setState({ active: false })\n\n  intialPlayer = (track) => {\n    this.setState({activeTrack:track})\n    this.props.playTrack(track)\n  }\n\n  resetCard = () => {\n    this.setState({\n      active:false\n    })\n  }\n\n  render() {\n    let {image,index,song_meta} = this.props\n    const { active } = this.state\n    const content = (\n      <div>\n        <Button primary icon=\"play\" onClick={() => this.intialPlayer(index)}></Button>\n        <PlaylistPopup song={song_meta} reset={this.resetCard}/>\n      </div>\n    )\n\n    return (\n      <Dimmer.Dimmable\n        as={Image}\n        dimmed={active}\n        dimmer={{ active, content }}\n        onMouseEnter={this.handleShow}\n        onMouseLeave={this.handleHide}\n        size='small'\n        src={image}\n      />\n    )\n  }\n}","import React from 'react';\n\nexport default class AudioPlayer extends React.Component{\n    render(){\n        return(\n            <div className=\"audioPlayer\">\n            <audio id=\"player\" controls>\n              <source src=\"\" />\n            </audio>\n          </div>\n        )\n    }\n}","import React from 'react';\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nexport default class Sidebar extends React.Component {\n\n    render() {\n        return (\n            <SideNav className=\"sidebar\"\n                onSelect={(selected) => {\n                    // Add your code here\n                }}\n            >\n                <SideNav.Toggle />\n                <SideNav.Nav defaultSelected=\"home\">\n                    <NavItem eventKey=\"home\">\n                        <NavIcon>\n                            <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Home\n            </NavText>\n                    </NavItem>\n                    <NavItem eventKey=\"playlist\">\n                        <NavIcon>\n                        <i className=\"fas fa-list\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Playlist\n            </NavText>\n                    </NavItem>\n                    <NavItem eventKey=\"more\">\n                        <NavIcon>\n                        <i className=\"fa fas fa-cogs\" style={{ fontSize: '1.75em' }}></i>\n                        </NavIcon>\n                        <NavText>\n                            Settings\n            </NavText>\n                        <NavItem eventKey=\"more/profile\">\n                            <NavText>\n                                Profile\n                </NavText>\n                        </NavItem>\n                        <NavItem eventKey=\"more/playlist\">\n                            <NavText>\n                                Playlist\n                </NavText>\n                        </NavItem>\n                    </NavItem>\n                    <NavItem eventKey=\"signout\">\n                        <NavIcon>\n                        <i className=\"fas fa-sign-out-alt\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Signout\n            </NavText>\n                    </NavItem>\n                </SideNav.Nav>\n            </SideNav>\n        )\n    }\n}","import React from 'react';\nimport '../styling/App.css';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Card } from 'semantic-ui-react';\nimport Cards from '../components/card';\nimport AudioPlayer from '../components/player';\nimport Sidebar from '../components/sidebar';\nimport PlaylistPopup from '../components/PlaylistPopup';\nexport default class Webplayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTrack: ''\n    }\n  }\n\n  playTrack = (track) => {\n    let song_data = this.props.location.state.data.searchSong\n    let x = document.querySelector(\"#player\");\n    x.src = song_data[track].song\n    x.play();\n  }\n\n  addToPlaylist = (track) => {\n    return <PlaylistPopup />\n    // let song_data = this.props.location.state.data.searchSong[track]\n    // song_data.playlist_name = 'test'\n    // console.log(song_data)\n  }\n\n\n  // stopActiveTrack = () => {\n\n  // }\n\n  renderData = () => {\n    if (this.props.location.state !== undefined) {\n      let song_data = this.props.location.state.data.searchSong\n      let songTiles = [];\n      for (let z = 0; z < song_data.length; z++) {\n        songTiles.push(\n          <div key={z} className=\"cardDiv\">\n            <Cards\n              image={song_data[z].artwork}\n              artist={song_data[z].artist}\n              track={song_data[z].track}\n              song={song_data[z].song}\n              playTrack={this.playTrack}\n              song_meta={song_data[z]}\n              index={z}\n            /><br />\n            <strong>{song_data[z].track}</strong>\n          </div>\n        )\n      }\n      return songTiles\n    } else {\n      return [<div style={{color:'white'}}>No Data</div>]\n    }\n  }\n\n  render() {\n      return (\n        <div className='webplayer'>\n          <Sidebar />\n          <div className=\"cardContainer\">\n            <Container style={{ margin: 15 }}>\n              <Card.Group centered itemsPerRow={6}>\n                {this.renderData()}\n              </Card.Group>\n            </Container>\n          </div>\n          <AudioPlayer />\n        </div>\n      )\n    }\n  \n\n}","import React, { Component } from 'react'\nimport { Header, Grid, Input, Button, Message, Icon, Modal, Divider } from 'semantic-ui-react'\nimport { USER_DATA, UPDATE_USER, UPDATE_PASSWORD } from '../api/queries';\nimport { Query, Mutation } from 'react-apollo';\nimport Auth from '../utils/Auth';\n\nexport default class settings extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: Auth.getUserName(),\n            firstName: '',\n            lastName: '',\n            email: '',\n            response: '',\n            status: false,\n            modalOpen: false,\n            currentPass: '',\n            newPass: '',\n            testPass: '',\n            modalError: false\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    renderUserSettings = () => (\n        <Query query={USER_DATA} variables={{ username: Auth.getUserName() }} pollInterval={500}>\n            {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n                let info = data.userData.user;\n                return (\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Header floated='left' as='h4'>\n                                    Username: {this.state.username}\n                                </Header>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                <Input style={{ width: 200, float: 'left' }} label={{ tag: false, color: 'teal', content: 'First name' }} placeholder={info.firstName} name='firstName' onChange={this.handleChange} />\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                <Input style={{ width: 200, float: 'left' }} label={{ tag: false, color: 'teal', content: 'Last name' }} placeholder={info.lastName} name='lastName' onChange={this.handleChange} />\n                            </Grid.Column>\n                        </Grid.Row>\n                        {this.renderEmail(info)}\n                    </Grid>\n                )\n            }}\n        </Query>\n    )\n\n    renderMessage = () => {\n        if (this.state.status && this.state.response) {\n            return (\n                <Message positive>\n                    <Message.Header>{this.state.response}</Message.Header>\n                </Message>\n            )\n        }\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => {\n        this.setState({\n            modalOpen: false,\n            modalError: false\n        })\n    }\n\n    handleCheck = (info) => {\n        if (this.state.newPass === this.state.testPass) {\n            if (info.status) {\n                this.setState({ modalOpen: false })\n            } else {\n                this.setState({\n                    modalError: true,\n                    response: info.response\n                });\n            }\n        } else {\n            this.setState({\n                modalError: true,\n                response: info.response\n            });\n        }\n    }\n\n    renderEmail = (info) => {\n        return (\n            <Grid.Row>\n                <Grid.Column width={10}>\n                    <Input fluid label={{ tag: false, color: 'teal', content: 'Email' }} placeholder={info.email} name='email' onChange={this.handleChange} />\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n\n    handleModalError = () => {\n        if (this.state.modalError) {\n            return (\n                <Message style={{ margin: 0 }} negative>\n                    <Message.Header>{this.state.response}</Message.Header>\n                </Message>\n            )\n        }\n    }\n\n\n    render() {\n        let { username, firstName, lastName, email, currentPass, newPass, testPass } = this.state;\n        return (\n            <div>\n                {this.renderUserSettings()}\n                <br />\n                {this.renderMessage()}\n                <Mutation mutation={UPDATE_USER} variables={{ username, updateData: { firstName, lastName, email } }}\n                    update={(cache, { data }) => {\n                        this.setState({\n                            response: data.updateUser.response,\n                            status: data.updateUser.status\n                        });\n                    }\n                    }\n                >\n                    {updateInfo => (\n                        <Button type=\"submit\" color='teal' fluid size='large' onClick={updateInfo}>\n                            Update\n                    </Button>\n                    )}\n                </Mutation>\n                <br />\n                <Modal\n                    trigger={<Button onClick={this.handleOpen}>Change Password</Button>}\n                    open={this.state.modalOpen}\n                    onClose={this.handleClose}\n                    size='mini'\n                >\n                    <Header icon='lock' content='Change password' />\n                    <Modal.Content>\n                        <Header as='h4'> Current Password\n                            <Input name='currentPass' type='password' onChange={this.handleChange}></Input>\n                        </Header>\n                    </Modal.Content>\n                    <Divider style={{ margin: 0 }} />\n                    <Modal.Content>\n                        <Header as='h4'> New Password <br/>\n                        <Input name='newPass' type='password' onChange={this.handleChange}></Input>\n                        </Header>\n                        <Header as='h4'> Confirm Password\n                        <Input style={{ marginTop: 3 }} name='testPass' type='password' onChange={this.handleChange}></Input>\n                        </Header>\n                    </Modal.Content>\n                    {this.handleModalError()}\n                    <Modal.Actions>\n                        <Button color='red' onClick={this.handleClose} inverted>\n                            <Icon name='cancel' /> Cancel\n                        </Button>\n                        <Mutation mutation={UPDATE_PASSWORD} variables={{ username, currentPass, newPass, testPass }}\n                            update={(cache, { data }) => {\n                                let info = data.updatePassword;\n                                this.handleCheck(info);\n                            }\n                            }\n                        >\n                            {updatePass => (\n                                <Button color='green' onClick={updatePass} inverted>\n                                    <Icon name='check' /> Update\n                            </Button>\n                            )}\n                        </Mutation>\n                    </Modal.Actions>\n                </Modal>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Header, Button, List, Image, Icon } from 'semantic-ui-react'\nimport { DELETE_TRACK } from '../api/queries';\nimport Auth from '../utils/Auth';\nimport { Query } from 'react-apollo';\n\nexport default class songlist extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: Auth.getUserName(),\n      delete: false,\n      trackInfo: {}\n    }\n  }\n\n  playTrack = (track) => {\n    let songList = [];\n    let startTrack;\n    for (const playlist of this.props.data) {\n      if (playlist.name === this.props.choice) {\n        for (const song of playlist.songs) {\n          songList.push(song.song);\n        }\n      }\n    }\n    startTrack = songList.indexOf(track);\n    this.playSong(songList, startTrack);\n  }\n\n  async playSong(songList, startTrack) {\n    let index = startTrack;\n    let x = document.querySelector(\"#player\");\n    x.src = songList[index];\n    index++;\n    var playPromise = x.play();\n\n    if (playPromise !== undefined) {\n      playPromise.then(_ => {\n        x.addEventListener('ended', async () => {\n          if (index !== songList.length) {\n            await this.playSong(songList, index);\n          } else {\n            await this.playSong(songList, 0);\n          }\n        });\n      })\n        .catch(error => {\n        });\n    }\n  }\n\n  deleteTrack = (event) => {\n    let trackInfo = { track: event.target.id, artist: '', playlist_name: this.props.choice }\n\n    for (const playlist of this.props.data) {\n      if (playlist.name === this.props.choice) {\n        for (const song of playlist.songs) {\n          if (song.track === trackInfo.track) {\n            trackInfo.artist = song.artist\n          }\n        }\n      }\n    }\n    this.setState({\n      delete: true,\n      trackInfo\n    });\n  }\n\n  renderDelete = () => {\n    if (this.state.delete) {\n      return (\n        <Query query={DELETE_TRACK} variables={{ username: this.state.username, trackInfo: this.state.trackInfo }}>\n          {({ loading, error, data }) => {\n            if (loading) return 'Loading...';\n            if (error) return `Error! ${error.message}`;\n            console.log(data)\n            return (\n              <div>\n                {this.buildList()}\n              </div>\n            )\n          }}\n        </Query>\n      )\n    }\n  }\n\n  renderDeleteState = () => {\n    if (this.state.delete) {\n      this.setState({\n        delete: false\n      });\n    }\n  }\n\n  renderRemove = (song, creator) => {\n    if (this.state.username === creator) {\n      return (\n        <List.Content floated='right'>\n          {this.renderDelete()}\n          <Icon id={song.track} ref={song.artist} onClick={this.deleteTrack} link name='remove' />\n          {this.renderDeleteState()}\n        </List.Content>\n      )\n    }\n  }\n\n  buildList = () => {\n    let playlists = this.props.data;\n    let listItems = [];\n    let index = 0;\n    for (const playlist of playlists) {\n      if (playlist.name === this.props.choice) {\n        let songs = playlist.songs;\n        for (const song of songs) {\n          listItems.push(\n            <List.Item key={index}>\n              <Image floated='left' style={{ height: 100, width: 100 }} src={song.artwork} />\n              <List.Header>\n                {song.track}\n              </List.Header>\n              <List.Description>{song.artist}</List.Description>\n              <List.Description>{song.album}</List.Description>\n              {this.renderRemove(song, playlist.creator)}\n              <List.Content>\n                <Button onClick={() => this.playTrack(song.song)} style={{ marginTop: 10 }} icon>\n                  <Icon name='play' />\n                </Button>\n              </List.Content>\n            </List.Item>\n          )\n          index++;\n        }\n      }\n    }\n    return listItems;\n  }\n\n  render() {\n    return (\n      <div>\n\n        <Header floated='left' as='h2'>\n          {this.props.choice}\n        </Header>\n        <br />\n        <br />\n        <br />\n        <List divided relaxed>\n          {this.buildList()}\n        </List>\n        <div className=\"audioPlayer\">\n          <audio id=\"player\" controls>\n            <source src=\"\" />\n          </audio>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { Icon, Button, Message, Card, Grid, Container, Modal, Input, Header } from 'semantic-ui-react';\nimport { USERS_PLAYLIST, NEW_PLAYLIST } from '../api/queries';\nimport { Query, Mutation } from 'react-apollo';\nimport SongList from '../components/songlist';\nimport Auth from '../utils/Auth';\n\nexport default class PlaylistDisplay extends React.Component {\n    state = {\n        username: Auth.getUserName(),\n        showSongs: false,\n        playlistChoice: '',\n        modalOpen: false,\n        editSettings: false,\n        modalError: false,\n        response: '',\n        playlistName: ''\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => {\n        this.setState({\n            modalOpen: false,\n            modalError: false,\n            playlistName: ''\n        })\n    }\n\n    handleModalError = () => {\n        if (this.state.modalError && this.state.response) {\n            return (\n                <Message style={{ margin: 0 }} negative>\n                    <Message.Header>{this.state.response}</Message.Header>\n                </Message>\n            )\n        }\n    }\n\n    handleCheck = (res) => {\n        if (res.newPlaylist.status) {\n            this.setState({\n                modalOpen: false,\n                modalError: false\n            })\n        } else {\n            this.setState({\n                modalError: true,\n                response: res.newPlaylist.response\n            })\n        }\n    }\n\n    displaySongs = (value) => {\n        this.setState({\n            showSongs: true,\n            playlistChoice: value\n        });\n    }\n\n    reset = () => {\n        this.setState({\n            showSongs: false,\n            playlistChoice: ''\n        });\n    }\n\n    render() {\n        return (\n            <Query query={USERS_PLAYLIST} variables={{ username: Auth.getUserName() }} pollInterval={500}>\n                {({ loading, error, data }) => {\n                    if (loading) return 'Loading...';\n                    if (error) return `Error! ${error.message}`;\n                    let playlistCards = [];\n                    let response;\n                    let index = 0;\n                    if (this.state.showSongs) {\n                        return (\n                            <Grid.Row>\n                                <Grid.Column>\n                                    <Button onClick={this.reset} floated='left' icon>\n                                        <Icon name='angle left' />\n                                    </Button>\n                                    <SongList\n                                        data={data.playlistsForUser.playlists}\n                                        choice={this.state.playlistChoice}\n                                    />\n                                </Grid.Column>\n                            </Grid.Row>\n                        )\n                    } else {\n                        if (data.playlistsForUser.playlists) {\n                            for (const playlist of data.playlistsForUser.playlists) {\n                                let followerString = 'followers: ' + playlist.followers;\n                                let songString = 'songs: ' + playlist.song_count;\n                                playlistCards.push(\n                                    <Card\n                                        color='teal'\n                                        header={playlist.name}\n                                        meta={followerString}\n                                        description={songString}\n                                        key={index}\n                                        onClick={() => { this.displaySongs(playlist.name) }}\n                                    />\n                                )\n                                index++;\n                            }\n                        }\n                        response = (\n                            <Container>\n                                <Grid.Row width={16}>\n                                    <Card.Group itemsPerRow={3}>\n                                        {playlistCards}\n                                        <Modal\n                                            trigger={\n                                                <Card onClick={this.handleOpen} color='teal' key='create'>\n                                                    <Card.Content>\n                                                        <Button style={{ width: 50, height: 50 }} circular icon='add' />\n                                                    </Card.Content>\n                                                </Card>}\n                                            open={this.state.modalOpen}\n                                            basic\n                                            onClose={this.handleClose}\n                                            size='mini'\n                                        >\n                                            <Header icon='music' content='Give your playlist a name' />\n                                            <Modal.Content>\n                                                <Input transparent inverted placeholder='Playlist name..' name='playlistName' type='text' onChange={this.handleChange}></Input>\n                                            </Modal.Content>\n                                            {this.handleModalError()}\n                                            <Modal.Actions>\n                                                <Button color='red' onClick={this.handleClose} inverted>\n                                                    <Icon name='cancel' /> Cancel\n                                                </Button>\n                                                <Mutation mutation={NEW_PLAYLIST} variables={{ name: this.state.playlistName, creator: this.state.username }}\n                                                    update={(cache, { data }) => {\n                                                        let res = data;\n                                                        this.handleCheck(res);\n                                                    }\n                                                    }\n                                                >\n                                                    {newPlaylist => (\n                                                        <Button color='green' onClick={newPlaylist} inverted>\n                                                            <Icon name='check' /> Create\n                                                        </Button>\n                                                    )}\n                                                </Mutation>\n                                            </Modal.Actions>\n                                        </Modal>\n                                    </Card.Group>\n                                </Grid.Row>\n                            </Container>);\n                    }\n                    return response;\n                }}\n            </Query>\n\n        )\n    }\n\n}","import React from 'react';\nimport { Image, Menu, Grid, Header, Divider, Container } from 'semantic-ui-react';\nimport Settings from '../components/editSettings';\nimport PlaylistDisplay from '../components/playlistDisplay';\nimport Auth from '../utils/Auth';\nimport Navbar from '../components/navbar';\n\n\nexport default class Profile extends React.Component {\n    state = {\n        activeItem: 'Playlists'\n    };\n\n    handleItemClick = (e, { name }) => {\n        this.setState({ activeItem: name });\n    }\n\n    renderItem = () => {\n        if (this.state.activeItem === 'Playlists') {\n            return (\n                <PlaylistDisplay />\n            )\n        } else if (this.state.activeItem === 'Settings') {\n            return (\n                <Settings />\n            )\n        }\n    };\n\n    render() {\n        let username = Auth.getUserName();\n        return (\n            <div>\n                <Navbar />\n                <Container>\n                    <Grid>\n                        <Grid.Row style={{ paddingBottom: 0 }}>\n                            <Grid.Column width={16}>\n                                <Divider />\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row color='teal' style={{ marginTop: 15 }}>\n                            <Grid.Column width={3}>\n                                <Image circular src='https://react.semantic-ui.com/images/avatar/large/patrick.png' />\n                            </Grid.Column>\n                            <Grid.Column width={13}>\n                                <Header as='h2' inverted floated='left'>\n                                    {username}\n                                </Header>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={16}>\n                                <Menu pointing secondary>\n                                    <Menu.Item\n                                        name='Playlists'\n                                        active={this.state.activeItem === 'Playlists'}\n                                        onClick={this.handleItemClick}\n                                    >\n                                    </Menu.Item>\n                                    <Menu.Item\n                                        name='Settings'\n                                        active={this.state.activeItem === 'Settings'}\n                                        onClick={this.handleItemClick}\n                                    >\n                                    </Menu.Item>\n                                </Menu>\n                            </Grid.Column>\n                        </Grid.Row>\n                        {this.renderItem()}\n                    </Grid>\n                </Container>\n            </div>\n        )\n    }\n\n}","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport HomePage from './pages/Homepage';\nimport Webplayer from './pages/Webplayer';\nimport Auth from './utils/Auth';\nimport { Redirect } from 'react-router-dom';\nimport Profile from './pages/Profile';\n\nconst Router = (props) => (\n\n  <HashRouter>\n    <Switch>\n    <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <Route exact path=\"/\" component={HomePage} />\n      <PrivateRoute exact path=\"/webplayer\" component={Webplayer} />\n      <PrivateRoute exact path=\"/profile\" component={Profile} />\n      {/* <PrivateRoute exact path=\"/edit-user\" component={Edit_User} /> */}\n    </Switch>\n  </HashRouter>\n)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      Auth.getAuth() ? (\n        <Component {...props} />\n      ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\"\n            }}\n          />\n        )\n    }\n  />\n);\n\n\nexport default Router;","import React from 'react'\nimport { Dimmer, Loader, Container } from 'semantic-ui-react'\n\nconst Loading = () => (\n  <div>\n      <Container style={{margin:50}}>\n    {/* <Segment> */}\n      <Dimmer active inverted>\n        <Loader size='large'>Loading</Loader>\n      </Dimmer>\n\n      {/* <Image src='/images/wireframe/paragraph.png' /> */}\n    {/* </Segment> */}\n    </Container>\n  </div>\n)\n\nexport default Loading\n","import React, { Component } from 'react';\nimport './styling/App.css';\nimport Router from './Router.jsx';\nimport Auth from './utils/Auth';\nimport Loading from './components/loader';\n\nclass App extends Component {\n  state = {\n    auth: false,\n    loading: true\n  }\n\n  async componentDidMount() {\n    this.setState({ auth: await Auth.check(), loading: false })\n  }\n\n  render() {\n    if(this.state.loading){\n      return(\n        <Loading />\n        )\n    }else{\n      return (\n      <div className=\"App\">\n        <Router />\n      </div>\n    );\n  }\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ApolloClient from 'apollo-boost';\nconst config ={\n\n    graphql: new ApolloClient({\n        uri: '/graphql',\n      })\n\n}\nexport default config","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styling/index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './utils/serviceWorker';\nimport config from './config'\nimport { ApolloProvider } from '@apollo/react-hooks';\n\n// const { loading, error, data } = useQuery(DATA);\n// console.log(data)\n\n\nReactDOM.render(\n  <ApolloProvider client={config.graphql}>\n    <App />\n  </ApolloProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}