{"version":3,"sources":["api/typedefs.js","pages/Login.jsx","pages/Signup.jsx","pages/Search.jsx","components/card.jsx","pages/Webplayer.jsx","utils/Auth.js","Router.jsx","components/navbar.jsx","App.jsx","utils/serviceWorker.js","config.js","index.js"],"names":["ADD_USER","gql","SEARCH_SONG","LOGIN_CHECK","Login","state","username","password","status","message","renderRedirect","to","renderError","Message","negative","Header","handleChange","event","setState","target","name","value","this","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","as","color","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","type","mutation","variables","update","cache","data","loginCheck","response","Button","onClick","href","React","Component","Signup","firstName","lastName","email","confirm","image","active","gql_res","createAccount","Search","search","loading","console","log","pathname","Container","JSON","parse","searchSong","runSearch","cards","props","handleShow","handleHide","intialPlayer","track","activeTrack","playTrack","index","content","primary","Dimmer","Dimmable","Image","dimmed","dimmer","onMouseEnter","onMouseLeave","src","Webplayer","song_data","location","x","document","querySelector","song","play","stopActiveTrack","renderData","songTiles","z","length","push","className","artwork","artist","undefined","margin","Card","Group","centered","itemsPerRow","id","controls","Auth","isAuthenticated","isUsername","token","check","jwt","localStorage","getItem","axios","post","then","res","client_id","getToken","getAuth","getUserName","signOutUser","removeItem","PrivateRoute","component","rest","render","Router","exact","path","Navbar","activeItem","handleItemClick","e","userStatus","Menu","Item","secondary","children","position","App","auth","Boolean","window","hostname","match","config","graphql","ApolloClient","uri","ReactDOM","client","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac63c2b8.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\r\n\r\nexport const ADD_USER = gql`\r\n  mutation($firstName: String, $lastName: String, $username: String, $email:String, $password:String,$image:String,$active:Boolean) {\r\n   createAccount (firstName:$firstName, lastName:$lastName, username:$username, email:$email, password:$password,image:$image,active:$active){\r\n        response\r\n}\r\n    }\r\n`;\r\n\r\nexport const SEARCH_SONG = gql`\r\n  mutation($search:String) {\r\n   searchSong (search:$search){\r\n    response\r\n}\r\n    }\r\n`;\r\n\r\nexport const LOGIN_CHECK = gql`\r\n    mutation($username:String, $password:String) {\r\n      loginCheck (username:$username, password:$password){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const USER_DATA = gql`\r\n    mutation($username:String){\r\n      userData(username:$username){\r\n        response,\r\n        user,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const DELETE_USER = gql`\r\n    mutation($username:String){\r\n      deleteUser (username:$username){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_USER = gql`  \r\n    mutation($username:String, $updateData:UpdateData){\r\n      updateUser(username:$username, updateData: $updateData){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_PASSWORD = gql`  \r\n    mutation($username:String, $currentPass:String, $newPass: String){\r\n      updatePassword(username:$username, currentPass:$currentPass, newPass:$newPass){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const NEW_PLAYLIST = gql`  \r\n    mutation($playlist:Playlist){\r\n      updateUser(playlist:$playlist){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const NEW_TRACK = gql`  \r\n    mutation($track:PlaylistTrack){\r\n      updateUser(track:$track){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const DELETE_TRACK = gql`  \r\n    mutation($track:PlaylistTrack){\r\n      updateUser(track:$track){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const FOLLOW_PLAYLIST = gql`  \r\n    mutation($username:String, $playlistName: String){\r\n      updateUser(username:$username, playlistName:$playlistName){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const UNFOLLOW_PLAYLIST = gql`  \r\n    mutation($username:String, $playlistName: String){\r\n      updateUser(username:$username, playlistName:$playlistName){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const USERS_PLAYLIST = gql`  \r\n    mutation($username:String){\r\n      updateUser(username:$username){\r\n        response,\r\n        list,\r\n        status\r\n      }\r\n    }\r\n`;","import React from 'react';\r\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\r\nimport { LOGIN_CHECK } from '../api/typedefs';\r\nimport { Mutation } from 'react-apollo';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class Login extends React.Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    status: false,\r\n    message: ''\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.status) {\r\n      return <Redirect to='/' />\r\n    }\r\n  }\r\n\r\n  renderError = () => {\r\n    if (!this.state.status && this.state.message) {\r\n      return (<Message negative>\r\n        <Message.Header>{this.state.message}</Message.Header>\r\n      </Message>)\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { username, password } = this.state\r\n    return (\r\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as='h2' color='teal' textAlign='center'>\r\n            {/* <Image src='/logo.png' /> */}\r\n            Log-in to your account\r\n      </Header>\r\n          <Form size='large'>\r\n            <Segment stacked>\r\n              <Form.Input fluid icon='user' name='username' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\r\n              <Form.Input fluid icon='lock' name='password' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\r\n              {this.renderRedirect()}\r\n              {this.renderError()}\r\n              <Mutation mutation={LOGIN_CHECK} variables={{ username, password }}\r\n                update={(cache, { data }) => {\r\n                  this.setState({\r\n                    status: data.loginCheck.status,\r\n                    message: data.loginCheck.response\r\n                  });\r\n                }\r\n                }\r\n              >\r\n                {loginCheck => (\r\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={loginCheck}>\r\n                    Login\r\n                  </Button>\r\n                )}\r\n              </Mutation>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            New to us? <a href='#signup'>Sign Up</a>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\r\nimport { ADD_USER } from '../api/typedefs';\r\nimport { Mutation } from 'react-apollo';\r\n\r\n\r\nexport default class Signup extends React.Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\",\r\n    image: \"\",\r\n    active: true,\r\n    gql_res: {\r\n      createAccount: {\r\n        response: false\r\n      }\r\n    }\r\n  }\r\n  \r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    let { firstName, lastName, username, email, password, image, active } = this.state\r\n\r\n    if (this.state.gql_res.createAccount.response === \"Account created\") {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as='h2' color='teal' textAlign='center'>\r\n            {/* <Image src='/logo.png' /> */}\r\n            Create an account\r\n      </Header>\r\n          <Form size='large'>\r\n            <Segment stacked>\r\n              <Form.Input name='firstName' fluid icon='user' iconPosition='left' placeholder='Firstname' onChange={this.handleChange} />\r\n              <Form.Input name='lastName' fluid icon='user' iconPosition='left' placeholder='Lastname' onChange={this.handleChange} />\r\n              <Form.Input name='username' fluid icon='user' iconPosition='left' placeholder='Username' onChange={this.handleChange} />\r\n              <Form.Input name='email' fluid icon='mail' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\r\n              <Form.Input name='password' fluid icon='lock' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\r\n              <Form.Input name='confirm' fluid icon='lock' iconPosition='left' placeholder='Confirm Password' type='password' onChange={this.handleChange} />\r\n              <Mutation mutation={ADD_USER} variables={{ firstName, lastName, username, email, password, image, active }}\r\n                update={(cache, { data }) => {\r\n                  this.setState({ gql_res: data })\r\n                }\r\n                }\r\n              >\r\n                {createAccount => (\r\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={createAccount}>\r\n                    Signup\r\n                  </Button>\r\n                )}\r\n              </Mutation>\r\n\r\n            </Segment>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Button, Form, Grid, Header, Segment,Container } from 'semantic-ui-react'\r\nimport { SEARCH_SONG } from '../api/typedefs';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Mutation } from 'react-apollo'\r\nexport default class Search extends React.Component {\r\n  state = {\r\n    search: \"\",\r\n    gql_res: \"\",\r\n    loading: false\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      search: event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { search } = this.state\r\n    if(this.state.gql_res !== \"\"){\r\n      console.log(this.state.gql_res)\r\n      return(\r\n        <Redirect to={{pathname: '/webplayer',\r\n                  state: { data: this.state.gql_res }}} />\r\n        )\r\n    }\r\n    return (\r\n      <Container>\r\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as='h2' color='teal' textAlign='center'>\r\n            Search from over 30 million songs\r\n      </Header>\r\n          <Form size='large'>\r\n            <Segment stacked>\r\n              <Form.Input fluid icon='music' iconPosition='left' placeholder='Search Song' onChange={this.handleChange} />\r\n\r\n              <Mutation mutation={SEARCH_SONG} variables={{ search }}\r\n              update={(cache, { data }) => {\r\n                data = JSON.parse(data.searchSong.response)\r\n              this.setState({ gql_res: data,\r\n                              loading:true\r\n              })\r\n                }\r\n                }>\r\n                {runSearch => (\r\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={runSearch}>\r\n                    Search\r\n          </Button>\r\n                )}\r\n              </Mutation>\r\n            </Segment>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Button, Dimmer, Image } from 'semantic-ui-react'\r\n\r\nexport default class cards extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  handleShow = () => this.setState({ active: true })\r\n  handleHide = () => this.setState({ active: false })\r\n\r\n  intialPlayer = (track) => {\r\n    this.setState({activeTrack:track})\r\n    this.props.playTrack(track)\r\n  }\r\n\r\n  render() {\r\n    let {image,index} = this.props\r\n    const { active } = this.state\r\n    const content = (\r\n      <div>\r\n        {/* <Header as='h4' inverted>\r\n          {track}\r\n        </Header> */}\r\n\r\n        <Button primary icon=\"play\" onClick={() => this.intialPlayer(index)}></Button>\r\n        {/* <Button>View</Button> */}\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <Dimmer.Dimmable\r\n        as={Image}\r\n        dimmed={active}\r\n        dimmer={{ active, content }}\r\n        onMouseEnter={this.handleShow}\r\n        onMouseLeave={this.handleHide}\r\n        size='small'\r\n        src={image}\r\n      />\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport  '../styling/App.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Container,Card } from 'semantic-ui-react';\r\nimport Cards from '../components/card';\r\n\r\nexport default class Webplayer extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      activeTrack:''\r\n    }\r\n}\r\n\r\n  playTrack = (track) => {\r\n    let song_data = this.props.location.state.data\r\n    let x = document.querySelector(\"#player\"); \r\n    x.src = song_data[track].song\r\n    x.play();\r\n  }\r\n\r\n  stopActiveTrack = () => {\r\n\r\n  }\r\n\r\n    renderData = () => {\r\n        let song_data = this.props.location.state.data\r\n        let songTiles = [];\r\n        for(let z = 0; z < song_data.length;z++){\r\n        songTiles.push(\r\n          <div className=\"cardDiv\">\r\n          <Cards image={song_data[z].artwork}\r\n                 artist={song_data[z].artist}\r\n                 track={song_data[z].track}\r\n                 song={song_data[z].song}\r\n                 playTrack={this.playTrack}\r\n                 index={z}\r\n          /><br />\r\n          <strong>{song_data[z].track}</strong>\r\n          </div>\r\n          )\r\n        }\r\n        return songTiles\r\n    }\r\n\r\n  render() {\r\n    if(this.props.location.state === undefined){\r\n      return <Redirect to=\"/\" />\r\n    }else{\r\n    return(\r\n        <div className=\"cardContainer\">\r\n              <Container style={{ margin: 15 }}>\r\n              <Card.Group centered itemsPerRow={6}>\r\n            {this.renderData()}\r\n            </Card.Group>\r\n            </Container>\r\n        <div className=\"audioPlayer\">\r\n          <audio id=\"player\" controls>\r\n            <source src=\"\"/>\r\n          </audio>\r\n        </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n}","\r\nimport axios from 'axios';\r\n\r\nconst Auth = {\r\n    isAuthenticated: false,\r\n    isUsername: \"\",\r\n    token: \"\",\r\n    async check() {\r\n        let jwt = {\r\n            token: \"\",\r\n        }\r\n        jwt.token = localStorage.getItem('sudo')\r\n        if (jwt !== \"\") {\r\n            await axios.post(`/verify`, jwt)\r\n                .then(res => {\r\n                    this.isAuthenticated = res.data.response\r\n                    this.isUsername = res.data.client_id\r\n                    this.token = jwt.token\r\n                })\r\n        }\r\n    },\r\n    getToken() {\r\n        return this.token\r\n    },\r\n    getAuth() {\r\n    return true; //uncomment this for dev, to bypass authentication\r\n        // return this.isAuthenticated;\r\n    },\r\n    getUserName() {\r\n        return this.isUsername\r\n    },\r\n   signOutUser(){\r\n        localStorage.removeItem('sudo')\r\n        return false;\r\n    }\r\n\r\n};\r\n\r\nexport default Auth;","import React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport Search from './pages/Search';\r\nimport Webplayer from './pages/Webplayer';\r\nimport Auth from './utils/Auth';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Router = (props) => (\r\n\r\n  <HashRouter>\r\n    <Switch>\r\n    <Route exact path=\"/login\" component={Login} />\r\n      <Route exact path=\"/signup\" component={Signup} />\r\n      <Route exact path=\"/\" component={Search} />\r\n      <PrivateRoute exact path=\"/webplayer\" component={Webplayer} />\r\n      {/* <PrivateRoute exact path=\"/edit-user\" component={Edit_User} /> */}\r\n    </Switch>\r\n  </HashRouter>\r\n\r\n)\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      Auth.getAuth() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\"\r\n            }}\r\n          />\r\n        )\r\n    }\r\n  />\r\n);\r\n\r\n\r\nexport default Router;","import React, { Component } from 'react'\r\nimport { Input, Menu } from 'semantic-ui-react'\r\nimport Auth from '../utils/Auth'\r\n\r\nexport default class Navbar extends Component {\r\n  state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => {\r\n      this.setState({ activeItem: name })\r\n    }\r\n\r\n    userStatus = () => {\r\n        const { activeItem } = this.state\r\n        if(Auth.getAuth() === true){\r\n           return <Menu.Item\r\n            name='Welcome ____'\r\n            active={activeItem === 'greet'}\r\n            onClick={this.handleItemClick}\r\n          />\r\n        }else{\r\n           return <Menu.Item\r\n            name='login'\r\n            active={activeItem === 'login'}\r\n            onClick={this.handleItemClick}\r\n          />\r\n        }\r\n    }\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Menu secondary\r\n      style={{ margin: 5 }} \r\n      >\r\n          <Menu.Header\r\n          style={{margin:5, color:'teal'}}\r\n          as=\"h2\"\r\n          children=\"Audago\"\r\n          />\r\n\r\n        <Menu.Item\r\n          name='home'\r\n          active={activeItem === 'home'}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name='playlist'\r\n          active={activeItem === 'playlist'}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name='about'\r\n          active={activeItem === 'about'}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Menu position='right'>\r\n          <Menu.Item>\r\n            <Input icon='search' placeholder='Search...' />\r\n          </Menu.Item>\r\n          {this.userStatus()}\r\n        </Menu.Menu>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './styling/App.css';\r\nimport Router from './Router.jsx';\r\nimport { Container } from 'semantic-ui-react';\r\nimport Navbar from './components/navbar';\r\n// import Auth from './Auth'\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    auth: false,\r\n    loading: false\r\n  }\r\n\r\n  \r\n  // async componentDidMount() {\r\n  //   this.setState({ auth: await Auth.check(), loading: false })\r\n  // }\r\n  render() {\r\n      return (\r\n      <div className=\"App\">\r\n        <Container>\r\n        <Navbar />\r\n        <Router />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import ApolloClient from 'apollo-boost';\r\nconst config ={\r\n\r\n    graphql: new ApolloClient({\r\n        uri: '/graphql',\r\n      })\r\n\r\n}\r\nexport default config","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styling/index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './utils/serviceWorker';\r\nimport config from './config'\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\n\r\n// const { loading, error, data } = useQuery(DATA);\r\n// console.log(data)\r\n\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={config.graphql}>\r\n    <App />\r\n  </ApolloProvider>\r\n  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}