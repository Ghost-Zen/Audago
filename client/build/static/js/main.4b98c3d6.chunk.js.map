{"version":3,"sources":["api/queries.js","utils/Auth.js","components/onChangeSearch.jsx","components/dropdown.jsx","components/navbar.jsx","pages/Login.jsx","pages/Signup.jsx","pages/Homepage.jsx","components/PlaylistPopup.jsx","components/card.jsx","components/player.jsx","components/sidebar.jsx","components/playlistCards.jsx","components/songlist.jsx","components/webplayerPlaylists.jsx","pages/Webplayer.jsx","components/editSettings.jsx","components/profilePlaylist.jsx","pages/Profile.jsx","Router.jsx","components/loader.jsx","App.jsx","utils/serviceWorker.js","config.js","index.js"],"names":["ADD_USER","gql","ONCHANGE_SEARCH","LOGIN_CHECK","USER_DATA","UPDATE_USER","UPDATE_PASSWORD","NEW_PLAYLIST","NEW_TRACK","DELETE_TRACK","FOLLOW_PLAYLIST","UNFOLLOW_PLAYLIST","USERS_PLAYLIST","ALL_PLAYLISTS","Auth","isAuthenticated","isUsername","token","check","jwt","localStorage","getItem","axios","post","then","res","data","response","client_id","userLogin","status","username","this","getToken","getAuth","getUserName","signOutUser","removeItem","window","location","reload","initialState","isLoading","results","value","preventLoop","redirect","selectedSongData","OnChangeSearch","state","handleResultSelect","e","result","songData","allSongs","key","searchSong","setState","title","handleSearchChange","console","log","props","switchtab","handleResData","onChangeSearch","length","top4Res","rawData","z","apiRes","onSearchData","artist","description","image","track","artwork","push","search","to","pathname","query","variables","loading","error","Grid","Column","width","Search","onResultSelect","onSearchChange","_","debounce","leading","React","Component","trigger","Image","avatar","src","options","text","icon","href","onClick","NavBarDropDown","Dropdown","pointing","Navbar","activeItem","handleItemClick","name","userStatus","Menu","Item","active","logo","size","inverted","secondary","className","Header","style","margin","color","content","position","Login","password","message","setClientToken","setItem","renderError","Message","negative","handleChange","event","target","textAlign","height","verticalAlign","maxWidth","as","Form","Segment","stacked","Input","fluid","iconPosition","placeholder","onChange","type","mutation","update","cache","loginCheck","Button","Signup","firstName","lastName","email","confirm","gql_res","account","Popup","wide","List","bulleted","createAccount","HomePage","fontSize","marginTop","Content","PlaylistPopup","closeModal","open","reset","openModal","setPlaylist","playlist","song","song_proto","album","playlist_name","getPlaylist","playlists","allPlaylists","Modal","basic","playlistsForUser","Actions","Icon","addToPlaylist","cards","handleShow","handleHide","intialPlayer","activeTrack","playTrack","resetCard","index","song_meta","primary","Dimmer","Dimmable","dimmed","dimmer","onMouseEnter","onMouseLeave","Player","source","autoPlay","onPlay","Sidebar","tabSwitch","selected","setTab","onSelect","Toggle","Nav","defaultSelected","eventKey","activePlaylist","songList","songs","renderFollowButton","playlist_meta","follower_list","includes","playlistName","unfollowPlaylist","followPlaylist","songlist","startTrack","choice","indexOf","playSong","deleteTrack","trackInfo","id","delete","renderDelete","buildList","renderDeleteState","renderRemove","creator","from","floated","ref","link","listItems","Description","x","document","querySelector","undefined","playPromise","play","addEventListener","a","catch","centered","celled","relaxed","WebplayerPlaylists","item","viewSongs","renderSongs","renderPlaylists","pollInterval","playlistData","songTiles","renderData","Card","Group","itemsPerRow","Webplayer","song_data","renderTab","tab","current_Tab","Row","Container","settings","renderUserSettings","info","userData","user","float","label","tag","renderEmail","renderMessage","positive","handleOpen","modalOpen","handleClose","modalError","handleCheck","newPass","testPass","handleModalError","currentPass","updateData","updateUser","updateInfo","onClose","Divider","circular","updatePassword","updatePass","PlaylistDisplay","showSongs","playlistChoice","editSettings","close","newPlaylist","displaySongs","playlistCards","unfollow","Confirm","onCancel","onConfirm","followerString","followers","songString","song_count","header","meta","transparent","Profile","chosen_tab","renderBannerInfo","Label","Detail","timeStamp","created","renderItem","backgroundColor","padding","paddingBottom","borderRadius","PrivateRoute","component","rest","render","Router","exact","path","Loading","Loader","App","auth","Boolean","hostname","match","config","graphql","ApolloClient","uri","ReactDOM","client","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"u4IAEO,IAAMA,EAAWC,YAAH,KAqBRC,GAZcD,YAAH,KAYOA,YAAH,MAafE,EAAcF,YAAH,KAUXG,EAAYH,YAAH,KA4BTI,GATcJ,YAAH,KASGA,YAAH,MASXK,EAAkBL,YAAH,KASfM,EAAeN,YAAH,KASZO,EAAYP,YAAH,KASTQ,EAAeR,YAAH,KASZS,EAAkBT,YAAH,KASfU,EAAoBV,YAAH,KASjBW,GAAiBX,YAAH,KAuBdY,GAAgBZ,YAAH,K,IAuBCA,YAAH,K,6BC7ITa,GAxCF,CACTC,iBAAiB,EACjBC,WAAY,GACZC,MAAO,GACDC,MAJG,sIAKDC,EAAM,CACNF,MAAO,KAEPA,MAAQG,aAAaC,QAAQ,QACrB,KAARF,EATC,gCAUKG,KAAMC,KAAN,UAAsBJ,GAC3BK,MAAK,SAAAC,GACF,EAAKV,gBAAkBU,EAAIC,KAAKC,SAChC,EAAKX,WAAaS,EAAIC,KAAKE,UAC3B,EAAKX,MAAQE,EAAIF,SAdpB,gGAkBTY,UAlBS,SAkBCC,EAAQC,GACdC,KAAKjB,gBAAkBe,EACpBA,IAAQE,KAAKhB,WAAae,IAEjCE,SAtBS,WAuBL,OAAOD,KAAKf,OAEhBiB,QAzBS,WA2BL,OAAOF,KAAKjB,iBAEhBoB,YA7BS,WA8BL,OAAOH,KAAKhB,YAEjBoB,YAhCU,WAiCLhB,aAAaiB,WAAW,QACxBC,OAAOC,SAASC,W,mDC7BlBC,GAAe,CACjBC,WAAW,EACXC,QAAS,GACTC,MAAO,GACPC,YAAa,EACbC,UAAU,EACVC,iBAAkB,IAGDC,G,2MACjBC,MAAQR,G,EAERS,mBAAqB,SAACC,EAAD,GAAoB,IAAdC,EAAa,EAAbA,OAAa,EACP,EAAKH,MAA5BI,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,SAChB,GAAmB,MAAfF,EAAOG,IAAa,CACpB,IAAIR,EAAmB,CAAES,WAAYF,GACrC,EAAKG,SAAS,CAAEb,MAAOQ,EAAOM,MAAOZ,UAAU,EAAMC,yBAClD,CACH,IAAIA,EAAmB,CAAES,WAAY,CAACH,EAASD,EAAOG,OACtD,EAAKE,SAAS,CAAEb,MAAOQ,EAAOM,MAAOZ,UAAU,EAAMC,uB,EAI7DY,mBAAqB,SAACR,EAAD,GAAmB,IAAbP,EAAY,EAAZA,MACvB,EAAKa,SAAS,CAAEf,WAAW,EAAOE,QAAOC,YAAa,EAAGF,QAAS,KAClEiB,QAAQC,IAAI,EAAKC,OACjB,EAAKA,MAAMC,UAAU,S,EAGzBC,cAAgB,SAACtC,GACb,GAAIA,EAAKuC,eAAeC,OAAS,EAAG,CAGhC,IAFA,IAAIC,EAAU,GACVC,EAAU,GACLC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIC,EAAS5C,EAAKuC,eAAeI,GAC7BE,OAAY,EAEZA,EADAF,EAAI,EACW,CACXd,IAAK,IACLG,MAAOY,EAAOE,OACdC,YAAa,aACbC,MAAO,IAGI,CACXnB,IAAKc,EACLX,MAAOY,EAAOE,OACdC,YAAaH,EAAOK,MACpBD,MAAOJ,EAAOM,SAGtBR,EAAQS,KAAKP,GACbH,EAAQU,KAAKN,GAEjB,EAAKd,SAAS,CACVZ,YAAa,EACbF,QAASwB,EACTd,SAAUe,EACVd,SAAU5B,EAAKuC,mB,wEAKjB,IAAD,SAC6DjC,KAAKiB,MAAjEL,EADD,EACCA,MAAOD,EADR,EACQA,QAASE,EADjB,EACiBA,YAAaC,EAD9B,EAC8BA,SAAUC,EADxC,EACwCA,iBACzC+B,EAASlC,EACb,OAAIE,GACAd,KAAKyB,SAAS,CAAEX,UAAU,IAEtB,kBAAC,IAAD,CAAUiC,GAAI,CACVC,SAAU,aACV/B,MAAO,CAAEvB,KAAMqB,OAKvB,kBAAC,KAAD,CAAOkC,MAAO/E,EAAiBgF,UAAW,CAAEJ,YACvC,YAA+B,IAA5BK,EAA2B,EAA3BA,QAAgBzD,GAAW,EAAlB0D,MAAkB,EAAX1D,MAIhB,OAHKyD,GAA2B,IAAhBtC,GACZ,EAAKmB,cAActC,GAGnB,kBAAC2D,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAChB,kBAACC,GAAA,EAAD,eACIL,QAASA,EACTM,eAAgB,EAAKvC,mBACrBwC,eAAgBC,KAAEC,SAAS,EAAKjC,mBAAoB,IAAK,CACrDkC,SAAS,IAEblD,QAASA,EACTC,MAAOA,GACH,EAAKkB,iB,GAnFDgC,IAAMC,W,UCb5CC,GACJ,8BACE,kBAACC,GAAA,EAAD,CAAOC,QAAM,EAACC,IAAK,mDADrB,IAC2ErF,GAAKqB,eAI5EiE,GAAU,CACd,CAAE7C,IAAK,UAAW8C,KAAM,UAAWC,KAAM,OAAQC,KAAK,aACtD,CAAEhD,IAAK,WAAY8C,KAAM,WAAYC,KAAM,WAAYE,QAAS,kBAAM1F,GAAKsB,iBAY9DqE,GATQ,kBACrB,kBAACC,GAAA,EAAD,CACEV,QAASA,GACTI,QAASA,GACTO,SAAS,YACTL,KAAM,QCbWM,G,2MACnB3D,MAAQ,CAAE4D,WAAY,Q,EAEtBC,gBAAkB,SAAC3D,EAAD,GAAkB,IAAZ4D,EAAW,EAAXA,KACtB,EAAKtD,SAAS,CAAEoD,WAAYE,K,EAG9BC,WAAa,WAAO,IACVH,EAAe,EAAK5D,MAApB4D,WACR,OAAuB,IAAnB/F,GAAKoB,UAEL,kBAAC+E,GAAA,EAAKC,KAAN,KACE,kBAAC,GAAD,OAIG,kBAACD,GAAA,EAAKC,KAAN,CACLH,KAAK,gBACLI,OAAuB,UAAfN,EACRL,QAAS,EAAKM,gBACdP,KAAK,a,EAKXa,KAAO,WACL,OACE,kBAACnB,GAAA,EAAD,CAAOE,IAAI,cAAckB,KAAK,W,wEAIxB,IACAR,EAAe7E,KAAKiB,MAApB4D,WAER,OACE,kBAACI,GAAA,EAAD,CAAMK,UAAQ,EAAEC,WAAS,EAACC,UAAU,UAClC,kBAACP,GAAA,EAAKQ,OAAN,CACEC,MAAO,CAAEC,OAAQ,GAAIC,MAAO,QAC5BC,QAAS7F,KAAKoF,SAEhB,kBAACH,GAAA,EAAKC,KAAN,CACEH,KAAK,OACLI,OAAuB,SAAfN,EACRN,KAAK,IACLC,QAASxE,KAAK8E,kBAEhB,kBAACG,GAAA,EAAKC,KAAN,CACEW,QAAS,sCACTV,OAAuB,YAAfN,EACRL,QAASxE,KAAK8E,kBAEhB,kBAACG,GAAA,EAAKC,KAAN,CACEW,QAAS,oCACTV,OAAuB,UAAfN,EACRL,QAASxE,KAAK8E,kBAEhB,kBAACG,GAAA,EAAKA,KAAN,CAAWa,SAAS,SAClB,kBAACb,GAAA,EAAKC,KAAN,KACE,kBAAC,GAAD,OAEDlF,KAAKgF,mB,GA5DoBjB,aCEfgC,G,2MACnB9E,MAAQ,CACNlB,SAAU,GACViG,SAAU,GACVlG,OAAQhB,GAAKoB,UACb+F,QAAS,I,EAGXC,eAAiB,SAACjH,GAChBG,aAAa+G,QAAQ,OAAQlH,I,EAG/BmH,YAAc,WACZ,IAAK,EAAKnF,MAAMnB,QAAU,EAAKmB,MAAMgF,QACnC,OAAQ,kBAACI,EAAA,EAAD,CAASC,UAAQ,GACvB,kBAACD,EAAA,EAAQZ,OAAT,KAAiB,EAAKxE,MAAMgF,W,EAKlCM,aAAe,SAACC,GACd,EAAK/E,SAAL,eACG+E,EAAMC,OAAO1B,KAAOyB,EAAMC,OAAO7F,S,wEAI5B,IAAD,SAC8BZ,KAAKiB,MAApClB,EADC,EACDA,SAAUiG,EADT,EACSA,SAAUlG,EADnB,EACmBA,OAC1B,OAAIA,GACFhB,GAAKe,UAAUC,GACR,kBAAC,IAAD,CAAUiD,GAAG,OAGpB,yBAAKyC,UAAU,MACb,kBAAC,GAAD,MACA,kBAACnC,EAAA,EAAD,CAAMqD,UAAU,SAAShB,MAAO,CAAEiB,OAAQ,QAAUC,cAAc,UAChE,kBAACvD,EAAA,EAAKC,OAAN,CAAaoC,MAAO,CAAEmB,SAAU,MAC9B,kBAACpB,EAAA,EAAD,CAAQqB,GAAG,KAAKxB,UAAQ,EAACoB,UAAU,UAAnC,0BAIA,kBAACK,EAAA,EAAD,CAAM1B,KAAK,SACT,kBAAC2B,EAAA,EAAD,CAASC,SAAO,GACd,kBAACF,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAAC7C,KAAK,OAAOS,KAAK,WAAWqC,aAAa,OAAOC,YAAY,iBAAiBC,SAAUtH,KAAKuG,eAC9G,kBAACQ,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAAC7C,KAAK,OAAOS,KAAK,WAAWqC,aAAa,OAAOC,YAAY,WAAWE,KAAK,WAAWD,SAAUtH,KAAKuG,eACvHvG,KAAKoG,cACN,kBAAC,KAAD,CAAUoB,SAAUrJ,EAAa+E,UAAW,CAAEnD,WAAUiG,YACtDyB,OAAQ,SAACC,EAAD,GAAsB,IAAZhI,EAAW,EAAXA,KAChB,EAAK+B,SAAS,CACZ3B,OAAQJ,EAAKiI,WAAW7H,OACxBmG,QAASvG,EAAKiI,WAAWhI,WAE3B,EAAKuG,eAAexG,EAAKiI,WAAWhI,aAIrC,SAAAgI,GAAU,OACT,kBAACC,EAAA,EAAD,CAAQL,KAAK,SAAS3B,MAAM,OAAOuB,OAAK,EAAC9B,KAAK,QAAQb,QAASmD,GAA/D,cAOR,kBAACtB,EAAA,EAAD,mBACa,uBAAG9B,KAAK,WAAR,mB,GAjEUT,IAAMC,W,oBCApB8D,G,2MACnB5G,MAAQ,CACN6G,UAAW,GACXC,SAAU,GACVhI,SAAU,GACViI,MAAO,GACPhC,SAAU,GACViC,QAAS,GACTvF,MAAO,GACPyC,QAAQ,EACR+C,QAAS,I,EAGX3B,aAAe,SAACC,GACd,EAAK/E,SAAL,eACG+E,EAAMC,OAAO1B,KAAOyB,EAAMC,OAAO7F,S,EAItCwF,YAAc,WAAO,IACb8B,EAAY,EAAKjH,MAAjBiH,QACN,IAAKA,EAAQpI,QAAUoI,EAAQvI,SAC7B,OAAQ,kBAAC0G,EAAA,EAAD,CAASC,UAAQ,GACvB,kBAACD,EAAA,EAAQZ,OAAT,KAAiByC,EAAQvI,Y,wEAMrB,IAAD,SACiEK,KAAKiB,MACzEkH,EAAU,CACZL,UAHK,EACDA,UAGJC,SAJK,EACUA,SAIfhI,SALK,EACoBA,SAKzBiI,MANK,EAC8BA,MAMnChC,SAPK,EACqCA,SAO1CtD,MARK,EAC+CA,MAQpDyC,OATK,EACsDA,QAU7D,OAAInF,KAAKiB,MAAMiH,QAAQpI,OACd,kBAAC,IAAD,CAAUiD,GAAG,MAGpB,yBAAKyC,UAAU,KAAKE,MAAO,CAAEiB,OAAQ,UACnC,kBAAC,GAAD,MACA,kBAACtD,EAAA,EAAD,CAAMqC,MAAO,CAAEC,OAAQ,QAAae,UAAU,SAASE,cAAc,UACnE,kBAACvD,EAAA,EAAKC,OAAN,CAAaoC,MAAO,CAAEmB,SAAU,MAC9B,kBAACpB,EAAA,EAAD,CAAQqB,GAAG,KAAKxB,UAAQ,EAACoB,UAAU,UAAnC,qBAGA,kBAACK,EAAA,EAAD,CAAM1B,KAAK,SACT,kBAAC2B,EAAA,EAAD,CAASC,SAAO,GACd,kBAACF,EAAA,EAAKG,MAAN,CAAYnC,KAAK,YAAYoC,OAAK,EAAC7C,KAAK,OAAO8C,aAAa,OAAOC,YAAY,YAAYC,SAAUtH,KAAKuG,eAC1G,kBAACQ,EAAA,EAAKG,MAAN,CAAYnC,KAAK,WAAWoC,OAAK,EAAC7C,KAAK,OAAO8C,aAAa,OAAOC,YAAY,WAAWC,SAAUtH,KAAKuG,eACxG,kBAACQ,EAAA,EAAKG,MAAN,CAAYnC,KAAK,WAAWoC,OAAK,EAAC7C,KAAK,OAAO8C,aAAa,OAAOC,YAAY,WAAWC,SAAUtH,KAAKuG,eACxG,kBAACQ,EAAA,EAAKG,MAAN,CAAYnC,KAAK,QAAQoC,OAAK,EAAC7C,KAAK,OAAO8C,aAAa,OAAOC,YAAY,iBAAiBC,SAAUtH,KAAKuG,eAC3G,kBAAC6B,GAAA,EAAD,CAAOpE,QACL,kBAAC+C,EAAA,EAAKG,MAAN,CAAYnC,KAAK,WAAWoC,OAAK,EAAC7C,KAAK,OAAO8C,aAAa,OAAOC,YAAY,WAAWE,KAAK,WAAWD,SAAUtH,KAAKuG,eAAkB8B,MAAI,GAC9I,kBAAC5C,EAAA,EAAD,CAAQqB,GAAG,MAAX,+BAGA,kBAACwB,GAAA,EAAD,CAAMC,UAAQ,GACZ,kBAACD,GAAA,EAAKpD,KAAN,+BACA,kBAACoD,GAAA,EAAKpD,KAAN,mCACA,kBAACoD,GAAA,EAAKpD,KAAN,mCACA,kBAACoD,GAAA,EAAKpD,KAAN,+CACA,kBAACoD,GAAA,EAAKpD,KAAN,2BAGJ,kBAAC6B,EAAA,EAAKG,MAAN,CAAYnC,KAAK,UAAUoC,OAAK,EAAC7C,KAAK,OAAO8C,aAAa,OAAOC,YAAY,mBAAmBE,KAAK,WAAWD,SAAUtH,KAAKuG,eAC/H,kBAAC,KAAD,CAAUiB,SAAUxJ,EAAUkF,UAAW,CAAEiF,WACzCV,OAAQ,SAACC,EAAD,GAAsB,IAAZhI,EAAW,EAAXA,KAChBkC,QAAQC,IAAInC,GACZ,EAAK+B,SAAS,CAAEyG,QAASxI,EAAK8I,mBAI/B,SAAAA,GAAa,OACZ,kBAACZ,EAAA,EAAD,CAAQL,KAAK,SAAS3B,MAAM,OAAOuB,OAAK,EAAC9B,KAAK,QAAQb,QAASgE,GAA/D,aAKHxI,KAAKoG,uB,GApFctC,IAAMC,WCJrB0E,G,2MACjBxH,MAAQ,CACJH,UAAU,G,wEAGJ,IAAD,OAEL,OADmBd,KAAKiB,MAAlBH,SAEK,kBAAC,IAAD,CAAUiC,GAAG,eAGpB,yBAAKyC,UAAU,MACX,kBAAC,GAAD,MACA,kBAACC,EAAA,EAAD,CAAQqB,GAAG,KAAKxC,MAAI,EAACoC,UAAU,SAASpB,UAAQ,EAACI,MAAO,CAAEgD,SAAU,GAAIC,UAAW,QAC/E,kBAAClD,EAAA,EAAOmD,QAAR,2CAIA,kBAAChB,EAAA,EAAD,CAAQpD,QAAS,kBAAM,EAAK/C,SAAS,CAAEX,UAAU,MAAjD,yB,GAlBkBgD,IAAMC,W,iDCEvB8E,G,YACnB,WAAY/G,GAAQ,IAAD,8BACjB,4CAAMA,KAORgH,WAAa,WACX,EAAKrH,SAAS,CACZsH,MAAM,IAER,EAAKjH,MAAMkH,SAZM,EAenBC,UAAY,WACV,EAAKxH,SAAS,CACZsH,MAAM,KAjBS,EAqBnBG,YAAc,SAAC1C,GACb,IAAI2C,EAAW3C,EAAMC,OAAO1B,KACtBqE,EAAS,EAAKtH,MAAdsH,KACFC,EAAa,CACf1G,MAAOyG,EAAKzG,MACZH,OAAQ4G,EAAK5G,OACb8G,MAAOF,EAAKE,MACZF,KAAMA,EAAKA,KACXxG,QAASwG,EAAKxG,QACd2G,cAAeJ,GAEjB,EAAK1H,SAAS,CAAC0H,WAASE,gBAhCP,EAmCnBG,YAAc,SAACC,GACb,IAAIC,EAAe,GADQ,uBAE3B,YAAcD,EAAd,+CAAyB,CAAC,IAAjBpH,EAAgB,QACvBqH,EAAa7G,KAAK,kBAAC+E,EAAA,EAAD,CAAQ7C,KAAM1C,EAAE0C,KAAMP,QAAS,EAAK0E,aAAc7G,EAAE0C,QAH7C,kFAK3B,OAAO2E,GAtCP,EAAKzI,MAAQ,CACX8H,MAAM,EACNI,SAAS,IAJM,E,sEA2CT,IAAD,SAC4BnJ,KAAKiB,MAAlC8H,EADC,EACDA,KAAKM,EADJ,EACIA,WAAWF,EADf,EACeA,SACtB,OACE,kBAACQ,GAAA,EAAD,CAAO3F,QAAS,kBAAC4D,EAAA,EAAD,CAAQpD,QAASxE,KAAKiJ,UAAW3E,KAAK,QAAiBsF,OAAK,EAACvE,KAAK,QAAQ0D,KAAMA,GAC9F,kBAACtD,EAAA,EAAD,CAAQnB,KAAK,QAAQuB,QAAQ,oBAC7B,kBAAC8D,GAAA,EAAMf,QAAP,KAEE,kBAAC,KAAD,CAAO3F,MAAOrE,GAAgBsE,UAAW,CAAEnD,SAAUjB,GAAKqB,iBACvD,YAA+B,IAA5BgD,EAA2B,EAA3BA,QAAgBzD,GAAW,EAAlB0D,MAAkB,EAAX1D,MAClB,OAAGyD,EAAgB,aAEf,6BACG,EAAKqG,YAAY9J,EAAKmK,iBAAiBJ,gBAQpD,kBAACE,GAAA,EAAMG,QAAP,KACE,yBAAKpE,MAAO,CAACC,OAAO,QACpB,iDAAuBwD,IAEvB,kBAACvB,EAAA,EAAD,CAAQgC,OAAK,EAAChE,MAAM,MAAMN,UAAQ,EAACd,QAASxE,KAAK8I,YAC/C,kBAACiB,GAAA,EAAD,CAAMhF,KAAK,WADb,WAGJ,kBAAC,KAAD,CAAUyC,SAAUhJ,EAAW0E,UAAW,CAAEnD,SAASjB,GAAKqB,cAAcwC,MAAM0G,GACpE5B,OAAQ,SAACC,EAAD,GAA8B,IAApBvE,EAAmB,EAAnBA,QAAmB,EAAXzD,KACpByD,GACJ,EAAK2F,gBAKL,SAAAkB,GAAa,OACrB,kBAACpC,EAAA,EAAD,CAAQhC,MAAM,QAAQpB,QAASwF,EAAe1E,UAAQ,GACpD,kBAACyE,GAAA,EAAD,CAAMhF,KAAK,cADb,iB,GAhFiCjB,IAAMC,WCH5BkG,G,YACnB,WAAYnI,GAAO,IAAD,8BAChB,4CAAMA,KAKRoI,WAAa,kBAAM,EAAKzI,SAAS,CAAE0D,QAAQ,KANzB,EAOlBgF,WAAa,kBAAM,EAAK1I,SAAS,CAAE0D,QAAQ,KAPzB,EASlBiF,aAAe,SAACzH,GACd,EAAKlB,SAAS,CAAC4I,YAAY1H,IAC3B,EAAKb,MAAMwI,UAAU3H,IAXL,EAclB4H,UAAY,WACV,EAAK9I,SAAS,CACZ0D,QAAO,KAdT,EAAKlE,MAAQ,GAFG,E,sEAoBR,IAAD,SACuBjB,KAAK8B,MAA9BY,EADE,EACFA,MAAM8H,EADJ,EACIA,MAAMC,EADV,EACUA,UACTtF,EAAWnF,KAAKiB,MAAhBkE,OACFU,EACJ,6BACE,kBAAC+B,EAAA,EAAD,CAAQ8C,SAAO,EAACpG,KAAK,OAAOE,QAAS,kBAAM,EAAK4F,aAAaI,MAC7D,kBAAC,GAAD,CAAepB,KAAMqB,EAAWzB,MAAOhJ,KAAKuK,aAIhD,OACE,kBAACI,GAAA,EAAOC,SAAR,CACE9D,GAAI7C,KACJ4G,OAAQ1F,EACR2F,OAAQ,CAAE3F,SAAQU,WAClBkF,aAAc/K,KAAKkK,WACnBc,aAAchL,KAAKmK,WACnB9E,KAAK,QACLlB,IAAKzB,Q,GAvCsBqB,a,qBCAdkH,G,iLACR,IACDC,EAAWlL,KAAK8B,MAAhBoJ,OACJ,OAKI,yBAAK1F,UAAU,eACzB,kBAAC,KAAD,CACA2F,UAAQ,EACRhH,IAAK+G,EACLE,OAAQ,SAAAjK,GAAC,OAAIS,QAAQC,IAAI,kB,GAZSiC,IAAMC,W,oBCErBsH,I,kNAEjBC,UAAY,SAACC,GACT,EAAKzJ,MAAM0J,OAAOD,I,wEAGZ,IAAD,OACL,OACI,kBAAC,KAAD,CAAS/F,UAAU,UACfiG,SAAU,SAACF,GACP,GAAiB,YAAbA,EAAwB,OAAOzM,GAAKsB,cACxC,EAAKkL,UAAUC,KAGnB,kBAAC,KAAQG,OAAT,MACA,kBAAC,KAAQC,IAAT,CAAaC,gBAAgB,QACzB,kBAAC,WAAD,CAASC,SAAS,QACd,kBAAC,WAAD,KACI,uBAAGrG,UAAU,mBAAmBE,MAAO,CAAEgD,SAAU,aAEvD,kBAAC,WAAD,cAIJ,kBAAC,WAAD,CAASmD,SAAS,YACd,kBAAC,WAAD,KACI,uBAAGrG,UAAU,cAAcE,MAAO,CAAEgD,SAAU,aAElD,kBAAC,WAAD,kBAKJ,kBAAC,WAAD,CAASmD,SAAS,QACd,kBAAC,WAAD,KACI,uBAAGrG,UAAU,iBAAiBE,MAAO,CAAEgD,SAAU,aAErD,kBAAC,WAAD,iBAGA,kBAAC,WAAD,KACI,kBAAC,WAAD,iBAIJ,kBAAC,WAAD,CAASmD,SAAS,mBACd,kBAAC,WAAD,2BAMR,kBAAC,WAAD,CAASA,SAAS,WACd,kBAAC,WAAD,KACQ,uBAAGrG,UAAU,sBAAsBE,MAAO,CAAEgD,SAAU,aAE1D,kBAAC,WAAD,uB,GAxDS5E,IAAMC,YCCtBkG,G,YACnB,WAAYnI,GAAQ,IAAD,8BACjB,4CAAMA,KAORoI,WAAa,kBAAM,EAAKzI,SAAS,CAAE0D,QAAQ,KARxB,EASnBgF,WAAa,kBAAM,EAAK1I,SAAS,CAAE0D,QAAQ,KATxB,EAWnBiF,aAAe,SAACjB,GACd,EAAK1H,SAAS,CAAEqK,eAAgB3C,IAChC,IAAI4C,EAAW,GAFY,uBAG3B,YAAoB,EAAKjK,MAAMkK,MAA/B,+CAAsC,CAAC,IAA5BrJ,EAA2B,QACpCoJ,EAASlJ,KAAKF,EAAMyG,OAJK,kFAM3B,EAAKtH,MAAMwI,UAAUyB,EAAU,IAjBd,EAoBnBxB,UAAY,WACV,EAAK9I,SAAS,CACZ0D,QAAQ,KAtBO,EA0BnB8G,mBAAqB,WAAO,IAAD,EACI,EAAKhL,MAA5BlB,EADmB,EACnBA,SAAUoJ,EADS,EACTA,SAEhB,OADoB,EAAKrH,MAAMoK,cAAcC,cAC3BC,SAAStN,GAAKqB,eAE5B,kBAAC,KAAD,CAAUqH,SAAU7I,EAAmBuE,UAAW,CAAEnD,WAAUsM,aAAclD,KACzE,SAAAmD,GAAgB,OACf,kBAAC1E,EAAA,EAAD,CAAQtD,KAAK,QAAQsB,MAAM,MAAMpB,QAAS8H,OAM9C,kBAAC,KAAD,CAAU9E,SAAU9I,EAAiBwE,UAAW,CAAEnD,WAAUsM,aAAclD,KACvE,SAAAoD,GAAc,OACb,kBAAC3E,EAAA,EAAD,CAAQtD,KAAK,gBAAgBsB,MAAM,MAAMpB,QAAS+H,QAvC1D,EAAKtL,MAAQ,CACXlB,SAAUjB,GAAKqB,cACfgJ,SAAU,EAAKrH,MAAMoK,cAAcnH,MAJpB,E,sEAgDT,IAAD,SACgB/E,KAAK8B,MAAtBY,EADC,EACDA,MAAO8H,EADN,EACMA,MACLrF,EAAWnF,KAAKiB,MAAhBkE,OACFU,EACJ,6BACE,kBAAC+B,EAAA,EAAD,CAAQ8C,SAAO,EAACpG,KAAK,OAAOE,QAAS,kBAAM,EAAK4F,aAAaI,MAC5DxK,KAAKiM,sBAIV,OACE,kBAACtB,GAAA,EAAOC,SAAR,CACE9D,GAAI7C,KACJ4G,OAAQ1F,EACR2F,OAAQ,CAAE3F,SAAQU,WAClBkF,aAAc/K,KAAKkK,WACnBc,aAAchL,KAAKmK,WACnB9E,KAAK,QACLlB,IAAKzB,Q,GAnEsBqB,aCAdyI,G,YACnB,WAAY1K,GAAQ,IAAD,8BACjB,4CAAMA,KASRwI,UAAY,SAAC3H,GACX,IACI8J,EADAV,EAAW,GADM,uBAGrB,YAAuB,EAAKjK,MAAMpC,KAAlC,+CAAwC,CAAC,IAA9ByJ,EAA6B,QACtC,GAAIA,EAASpE,OAAS,EAAKjD,MAAM4K,OAAQ,CAAC,IAAD,uBACvC,YAAmBvD,EAAS6C,MAA5B,+CAAmC,CAAC,IAAzB5C,EAAwB,QACjC2C,EAASlJ,KAAKuG,EAAKA,OAFkB,qFAJtB,kFAUrBqD,EAAaV,EAASY,QAAQhK,GAC9B,EAAKiK,SAASb,EAAUU,IArBP,EAkDnBI,YAAc,SAACrG,GACb,IAAIsG,EAAY,CAAEnK,MAAO6D,EAAMC,OAAOsG,GAAIvK,OAAQ,GAAI+G,cAAe,EAAKzH,MAAM4K,QADzD,uBAGvB,YAAuB,EAAK5K,MAAMpC,KAAlC,+CAAwC,CAAC,IAA9ByJ,EAA6B,QACtC,GAAIA,EAASpE,OAAS,EAAKjD,MAAM4K,OAAQ,CAAC,IAAD,uBACvC,YAAmBvD,EAAS6C,MAA5B,+CAAmC,CAAC,IAAzB5C,EAAwB,QAC7BA,EAAKzG,QAAUmK,EAAUnK,QAC3BmK,EAAUtK,OAAS4G,EAAK5G,SAHW,qFAJpB,kFAYvB,EAAKf,SAAS,CACZuL,QAAQ,EACRF,eAhEe,EAoEnBG,aAAe,WACb,GAAI,EAAKhM,MAAM+L,OACb,OACE,kBAAC,KAAD,CAAO/J,MAAOxE,EAAcyE,UAAW,CAAEnD,SAAU,EAAKkB,MAAMlB,SAAU+M,UAAW,EAAK7L,MAAM6L,aAC3F,YAA+B,IAA5B3J,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAO1D,EAAW,EAAXA,KAClB,OAAIyD,EAAgB,aAChBC,EAAa,UAAN,OAAiBA,EAAM6C,UAClCrE,QAAQC,IAAInC,GAEV,6BACG,EAAKwN,kBA9ED,EAuFnBC,kBAAoB,WACd,EAAKlM,MAAM+L,QACb,EAAKvL,SAAS,CACZuL,QAAQ,KA1FK,EA+FnBI,aAAe,SAAChE,EAAMiE,GACpB,GAAI,EAAKpM,MAAMlB,WAAasN,IAAY,EAAKvL,MAAMwL,KACjD,OACE,kBAAChF,GAAA,EAAKM,QAAN,CAAc2E,QAAQ,SACnB,EAAKN,eACN,kBAAC7E,GAAA,EAAD,CAAOwB,OAAK,EAAC/D,QAAQ,uBAAuB7B,QAAS,kBAAC+F,GAAA,EAAD,CAAMzE,UAAQ,EAACyH,GAAI3D,EAAKzG,MAAO6K,IAAKpE,EAAK5G,OAAQgC,QAAS,EAAKqI,YAAaY,MAAI,EAAC1I,KAAK,aAC1I,EAAKoI,sBArGK,EA2GnBD,UAAY,WACV,IAAIzD,EAAY,EAAK3H,MAAMpC,KACvBgO,EAAY,GACZlD,EAAQ,EAHI,uBAIhB,YAAuBf,EAAvB,+CAAkC,CAAC,IAAxBN,EAAuB,QAChC,GAAIA,EAASpE,OAAS,EAAKjD,MAAM4K,OAAQ,CACvC,IAAIV,EAAQ7C,EAAS6C,MADkB,uBAEvC,IAFuC,IAEvC,EAFuC,iBAE5B5C,EAF4B,QAIrCsE,EAAU7K,KACR,kBAACyF,GAAA,EAAKpD,KAAN,CAAW3D,IAAKiJ,GAChB,kBAAC5C,EAAA,EAAD,CAAQtC,UAAQ,EAACiI,QAAQ,OAAOlI,KAAK,OAAOb,QAAS,kBAAM,EAAK8F,UAAUlB,EAAKA,OAAO1D,MAAO,CAAEiD,UAAW,IAAMrE,MAAI,GAClH,kBAACyF,GAAA,EAAD,CAAMhF,KAAK,UAEX,kBAACuD,GAAA,EAAK7C,OAAN,KACG2D,EAAKzG,OAER,kBAAC2F,GAAA,EAAKqF,YAAN,KAAmBvE,EAAK5G,OAAxB,MAAmC4G,EAAKE,OACvC,EAAK8D,aAAahE,EAAMD,EAASkE,WAItC7C,KAfF,EAAmBwB,EAAnB,+CAA2B,IAFY,qFAL3B,kFA0BhB,OAAO0B,GAnIP,EAAKzM,MAAQ,CACXlB,SAAUjB,GAAKqB,cACf6M,QAAQ,EACRF,UAAW,GACX/D,MAAM,GANS,E,+GAwBJgD,EAAUU,G,kFAClBzM,KAAK8B,MAAMwL,KAqBdtN,KAAK8B,MAAMwI,UAAUyB,EAAUU,IApB3BjC,EAAQiC,GACRmB,EAAIC,SAASC,cAAc,YAC7B3J,IAAM4H,EAASvB,GACjBA,SAGoBuD,KAFhBC,EAAcJ,EAAEK,SAGlBD,EAAYxO,MAAK,SAAAmE,GACfiK,EAAEM,iBAAiB,QAAnB,sBAA4B,sBAAAC,EAAA,yDACtB3D,IAAUuB,EAAS7J,OADG,gCAElB,EAAK0K,SAASb,EAAUvB,GAFN,6CAIlB,EAAKoC,SAASb,EAAU,GAJN,+CAQ3BqC,OAAM,SAAAhL,Q,wIA+Fb,IAAIsJ,EAAS1M,KAAK8B,MAAM4K,OACxB,OACE,6BACE,kBAAC9E,EAAA,EAAD,CAAQpD,QAASxE,KAAK8B,MAAMkH,MAAOuE,QAAQ,OAAOlI,KAAK,QAAQf,KAAK,eACpE,kBAACmB,EAAA,EAAD,CAAQ4I,SAAS,OAAOvH,GAAG,KAAKxB,UAAQ,GACrCoH,GAEH,kBAACpE,GAAA,EAAD,CAAMgG,QAAM,EAACC,SAAO,EAACjJ,UAAQ,GAC1BtF,KAAKkN,kB,GAlJsBnJ,aCEjByK,G,YACjB,WAAY1M,GAAQ,IAAD,8BACf,4CAAMA,KAQVwI,UAAY,SAACyB,EAAU0C,GACnB,IAAIjE,EAAQiE,EACRb,EAAIC,SAASC,cAAc,WAC/BF,EAAEzJ,IAAM4H,EAASvB,GACjBA,IACA,IAAIwD,EAAcJ,EAAEK,YAEAF,IAAhBC,GACAA,EAAYxO,MAAK,SAAAmE,GACbiK,EAAEM,iBAAiB,QAAnB,sBAA4B,sBAAAC,EAAA,yDACpB3D,IAAUuB,EAAS7J,OADC,gCAEd,EAAKoI,UAAUyB,EAAUvB,GAFX,6CAId,EAAKF,UAAUyB,EAAU,GAJX,+CAQ3BqC,OAAM,SAAAhL,QA1BA,EA8BnBsL,UAAY,SAAChP,EAAMgN,GACf,EAAKjL,SAAS,CACViN,WAAW,EACXhP,OACAgN,YAlCW,EAsCnBiC,YAAc,WACV,OACI,kBAAC,GAAD,CACIjP,KAAM,EAAKuB,MAAMvB,KACjBgN,OAAQ,EAAKzL,MAAMyL,OACnBY,KAAK,YACLhD,UAAW,EAAKA,UAChBtB,MAAO,EAAKA,SA7CL,EAkDnB4F,gBAAkB,kBACd,kBAAC,KAAD,CAAO3L,MAAOpE,GAAegQ,aAAc,MACtC,YAA+B,IAA5B1L,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAO1D,EAAW,EAAXA,KAChB,GAAIyD,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAM,UAAN,OAAiBA,EAAM6C,SAGlC,IAFA,IAAI6I,EAAepP,EAAKgK,aAAaD,UACjCsF,EAAY,GAJW,WAKlB1M,GACL,IAAI8G,EAAW2F,EAAazM,GACxB8G,EAAS6C,MAAM9J,OAAS,GACxB6M,EAAUlM,KACN,yBAAKtB,IAAKc,EAAGmD,UAAU,WACnB,kBAAC,GAAD,CACI9C,MAAOyG,EAAS6C,MAAM,GAAGpJ,QACzBoJ,MAAO7C,EAAS6C,MAChB1B,UAAW,EAAKA,UAChB4B,cAAe/C,EACfqB,MAAOnI,IACT,6BACF,4BAAQmD,UAAU,iBAAiBhB,QAAS,kBAAM,EAAKkK,UAAUI,EAAc3F,EAASpE,QAAQoE,EAASpE,SAZhH1C,EAAI,EAAGA,EAAIyM,EAAa5M,OAAQG,IAAM,EAAtCA,GAiBT,OAAO0M,MA1EA,EA+EnB/F,MAAQ,WACJ,EAAKvH,SAAS,CACViN,WAAW,EACXhC,OAAQ,MAlFG,EAsFnBsC,WAAa,WACT,OAAI,EAAK/N,MAAMyN,UAEP,6BACK,EAAKC,eAKV,kBAACM,GAAA,EAAKC,MAAN,CAAYb,UAAQ,EAACc,YAAa,GAC7B,EAAKP,oBA9FlB,EAAK3N,MAAQ,CACTyN,WAAW,EACXhP,KAAM,GACNgN,OAAQ,IALG,E,sEAuGf,OACI,6BACK1M,KAAKgP,kB,GA1G0BlL,IAAMC,WCCjCqL,G,YACnB,WAAYtN,GAAQ,IAAD,8BACjB,4CAAMA,KAORwI,UAAY,SAAC3H,GACX,IAAI0M,EAAY,EAAKvN,MAAMvB,SAASU,MAAMvB,KAAK8B,WAE/C,EAAKC,SAAS,CAACkB,MAAO0M,EAAU1M,GAAOyG,QAXtB,EAgBnBkG,UAAY,SAACC,GAEX,YADWxB,IAARwB,IAAmBA,EAAM,QACjB,SAARA,EAAuB,EAAKP,aACpB,aAARO,EAA2B,kBAAC,GAAD,MACnB,oBAARA,EAAkC,kBAAC,IAAD,CAAUxM,GAAG,kBAAlD,GApBiB,EAuBnByI,OAAS,SAAC+D,GACN,EAAK9N,SAAS,CAAC+N,YAAYD,KAxBZ,EA2BnBP,WAAa,WACX,QAAkCjB,IAA9B,EAAKjM,MAAMvB,SAASU,MAAqB,CAG3C,IAFA,IAAIoO,EAAY,EAAKvN,MAAMvB,SAASU,MAAMvB,KAAK8B,WAC3CuN,EAAY,GACP1M,EAAI,EAAGA,EAAIgN,EAAUnN,OAAQG,IACpC0M,EAAUlM,KACR,yBAAKtB,IAAKc,EAAGmD,UAAU,WACrB,kBAAC,GAAD,CACE9C,MAAO2M,EAAUhN,GAAGO,QACpBJ,OAAQ6M,EAAUhN,GAAGG,OACrBG,MAAO0M,EAAUhN,GAAGM,MACpByG,KAAMiG,EAAUhN,GAAG+G,KACnBkB,UAAW,EAAKA,UAChBG,UAAW4E,EAAUhN,GACrBmI,MAAOnI,IACP,6BACF,gCAASgN,EAAUhN,GAAGM,SAI5B,OAAO,kBAACsM,GAAA,EAAKC,MAAN,CAAYb,UAAQ,EAACc,YAAa,GAAIJ,KA7C/C,EAAK9N,MAAQ,CACXuO,YAAY,GACZ7M,MAAM,IAJS,E,sEAmDT,IAAD,EACsB3C,KAAKiB,MAA5BuO,EADC,EACDA,YAAa7M,EADZ,EACYA,MACnB,OACE,yBAAK6C,UAAU,aACb,kBAAC,GAAD,CAAUgG,OAAQxL,KAAKwL,SACvB,yBAAKhG,UAAU,iBACb,kBAACnC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKoM,IAAN,CAAUpB,UAAQ,GAAC,kBAAC,GAAD,CAAgBtM,UAAW/B,KAAKwL,WAErD,kBAACkE,GAAA,EAAD,CAAWhK,MAAO,CAAEC,OAAQ,KAC3B3F,KAAKsP,UAAUE,KAGlB,kBAAC,GAAD,CAAQtE,OAAQvI,S,GAjEemB,IAAMC,W,8BCHxB4L,G,YACjB,WAAY7N,GAAQ,IAAD,8BACf,4CAAMA,KAgBVyE,aAAe,SAACC,GACZ,EAAK/E,SAAL,eACK+E,EAAMC,OAAO1B,KAAOyB,EAAMC,OAAO7F,SAnBvB,EAuBnBgP,mBAAqB,kBACjB,kBAAC,KAAD,CAAO3M,MAAO7E,EAAW8E,UAAW,CAAEnD,SAAUjB,GAAKqB,eAAiB0O,aAAc,MAC/E,YAA+B,IAA5B1L,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAO1D,EAAW,EAAXA,KAChB,GAAIyD,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAM,UAAN,OAAiBA,EAAM6C,SAClC,IAAI4J,EAAOnQ,EAAKoQ,SAASC,KACzB,OACI,kBAAC1M,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKoM,IAAN,KACI,kBAACpM,EAAA,EAAKC,OAAN,KACI,kBAACmC,EAAA,EAAD,CAAQH,UAAQ,EAACiI,QAAQ,OAAOzG,GAAG,MAAnC,aACe,EAAK7F,MAAMlB,YAIlC,kBAACsD,EAAA,EAAKoM,IAAN,KACI,kBAACpM,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAChB,kBAAC2D,GAAA,EAAD,CAAOxB,MAAO,CAAEnC,MAAO,IAAKyM,MAAO,QAAUC,MAAO,CAAEC,KAAK,EAAOtK,MAAO,OAAQC,QAAS,cAAgBwB,YAAawI,EAAK/H,UAAW/C,KAAK,YAAYuC,SAAU,EAAKf,gBAE3K,kBAAClD,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAChB,kBAAC2D,GAAA,EAAD,CAAOxB,MAAO,CAAEnC,MAAO,IAAKyM,MAAO,QAAUC,MAAO,CAAEC,KAAK,EAAOtK,MAAO,OAAQC,QAAS,aAAewB,YAAawI,EAAK9H,SAAUhD,KAAK,WAAWuC,SAAU,EAAKf,iBAG3K,EAAK4J,YAAYN,QA9CnB,EAqDnBO,cAAgB,WACZ,GAAI,EAAKnP,MAAMnB,QAAU,EAAKmB,MAAMtB,SAChC,OACI,kBAAC0G,EAAA,EAAD,CAASgK,UAAQ,GACb,kBAAChK,EAAA,EAAQZ,OAAT,KAAiB,EAAKxE,MAAMtB,YAzDzB,EA+DnB2Q,WAAa,kBAAM,EAAK7O,SAAS,CAAE8O,WAAW,KA/D3B,EAiEnBC,YAAc,WACV,EAAK/O,SAAS,CACV8O,WAAW,EACXE,YAAY,KApED,EAwEnBC,YAAc,SAACb,GACP,EAAK5O,MAAM0P,UAAY,EAAK1P,MAAM2P,UAC9Bf,EAAK/P,OACL,EAAK2B,SAAS,CAAE8O,WAAW,IAQ/B,EAAK9O,SAAS,CACVgP,YAAY,EACZ9Q,SAAUkQ,EAAKlQ,YArFR,EA0FnBwQ,YAAc,SAACN,GACX,OACI,kBAACxM,EAAA,EAAKoM,IAAN,KACI,kBAACpM,EAAA,EAAKC,OAAN,CAAaC,MAAO,IAChB,kBAAC2D,GAAA,EAAD,CAAOC,OAAK,EAAC8I,MAAO,CAAEC,KAAK,EAAOtK,MAAO,OAAQC,QAAS,SAAWwB,YAAawI,EAAK7H,MAAOjD,KAAK,QAAQuC,SAAU,EAAKf,kBA9FvH,EAoGnBsK,iBAAmB,WACf,GAAI,EAAK5P,MAAMwP,WACX,OACI,kBAACpK,EAAA,EAAD,CAASX,MAAO,CAAEC,OAAQ,GAAKW,UAAQ,GACnC,kBAACD,EAAA,EAAQZ,OAAT,KAAiB,EAAKxE,MAAMtB,YAtGxC,EAAKsB,MAAQ,CACTlB,SAAUjB,GAAKqB,cACf2H,UAAW,GACXC,SAAU,GACVC,MAAO,GACPrI,SAAU,GACVG,QAAQ,EACRyQ,WAAW,EACXO,YAAa,GACbH,QAAS,GACTC,SAAU,GACVH,YAAY,GAbD,E,sEA+GT,IAAD,SAC0EzQ,KAAKiB,MAA9ElB,EADD,EACCA,SAAU+H,EADX,EACWA,UAAWC,EADtB,EACsBA,SAAUC,EADhC,EACgCA,MAAO8I,EADvC,EACuCA,YAAaH,EADpD,EACoDA,QAASC,EAD7D,EAC6DA,SAClE,OACI,6BACK5Q,KAAK4P,qBACN,6BACC5P,KAAKoQ,gBACN,kBAAC,KAAD,CAAU5I,SAAUnJ,EAAa6E,UAAW,CAAEnD,WAAUgR,WAAY,CAAEjJ,YAAWC,WAAUC,UACvFP,OAAQ,SAACC,EAAD,GAAsB,IAAZhI,EAAW,EAAXA,KACd,EAAK+B,SAAS,CACV9B,SAAUD,EAAKsR,WAAWrR,SAC1BG,OAAQJ,EAAKsR,WAAWlR,YAK/B,SAAAmR,GAAU,OACP,kBAACrJ,EAAA,EAAD,CAAQL,KAAK,SAAS3B,MAAM,OAAOpB,QAASyM,GAA5C,aAKR,kBAACtH,GAAA,EAAD,CACI3F,QAAS,kBAAC4D,EAAA,EAAD,CAAQpD,QAASxE,KAAKsQ,YAAtB,mBACTvH,KAAM/I,KAAKiB,MAAMsP,UACjBW,QAASlR,KAAKwQ,YACdnL,KAAK,QAEL,kBAACI,EAAA,EAAD,CAAQnB,KAAK,OAAOuB,QAAQ,oBAC5B,kBAAC8D,GAAA,EAAMf,QAAP,KACI,kBAACnD,EAAA,EAAD,CAAQqB,GAAG,MAAX,oBACI,kBAACI,GAAA,EAAD,CAAOnC,KAAK,cAAcwC,KAAK,WAAWD,SAAUtH,KAAKuG,iBAGjE,kBAAC4K,GAAA,EAAD,CAASzL,MAAO,CAAEC,OAAQ,KAC1B,kBAACgE,GAAA,EAAMf,QAAP,KACI,kBAACnD,EAAA,EAAD,CAAQqB,GAAG,MAAX,iBAA8B,6BAC1B,kBAACI,GAAA,EAAD,CAAOnC,KAAK,UAAUwC,KAAK,WAAWD,SAAUtH,KAAKuG,eACrD,kBAAC6B,GAAA,EAAD,CAAOpE,QAAS,kBAAC+F,GAAA,EAAD,CAAM1E,KAAK,OAAOK,MAAO,CAAEsK,MAAO,SAAWoB,UAAQ,EAACrM,KAAK,SAAWsD,MAAI,GACtF,kBAAC5C,EAAA,EAAD,CAAQqB,GAAG,MAAX,+BAGA,kBAACwB,GAAA,EAAD,CAAMC,UAAQ,GACV,kBAACD,GAAA,EAAKpD,KAAN,+BACA,kBAACoD,GAAA,EAAKpD,KAAN,mCACA,kBAACoD,GAAA,EAAKpD,KAAN,mCACA,kBAACoD,GAAA,EAAKpD,KAAN,+CACA,kBAACoD,GAAA,EAAKpD,KAAN,4BAIZ,kBAACO,EAAA,EAAD,CAAQqB,GAAG,MAAX,oBACA,kBAACI,GAAA,EAAD,CAAOxB,MAAO,CAAEiD,UAAW,GAAK5D,KAAK,WAAWwC,KAAK,WAAWD,SAAUtH,KAAKuG,iBAGlFvG,KAAK6Q,mBACN,kBAAClH,GAAA,EAAMG,QAAP,KACI,kBAAClC,EAAA,EAAD,CAAQhC,MAAM,MAAMpB,QAASxE,KAAKwQ,YAAalL,UAAQ,GACnD,kBAACyE,GAAA,EAAD,CAAMhF,KAAK,WADf,WAGA,kBAAC,KAAD,CAAUyC,SAAUlJ,EAAiB4E,UAAW,CAAEnD,WAAU+Q,cAAaH,UAASC,YAC9EnJ,OAAQ,SAACC,EAAD,GAAsB,IACtBmI,EADqB,EAAXnQ,KACE2R,eAChB,EAAKX,YAAYb,MAIpB,SAAAyB,GAAU,OACP,kBAAC1J,EAAA,EAAD,CAAQhC,MAAM,QAAQpB,QAAS8M,EAAYhM,UAAQ,GAC/C,kBAACyE,GAAA,EAAD,CAAMhF,KAAK,UADf,qB,GApLMhB,a,UCEjBwN,G,2MACjBtQ,MAAQ,CACJlB,SAAUjB,GAAKqB,cACfqR,WAAW,EACXC,eAAgB,GAChBlB,WAAW,EACXmB,cAAc,EACdjB,YAAY,EACZ9Q,SAAU,GACV0M,aAAc,GACdtD,MAAM,G,EAGVA,KAAO,kBAAM,EAAKtH,SAAS,CAAEsH,MAAM,K,EACnC4I,MAAQ,kBAAM,EAAKlQ,SAAS,CAAEsH,MAAM,K,EAEpCxC,aAAe,SAACC,GACZ,EAAK/E,SAAL,eACK+E,EAAMC,OAAO1B,KAAOyB,EAAMC,OAAO7F,S,EAI1C0P,WAAa,kBAAM,EAAK7O,SAAS,CAAE8O,WAAW,K,EAE9CC,YAAc,WACV,EAAK/O,SAAS,CACV8O,WAAW,EACXE,YAAY,EACZpE,aAAc,M,EAItBwE,iBAAmB,WACf,GAAI,EAAK5P,MAAMwP,YAAc,EAAKxP,MAAMtB,SACpC,OACI,kBAAC0G,EAAA,EAAD,CAASX,MAAO,CAAEC,OAAQ,GAAKW,UAAQ,GACnC,kBAACD,EAAA,EAAQZ,OAAT,KAAiB,EAAKxE,MAAMtB,Y,EAM5C+Q,YAAc,SAACjR,GACPA,EAAImS,YAAY9R,OAChB,EAAK2B,SAAS,CACV8O,WAAW,EACXE,YAAY,IAGhB,EAAKhP,SAAS,CACVgP,YAAY,EACZ9Q,SAAUF,EAAImS,YAAYjS,Y,EAKtCkS,aAAe,SAACjR,GACZ,EAAKa,SAAS,CACV+P,WAAW,EACXC,eAAgB7Q,K,EAIxBoI,MAAQ,WACJ,EAAKvH,SAAS,CACV+P,WAAW,EACXC,eAAgB,M,wEAId,IAAD,OACL,OACI,kBAAC,KAAD,CAAOxO,MAAOrE,GAAgBsE,UAAW,CAAEnD,SAAUjB,GAAKqB,eAAiB0O,aAAc,MACpF,YAA+B,IAA5B1L,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAO1D,EAAW,EAAXA,KAChB,GAAIyD,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAM,UAAN,OAAiBA,EAAM6C,SAClC,IAAI6L,EAAgB,GAEhBtH,EAAQ,EACZ,GAAI,EAAKvJ,MAAMuQ,UACX,OACI,kBAACnO,EAAA,EAAKoM,IAAN,KACI,kBAACpM,EAAA,EAAKC,OAAN,KACI,kBAAC,KAAD,CAAUkE,SAAU7I,EAAmBuE,UAAW,CAAEnD,SAAU,EAAKkB,MAAMlB,SAAUsM,aAAc,EAAKpL,MAAMwQ,gBACxGhK,OAAQ,SAACC,EAAD,GAAqB,EAAXhI,KACd,EAAKsJ,WAIR,SAAA+I,GAAQ,OACL,6BACI,kBAACnK,EAAA,EAAD,CAAQpD,QAAS,EAAKuE,KAAMwE,QAAQ,QAAQ3D,OAAK,EAACtE,UAAQ,EAACM,MAAM,QAAjE,YAGA,kBAACoM,GAAA,EAAD,CACI3M,KAAK,OACL0D,KAAM,EAAK9H,MAAM8H,KACjBkJ,SAAU,EAAKN,MACfO,UAAWH,QAK3B,kBAAC,GAAD,CACIrS,KAAMA,EAAKmK,iBAAiBJ,UAC5BiD,OAAQ,EAAKzL,MAAMwQ,eACnBzI,MAAO,EAAKA,QAEhB,kBAAC,GAAD,QAKZ,GAAItJ,EAAKmK,iBAAiBJ,UAAW,CAAC,IAAD,uBACjC,IADiC,IACjC,EADiC,iBACtBN,EADsB,QAEzBgJ,EAAiB,cAAgBhJ,EAASiJ,UAC1CC,EAAa,UAAYlJ,EAASmJ,WACtCR,EAAcjP,KACV,kBAACoM,GAAA,EAAD,CACIrJ,MAAM,OACN2M,OAAQpJ,EAASpE,KACjByN,KAAML,EACN1P,YAAa4P,EACb9Q,IAAKiJ,EACLhG,QAAS,WAAQ,EAAKqN,aAAa1I,EAASpE,UAGpDyF,KAbJ,EAAuB9K,EAAKmK,iBAAiBJ,UAA7C,+CAAyD,IADxB,mFA8DzC,OA5CQ,kBAACiG,GAAA,EAAD,KACI,kBAACrM,EAAA,EAAKoM,IAAN,CAAUlM,MAAO,IACb,kBAAC0L,GAAA,EAAKC,MAAN,CAAYC,YAAa,GACpB2C,EACD,kBAACnI,GAAA,EAAD,CACI3F,QACI,kBAACiL,GAAA,EAAD,CAAMzK,QAAS,EAAK8L,WAAY1K,MAAM,OAAOrE,IAAI,UAC7C,kBAAC0N,GAAA,EAAKrG,QAAN,KACI,kBAAChB,EAAA,EAAD,CAAQlC,MAAO,CAAEnC,MAAO,GAAIoD,OAAQ,IAAMyK,UAAQ,EAAC9M,KAAK,UAGpEyE,KAAM,EAAK9H,MAAMsP,UACjB3G,OAAK,EACLsH,QAAS,EAAKV,YACdnL,KAAK,QAEL,kBAACI,EAAA,EAAD,CAAQnB,KAAK,QAAQuB,QAAQ,8BAC7B,kBAAC8D,GAAA,EAAMf,QAAP,KACI,kBAAC1B,GAAA,EAAD,CAAOuL,aAAW,EAACnN,UAAQ,EAAC+B,YAAY,kBAAkBtC,KAAK,eAAewC,KAAK,OAAOD,SAAU,EAAKf,gBAE5G,EAAKsK,mBACN,kBAAClH,GAAA,EAAMG,QAAP,KACI,kBAAClC,EAAA,EAAD,CAAQhC,MAAM,MAAMpB,QAAS,EAAKgM,YAAalL,UAAQ,GACnD,kBAACyE,GAAA,EAAD,CAAMhF,KAAK,WADf,WAGA,kBAAC,KAAD,CAAUyC,SAAUjJ,EAAc2E,UAAW,CAAE6B,KAAM,EAAK9D,MAAMoL,aAAcgB,QAAS,EAAKpM,MAAMlB,UAC9F0H,OAAQ,SAACC,EAAD,GAAsB,IACtBjI,EADqB,EAAXC,KAEd,EAAKgR,YAAYjR,MAIpB,SAAAmS,GAAW,OACR,kBAAChK,EAAA,EAAD,CAAQhC,MAAM,QAAQpB,QAASoN,EAAatM,UAAQ,GAChD,kBAACyE,GAAA,EAAD,CAAMhF,KAAK,UADf,0B,GApKXjB,IAAMC,WCE9B2O,G,2MACjBzR,MAAQ,CACJ4D,WAAY,a,EAGhBC,gBAAkB,SAAC3D,EAAD,GAAkB,IAAZ4D,EAAW,EAAXA,KACpB,EAAKtD,SAAS,CAAEoD,WAAYE,K,EAGhCyG,OAAS,SAACmH,GACR,EAAKlR,SAAS,CAACoD,WAAY8N,K,EAG7BC,iBAAmB,kBACf,kBAAC,KAAD,CAAO3P,MAAO7E,EAAW8E,UAAW,CAAEnD,SAAUjB,GAAKqB,iBAChD,YAA+B,IAA5BgD,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAO1D,EAAW,EAAXA,KAChB,OAAIyD,EAAgB,aAChBC,EAAa,UAAN,OAAiBA,EAAM6C,SAE9B,kBAACR,EAAA,EAAD,CAAQqB,GAAG,KAAKpB,MAAO,CAACiD,UAAW,SAAarD,UAAQ,EAACiI,QAAQ,QAAjE,WACazO,GAAKqB,cADlB,IACiC,6BAC7B,kBAAC0S,GAAA,EAAD,CAAO/L,GAAG,IAAIlB,MAAM,SAASlD,OAAK,GAAlC,SAEJ,kBAACmQ,GAAA,EAAMC,OAAP,KAAepT,EAAKoQ,SAASC,KAAKgD,UAAUC,e,EAQ5DC,WAAa,WACT,MAA8B,cAA1B,EAAKhS,MAAM4D,WAEP,kBAAC,GAAD,MAE6B,aAA1B,EAAK5D,MAAM4D,WAEd,kBAAC,GAAD,WAFD,G,wEAQP,OACI,yBAAKW,UAAU,UAAUE,MAAO,CAACwN,gBAAgB,UAC7C,kBAAC,GAAD,MACA,kBAACxD,GAAA,EAAD,CAAWhK,MAAO,CAACyN,QAAQ,KACvB,kBAAC9P,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKoM,IAAN,CAAU/J,MAAO,CAAE0N,cAAe,IAC9B,kBAAC/P,EAAA,EAAKC,OAAN,CAAaC,MAAO,MAGxB,kBAACF,EAAA,EAAKoM,IAAN,CAAU7J,MAAM,OAAOF,MAAO,CAAEiD,UAAW,GAAI0K,aAAa,KACxD,kBAAChQ,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAChB,kBAACU,GAAA,EAAD,CAAOyB,MAAO,CAACnC,MAAM,IAAKoD,OAAO,KAAMyK,UAAQ,EAACjN,IAAI,mEAExD,kBAACd,EAAA,EAAKC,OAAN,CAAaC,MAAO,IACfvD,KAAK4S,qBAGd,kBAACvP,EAAA,EAAKoM,IAAN,KACI,kBAACpM,EAAA,EAAKC,OAAN,CAAaC,MAAO,IAChB,kBAAC0B,GAAA,EAAD,CAAMN,UAAQ,EAACY,WAAS,EAACD,UAAQ,GAC7B,kBAACL,GAAA,EAAKC,KAAN,CACIH,KAAK,YACLI,OAAkC,cAA1BnF,KAAKiB,MAAM4D,WACnBL,QAASxE,KAAK8E,kBAGlB,kBAACG,GAAA,EAAKC,KAAN,CACIH,KAAK,WACLI,OAAkC,aAA1BnF,KAAKiB,MAAM4D,WACnBL,QAASxE,KAAK8E,qBAM7B9E,KAAKiT,oB,GA/EOnP,IAAMC,WCcrCuP,GAAe,SAAC,GAAD,IAAcvP,EAAd,EAAGwP,UAAyBC,EAA5B,oCACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAA3R,GAAK,OACXhD,GAAKoB,UACH,kBAAC6D,EAAcjC,GAEb,kBAAC,IAAD,CACEiB,GAAI,CACFC,SAAU,iBAST0Q,GAhCA,SAAC5R,GAAD,OAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO6R,OAAK,EAACC,KAAK,SAASL,UAAWxN,KACpC,kBAAC,IAAD,CAAO4N,OAAK,EAACC,KAAK,UAAUL,UAAW1L,KACvC,kBAAC,IAAD,CAAO8L,OAAK,EAACC,KAAK,IAAIL,UAAW9K,KACjC,kBAAC,GAAD,CAAckL,OAAK,EAACC,KAAK,aAAaL,UAAWnE,KACjD,kBAAC,GAAD,CAAcuE,OAAK,EAACC,KAAK,WAAWL,UAAWb,Q,UCDtCmB,GAdC,kBACd,6BACI,kBAACnE,GAAA,EAAD,CAAWhK,MAAO,CAACC,OAAO,KAE1B,kBAACgF,GAAA,EAAD,CAAQxF,QAAM,EAACG,UAAQ,GACrB,kBAACwO,GAAA,EAAD,CAAQzO,KAAK,SAAb,eCuBO0O,G,2MAxBb9S,MAAQ,CACN+S,MAAM,EACN7Q,SAAS,G,yMAITnD,K,SAA4BlB,GAAKI,Q,yBAAjB8U,K,KAA0B7Q,SAAS,G,KAA9C1B,S,qJAIL,OAAGzB,KAAKiB,MAAMkC,QAEV,kBAAC,GAAD,MAIF,yBAAKqC,UAAU,OACb,kBAAC,GAAD,W,GAlBUzB,aCMEkQ,QACW,cAA7B3T,OAAOC,SAAS2T,UAEe,UAA7B5T,OAAOC,SAAS2T,UAEhB5T,OAAOC,SAAS2T,SAASC,MACvB,2DCjBN,IAOeC,GAPD,CAEVC,QAAS,IAAIC,IAAa,CACtBC,IAAK,c,SCQbC,IAASf,OACP,kBAAC,KAAD,CAAgBgB,OAAQL,GAAOC,SAC7B,kBAAC,GAAD,OAEAxG,SAAS6G,eAAe,SFiHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrV,MAAK,SAAAsV,GACjCA,EAAaC,kB","file":"static/js/main.4b98c3d6.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\r\n\r\nexport const ADD_USER = gql`\r\n  mutation($account:Account) {\r\n   createAccount (account:$account){\r\n        response,\r\n        status\r\n}\r\n    }\r\n`;\r\n\r\nexport const SEARCH_SONG = gql`\r\n  mutation($search:String) {\r\n   searchSong (search:$search){\r\n    track\r\n    artist\r\n    song\r\n    album\r\n    artwork\r\n   }\r\n  }\r\n`;\r\n\r\nexport const ONCHANGE_SEARCH = gql`\r\n  query($search:String) {\r\n  onChangeSearch(search:$search){\r\n\r\n      track\r\n      artist\r\n      song\r\n      album\r\n      artwork\r\n  }\r\n}\r\n`;\r\n\r\nexport const LOGIN_CHECK = gql`\r\n    mutation($username:String, $password:String) {\r\n      loginCheck (username:$username, password:$password){\r\n        response,\r\n        username,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const USER_DATA = gql`\r\nquery($username:String){\r\n  userData(username:$username){\r\n    response,\r\n    user {\r\n      firstName\r\n      lastName\r\n      email\r\n      image\r\n      timeStamp{\r\n        created\r\n        lastSeen\r\n      }\r\n    },\r\n    status\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_USER = gql`\r\n    mutation($username:String){\r\n      deleteUser (username:$username){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_USER = gql`  \r\n    mutation($username:String, $updateData:UpdateData){\r\n      updateUser(username:$username, updateData: $updateData){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_PASSWORD = gql`  \r\n    mutation($username:String, $currentPass:String, $newPass: String, $testPass:String){\r\n      updatePassword(username:$username, currentPass:$currentPass, newPass:$newPass, testPass:$testPass){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const NEW_PLAYLIST = gql`  \r\n    mutation($name:String, $creator:String){\r\n      newPlaylist(name:$name, creator:$creator){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const NEW_TRACK = gql`  \r\n    mutation($username:String, $track:PlaylistTrack){\r\n      newTrack(username:$username, track:$track){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const DELETE_TRACK = gql`  \r\n    query($username:String,$trackInfo:TrackInfo){\r\n      deleteTrack(username:$username,trackInfo:$trackInfo){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const FOLLOW_PLAYLIST = gql`  \r\n    mutation($username:String, $playlistName: String){\r\n      followPlaylist(username:$username, playlistName:$playlistName){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const UNFOLLOW_PLAYLIST = gql`  \r\n    mutation($username:String, $playlistName: String){\r\n      unfollowPlaylist(username:$username, playlistName:$playlistName){\r\n        response,\r\n        status\r\n      }\r\n    }\r\n`;\r\n\r\nexport const USERS_PLAYLIST = gql`  \r\n  query($username:String) {\r\n    playlistsForUser(username:$username) {\r\n      playlists {\r\n        name\r\n        creator\r\n        followers\r\n        song_count\r\n        songs {\r\n          track\r\n          artist\r\n          song\r\n          album\r\n          artwork\r\n        }\r\n        follower_list\r\n      }\r\n      response\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ALL_PLAYLISTS = gql`\r\n  query {\r\n    allPlaylists {\r\n      playlists {\r\n        name\r\n        creator\r\n        followers\r\n        song_count\r\n        songs {\r\n          track\r\n          artist\r\n          song\r\n          album\r\n          artwork\r\n        }\r\n        follower_list\r\n      }\r\n      response\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VERIFY_USER = gql`\r\n    mutation($jwt:String){\r\n      verifytoken(jwt:$jwt){\r\n        response\r\n      }\r\n    }\r\n\r\n`;","import axios from 'axios';\r\n\r\nconst Auth = {\r\n    isAuthenticated: false,\r\n    isUsername: \"\",\r\n    token: \"\",\r\n    async check() {\r\n        let jwt = {\r\n            token: \"\",\r\n        }\r\n        jwt.token = localStorage.getItem('sudo')\r\n        if (jwt !== \"\") {\r\n            await axios.post(`/verify`, jwt)\r\n            .then(res => {\r\n                this.isAuthenticated = res.data.response\r\n                this.isUsername = res.data.client_id\r\n                this.token = jwt.token\r\n            })\r\n        }\r\n    },\r\n    userLogin(status, username){\r\n        this.isAuthenticated = status\r\n        if(status) this.isUsername = username\r\n    },\r\n    getToken() {\r\n        return this.token\r\n    },\r\n    getAuth() {\r\n    // return true; //uncomment this for dev, to bypass authentication, most services wont work if this is uncommented.\r\n        return this.isAuthenticated;\r\n    },\r\n    getUserName() {\r\n        return this.isUsername\r\n    },\r\n   signOutUser(){\r\n        localStorage.removeItem('sudo')\r\n        window.location.reload();\r\n        // return false;\r\n    }\r\n\r\n};\r\n\r\nexport default Auth;","import React from 'react'\r\nimport _ from 'lodash'\r\nimport { Query } from 'react-apollo';\r\nimport { ONCHANGE_SEARCH } from '../api/queries';\r\nimport { Search, Grid } from 'semantic-ui-react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    results: [],\r\n    value: '',\r\n    preventLoop: 1,\r\n    redirect: false,\r\n    selectedSongData: ''\r\n}\r\n\r\nexport default class OnChangeSearch extends React.Component {\r\n    state = initialState\r\n\r\n    handleResultSelect = (e, { result }) => {\r\n        let { songData, allSongs } = this.state\r\n        if (result.key === '@') {\r\n            let selectedSongData = { searchSong: allSongs }\r\n            this.setState({ value: result.title, redirect: true, selectedSongData })\r\n        } else {\r\n            let selectedSongData = { searchSong: [songData[result.key]] }\r\n            this.setState({ value: result.title, redirect: true, selectedSongData })\r\n        }\r\n    }\r\n\r\n    handleSearchChange = (e, { value }) => {\r\n        this.setState({ isLoading: false, value, preventLoop: 1, results: [] })\r\n        console.log(this.props)\r\n        this.props.switchtab('home')\r\n    }\r\n\r\n    handleResData = (data) => {\r\n        if (data.onChangeSearch.length > 0) {\r\n            let top4Res = [];\r\n            let rawData = [];\r\n            for (let z = 0; z < 4; z++) {\r\n                let apiRes = data.onChangeSearch[z]\r\n                let onSearchData;\r\n                if (z < 1) {\r\n                    onSearchData = {\r\n                        key: '@',\r\n                        title: apiRes.artist,\r\n                        description: 'Search All',\r\n                        image: ''\r\n                    }\r\n                } else {\r\n                    onSearchData = {\r\n                        key: z,\r\n                        title: apiRes.artist,\r\n                        description: apiRes.track,\r\n                        image: apiRes.artwork\r\n                    }\r\n                }\r\n                rawData.push(apiRes)\r\n                top4Res.push(onSearchData)\r\n            }\r\n            this.setState({\r\n                preventLoop: 0,\r\n                results: top4Res,\r\n                songData: rawData,\r\n                allSongs: data.onChangeSearch\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { value, results, preventLoop, redirect, selectedSongData } = this.state\r\n        let search = value\r\n        if (redirect) {\r\n            this.setState({ redirect: false })\r\n            return (\r\n                <Redirect to={{\r\n                    pathname: '/webplayer',\r\n                    state: { data: selectedSongData }\r\n                }} />\r\n            )\r\n        }\r\n        return (\r\n            <Query query={ONCHANGE_SEARCH} variables={{ search }}>\r\n                {({ loading, error, data }) => {\r\n                    if (!loading && preventLoop === 1) {\r\n                        this.handleResData(data)\r\n                    }\r\n                    return (\r\n                        <Grid>\r\n                            <Grid.Column width={8}>\r\n                                <Search\r\n                                    loading={loading}\r\n                                    onResultSelect={this.handleResultSelect}\r\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                                        leading: true,\r\n                                    })}\r\n                                    results={results}\r\n                                    value={value}\r\n                                    {...this.props}\r\n                                />\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    );\r\n                }}\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n","  import React from 'react';\r\nimport { Dropdown, Image } from 'semantic-ui-react';\r\nimport Auth from '../utils/Auth';\r\nconst trigger = (\r\n  <span>\r\n    <Image avatar src={'https://randomuser.me/api/portraits/lego/1.jpg'} /> {Auth.getUserName()}\r\n  </span>\r\n)\r\n\r\nconst options = [\r\n  { key: 'profile', text: 'Profile', icon: 'user', href:'/#profile' },\r\n  { key: 'sign-out', text: 'Sign Out', icon: 'sign out', onClick: () => Auth.signOutUser() }\r\n]\r\n\r\nconst NavBarDropDown = () => (\r\n  <Dropdown\r\n    trigger={trigger}\r\n    options={options}\r\n    pointing='top right'\r\n    icon={null}\r\n  />\r\n)\r\n\r\nexport default NavBarDropDown\r\n","import React, { Component } from 'react'\r\nimport { Menu, Image } from 'semantic-ui-react'\r\nimport Auth from '../utils/Auth'\r\nimport OnChangeSearch from './onChangeSearch';\r\nimport NavBarDropDown from './dropdown';\r\n\r\nexport default class Navbar extends Component {\r\n  state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => {\r\n    this.setState({ activeItem: name })\r\n  }\r\n\r\n  userStatus = () => {\r\n    const { activeItem } = this.state\r\n    if (Auth.getAuth() === true) {\r\n      return (\r\n        <Menu.Item>\r\n          <NavBarDropDown />\r\n        </Menu.Item>\r\n      )\r\n    } else {\r\n      return <Menu.Item\r\n        name='not logged in'\r\n        active={activeItem === 'login'}\r\n        onClick={this.handleItemClick}\r\n        href='/#login'\r\n      />\r\n    }\r\n  }\r\n\r\n  logo = () => {\r\n    return (\r\n      <Image src=\"/audago.png\" size='small'></Image>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Menu inverted  secondary className=\"navbar\">\r\n        <Menu.Header\r\n          style={{ margin: 10, color: 'teal' }}\r\n          content={this.logo()}\r\n        />\r\n        <Menu.Item\r\n          name='home'\r\n          active={activeItem === 'home'}\r\n          href=\"#\"\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          content={<s>Explore</s>}\r\n          active={activeItem === 'explore'}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          content={<s>About</s>}\r\n          active={activeItem === 'about'}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Menu position='right'>\r\n          <Menu.Item>\r\n            <OnChangeSearch />\r\n          </Menu.Item>\r\n          {this.userStatus()}\r\n        </Menu.Menu>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\r\nimport { LOGIN_CHECK } from '../api/queries';\r\nimport { Mutation } from 'react-apollo';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Auth from '../utils/Auth';\r\nimport Navbar from '../components/navbar';\r\n\r\nexport default class Login extends React.Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    status: Auth.getAuth(),\r\n    message: '',\r\n  }\r\n\r\n  setClientToken = (token) => {\r\n    localStorage.setItem('sudo', token)\r\n  }\r\n\r\n  renderError = () => {\r\n    if (!this.state.status && this.state.message) {\r\n      return (<Message negative>\r\n        <Message.Header>{this.state.message}</Message.Header>\r\n      </Message>)\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { username, password, status } = this.state\r\n    if (status) {\r\n      Auth.userLogin(status)\r\n      return <Redirect to='/' />\r\n    }\r\n    return (\r\n      <div className=\"bg\">\r\n        <Navbar />\r\n        <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Header as='h2' inverted textAlign='center'>\r\n              {/* <Image src='/logo.png' /> */}\r\n              Log-in to your account\r\n      </Header>\r\n            <Form size='large'>\r\n              <Segment stacked>\r\n                <Form.Input fluid icon='user' name='username' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\r\n                <Form.Input fluid icon='lock' name='password' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\r\n                {this.renderError()}\r\n                <Mutation mutation={LOGIN_CHECK} variables={{ username, password }}\r\n                  update={(cache, { data }) => {\r\n                    this.setState({\r\n                      status: data.loginCheck.status,\r\n                      message: data.loginCheck.response\r\n                    });\r\n                    this.setClientToken(data.loginCheck.response)\r\n                  }\r\n                  }\r\n                >\r\n                  {loginCheck => (\r\n                    <Button type=\"submit\" color='teal' fluid size='large' onClick={loginCheck}>\r\n                      Login\r\n                  </Button>\r\n                  )}\r\n                </Mutation>\r\n              </Segment>\r\n            </Form>\r\n            <Message>\r\n              New to us? <a href='#signup'>Sign Up</a>\r\n            </Message>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, Form, Grid, Header, Segment, Message, Popup, List } from 'semantic-ui-react';\r\nimport { ADD_USER } from '../api/queries';\r\nimport { Mutation } from 'react-apollo';\r\nimport Navbar from '../components/navbar';\r\n\r\n\r\nexport default class Signup extends React.Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\",\r\n    image: \"\",\r\n    active: true,\r\n    gql_res: {},\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  renderError = () => {\r\n    let { gql_res } = this.state\r\n    if (!gql_res.status && gql_res.response) {\r\n      return (<Message negative>\r\n        <Message.Header>{gql_res.response}</Message.Header>\r\n      </Message>)\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    let { firstName, lastName, username, email, password, image, active } = this.state\r\n    let account = {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      email,\r\n      password,\r\n      image,\r\n      active\r\n    }\r\n    if (this.state.gql_res.status) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n      <div className=\"bg\" style={{ height: '100vh' }}>\r\n        <Navbar />\r\n        <Grid style={{ margin: 50 + 'px' }} textAlign='center' verticalAlign='middle'>\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Header as='h2' inverted textAlign='center'>\r\n              Create an account\r\n      </Header>\r\n            <Form size='large'>\r\n              <Segment stacked>\r\n                <Form.Input name='firstName' fluid icon='user' iconPosition='left' placeholder='Firstname' onChange={this.handleChange} />\r\n                <Form.Input name='lastName' fluid icon='user' iconPosition='left' placeholder='Lastname' onChange={this.handleChange} />\r\n                <Form.Input name='username' fluid icon='user' iconPosition='left' placeholder='Username' onChange={this.handleChange} />\r\n                <Form.Input name='email' fluid icon='mail' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\r\n                <Popup trigger={\r\n                  <Form.Input name='password' fluid icon='lock' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />} wide>\r\n                  <Header as='h2'>\r\n                    A strong password requires:\r\n                    </Header>\r\n                  <List bulleted>\r\n                    <List.Item>More than 8 Characters</List.Item>\r\n                    <List.Item>Atleast 1 Uppercase letter</List.Item>\r\n                    <List.Item>Atleast 1 Lowercase letter</List.Item>\r\n                    <List.Item>Atleast 1 Special character (!@#$%^&*)</List.Item>\r\n                    <List.Item>Atleast 1 Number</List.Item>\r\n                  </List>\r\n                </Popup>\r\n                <Form.Input name='confirm' fluid icon='lock' iconPosition='left' placeholder='Confirm Password' type='password' onChange={this.handleChange} />\r\n                <Mutation mutation={ADD_USER} variables={{ account }}\r\n                  update={(cache, { data }) => {\r\n                    console.log(data)\r\n                    this.setState({ gql_res: data.createAccount })\r\n                  }\r\n                  }\r\n                >\r\n                  {createAccount => (\r\n                    <Button type=\"submit\" color='teal' fluid size='large' onClick={createAccount}>\r\n                      Signup\r\n                  </Button>\r\n                  )}\r\n                </Mutation>\r\n                {this.renderError()}\r\n              </Segment>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport Navbar from '../components/navbar';\r\nimport { Header, Button } from 'semantic-ui-react';\r\nimport { Redirect } from 'react-router-dom';\r\nexport default class HomePage extends React.Component {\r\n    state = {\r\n        redirect: false\r\n    }\r\n\r\n    render() {\r\n        let { redirect } = this.state\r\n        if (redirect) {\r\n            return <Redirect to='/webplayer' />\r\n        }\r\n        return (\r\n            <div className=\"bg\">\r\n                <Navbar />\r\n                <Header as='h1' icon textAlign='center' inverted style={{ fontSize: 40, marginTop: '4em' }}>\r\n                    <Header.Content>\r\n                        Lose yourself in\r\n                  50 million songs.\r\n      </Header.Content>\r\n                    <Button onClick={() => this.setState({ redirect: true })}>Start Listening</Button>\r\n                </Header>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\r\nimport { Mutation, Query } from '@apollo/react-components';\r\nimport { USERS_PLAYLIST,NEW_TRACK } from '../api/queries';\r\nimport Auth from '../utils/Auth';\r\n\r\nexport default class PlaylistPopup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      playlist:''\r\n    }\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      open: false\r\n    })\r\n    this.props.reset()\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({\r\n      open: true\r\n    })\r\n  }\r\n\r\n  setPlaylist = (event) => {\r\n    let playlist = event.target.name\r\n    let { song } = this.props\r\n    let song_proto = {\r\n      track: song.track,\r\n      artist: song.artist,\r\n      album: song.album,\r\n      song: song.song,\r\n      artwork: song.artwork,\r\n      playlist_name: playlist\r\n    }\r\n    this.setState({playlist,song_proto})\r\n  }\r\n\r\n  getPlaylist = (playlists) => {\r\n    let allPlaylists = [];\r\n    for (let z of playlists) {\r\n      allPlaylists.push(<Button name={z.name} onClick={this.setPlaylist}>{z.name}</Button>)\r\n    }\r\n    return allPlaylists;\r\n  }\r\n\r\n  render() {\r\n    let { open,song_proto,playlist } = this.state\r\n    return (\r\n      <Modal trigger={<Button onClick={this.openModal} icon=\"add\"></Button>} basic size='small' open={open}>\r\n        <Header icon='music' content='Select Playlist' />\r\n        <Modal.Content>\r\n\r\n          <Query query={USERS_PLAYLIST} variables={{ username: Auth.getUserName() }}>\r\n            {({ loading, error, data }) => {\r\n              if(loading) return 'loading...'\r\n              return (\r\n                  <div>\r\n                    {this.getPlaylist(data.playlistsForUser.playlists)}\r\n                  </div>\r\n                )\r\n            }\r\n            }\r\n          </Query>\r\n\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <div style={{margin:\"5px\"}}>\r\n          <b>Selected playlist: {playlist}</b>\r\n          </div>\r\n          <Button basic color='red' inverted onClick={this.closeModal}>\r\n            <Icon name='remove' /> Cancel\r\n      </Button>\r\n      <Mutation mutation={NEW_TRACK} variables={{ username:Auth.getUserName(),track:song_proto }}\r\n                update={(cache, { loading,data }) => {\r\n                  if(!loading){\r\n                  this.closeModal()\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                 {addToPlaylist => (\r\n          <Button color='green' onClick={addToPlaylist} inverted>\r\n            <Icon name='checkmark' /> Add\r\n      </Button>\r\n                 )}\r\n      </Mutation>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Button, Dimmer, Image } from 'semantic-ui-react'\r\nimport PlaylistPopup from '../components/PlaylistPopup'\r\nexport default class cards extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  handleShow = () => this.setState({ active: true })\r\n  handleHide = () => this.setState({ active: false })\r\n\r\n  intialPlayer = (track) => {\r\n    this.setState({activeTrack:track})\r\n    this.props.playTrack(track)\r\n  }\r\n\r\n  resetCard = () => {\r\n    this.setState({\r\n      active:false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let {image,index,song_meta} = this.props\r\n    const { active } = this.state\r\n    const content = (\r\n      <div>\r\n        <Button primary icon=\"play\" onClick={() => this.intialPlayer(index)}></Button>\r\n        <PlaylistPopup song={song_meta} reset={this.resetCard}/>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <Dimmer.Dimmable\r\n        as={Image}\r\n        dimmed={active}\r\n        dimmer={{ active, content }}\r\n        onMouseEnter={this.handleShow}\r\n        onMouseLeave={this.handleHide}\r\n        size='small'\r\n        src={image}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\n\r\nexport default class Player extends React.Component{\r\n    render(){\r\n      let { source } = this.props\r\n        return(\r\n            // <audio id=\"player\" controls>\r\n            //   <source src=\"\" />\r\n            // </audio>\r\n            // </div>\r\n            <div className=\"audioPlayer\">\r\n  <AudioPlayer\r\n  autoPlay\r\n  src={source}\r\n  onPlay={e => console.log(\"onPlay\")}\r\n  // other props here\r\n/>\r\n</div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport Auth from '../utils/Auth';\r\n\r\nexport default class Sidebar extends React.Component {\r\n\r\n    tabSwitch = (selected) => {\r\n        this.props.setTab(selected)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SideNav className=\"sidebar\"\r\n                onSelect={(selected) => {\r\n                    if (selected === 'signout') return Auth.signOutUser()\r\n                    this.tabSwitch(selected)\r\n                }}\r\n            >\r\n                <SideNav.Toggle />\r\n                <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem eventKey=\"home\">\r\n                        <NavIcon>\r\n                            <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Home\r\n            </NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"playlist\">\r\n                        <NavIcon>\r\n                            <i className=\"fas fa-list\" style={{ fontSize: '1.75em' }} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Playlist\r\n            </NavText>\r\n                    </NavItem>\r\n\r\n                    <NavItem eventKey=\"more\">\r\n                        <NavIcon>\r\n                            <i className=\"fa fas fa-cogs\" style={{ fontSize: '1.75em' }} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Settings\r\n            </NavText>\r\n                        <NavItem >\r\n                            <NavText>\r\n                                Profile\r\n                            </NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"manage_playlist\">\r\n                            <NavText>\r\n                                Manage playlists\r\n                            </NavText>\r\n                        </NavItem>\r\n                    </NavItem>\r\n\r\n                    <NavItem eventKey=\"signout\">\r\n                        <NavIcon>\r\n                                <i className=\"fas fa-sign-out-alt\" style={{ fontSize: '1.75em' }} />\r\n                        </NavIcon>\r\n                            <NavText>\r\n                                Signout\r\n            </NavText>\r\n                    </NavItem>\r\n                </SideNav.Nav>\r\n            </SideNav>\r\n                )\r\n            }\r\n        }\r\n","import React, { Component } from 'react'\r\nimport { Button, Dimmer, Image } from 'semantic-ui-react'\r\nimport Auth from '../utils/Auth'\r\nimport { FOLLOW_PLAYLIST, UNFOLLOW_PLAYLIST } from '../api/queries'\r\nimport { Mutation } from 'react-apollo';\r\n\r\nexport default class cards extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: Auth.getUserName(),\r\n      playlist: this.props.playlist_meta.name\r\n    }\r\n  }\r\n\r\n  handleShow = () => this.setState({ active: true })\r\n  handleHide = () => this.setState({ active: false })\r\n\r\n  intialPlayer = (playlist) => {\r\n    this.setState({ activePlaylist: playlist })\r\n    let songList = [];\r\n    for (const track of this.props.songs) {\r\n      songList.push(track.song);\r\n    }\r\n    this.props.playTrack(songList, 0)\r\n  }\r\n\r\n  resetCard = () => {\r\n    this.setState({\r\n      active: false\r\n    })\r\n  }\r\n\r\n  renderFollowButton = () => {\r\n    let { username, playlist } = this.state;\r\n    let follower_list = this.props.playlist_meta.follower_list\r\n    if (follower_list.includes(Auth.getUserName())) {\r\n      return (\r\n        <Mutation mutation={UNFOLLOW_PLAYLIST} variables={{ username, playlistName: playlist }}>\r\n          {unfollowPlaylist => (\r\n            <Button icon=\"heart\" color='red' onClick={unfollowPlaylist}></Button>\r\n          )}\r\n        </Mutation>\r\n      )\r\n    } else {\r\n      return (\r\n        <Mutation mutation={FOLLOW_PLAYLIST} variables={{ username, playlistName: playlist }}>\r\n          {followPlaylist => (\r\n            <Button icon=\"heart outline\" color='red' onClick={followPlaylist}></Button>\r\n          )}\r\n        </Mutation>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { image, index } = this.props\r\n    const { active } = this.state\r\n    const content = (\r\n      <div>\r\n        <Button primary icon=\"play\" onClick={() => this.intialPlayer(index)}></Button>\r\n        {this.renderFollowButton()}\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <Dimmer.Dimmable\r\n        as={Image}\r\n        dimmed={active}\r\n        dimmer={{ active, content }}\r\n        onMouseEnter={this.handleShow}\r\n        onMouseLeave={this.handleHide}\r\n        size='small'\r\n        src={image}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Header, Button, List, Icon, Popup } from 'semantic-ui-react'\r\nimport { DELETE_TRACK } from '../api/queries';\r\nimport Auth from '../utils/Auth';\r\nimport { Query } from 'react-apollo';\r\n\r\nexport default class songlist extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: Auth.getUserName(),\r\n      delete: false,\r\n      trackInfo: {},\r\n      open: false\r\n    }\r\n  }\r\n\r\n  playTrack = (track) => {\r\n    let songList = [];\r\n    let startTrack;\r\n    for (const playlist of this.props.data) {\r\n      if (playlist.name === this.props.choice) {\r\n        for (const song of playlist.songs) {\r\n          songList.push(song.song);\r\n        }\r\n      }\r\n    }\r\n    startTrack = songList.indexOf(track);\r\n    this.playSong(songList, startTrack);\r\n  }\r\n\r\n  async playSong(songList, startTrack) {\r\n    if (!this.props.from) {\r\n      let index = startTrack;\r\n      let x = document.querySelector(\"#player\");\r\n      x.src = songList[index];\r\n      index++;\r\n      var playPromise = x.play();\r\n\r\n      if (playPromise !== undefined) {\r\n        playPromise.then(_ => {\r\n          x.addEventListener('ended', async () => {\r\n            if (index !== songList.length) {\r\n              await this.playSong(songList, index);\r\n            } else {\r\n              await this.playSong(songList, 0);\r\n            }\r\n          });\r\n        })\r\n          .catch(error => {\r\n          });\r\n      }\r\n    } else {\r\n      this.props.playTrack(songList, startTrack);\r\n    }\r\n  }\r\n\r\n  deleteTrack = (event) => {\r\n    let trackInfo = { track: event.target.id, artist: '', playlist_name: this.props.choice }\r\n\r\n    for (const playlist of this.props.data) {\r\n      if (playlist.name === this.props.choice) {\r\n        for (const song of playlist.songs) {\r\n          if (song.track === trackInfo.track) {\r\n            trackInfo.artist = song.artist\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      delete: true,\r\n      trackInfo\r\n    });\r\n  }\r\n\r\n  renderDelete = () => {\r\n    if (this.state.delete) {\r\n      return (\r\n        <Query query={DELETE_TRACK} variables={{ username: this.state.username, trackInfo: this.state.trackInfo }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return 'Loading...';\r\n            if (error) return `Error! ${error.message}`;\r\n            console.log(data)\r\n            return (\r\n              <div>\r\n                {this.buildList()}\r\n              </div>\r\n            )\r\n          }}\r\n        </Query>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderDeleteState = () => {\r\n    if (this.state.delete) {\r\n      this.setState({\r\n        delete: false\r\n      });\r\n    }\r\n  }\r\n\r\n  renderRemove = (song, creator) => {\r\n    if (this.state.username === creator && !this.props.from) {\r\n      return (\r\n        <List.Content floated='right'>\r\n          {this.renderDelete()}\r\n          <Popup basic content='Remove from playlist' trigger={<Icon inverted id={song.track} ref={song.artist} onClick={this.deleteTrack} link name='remove' />} />\r\n          {this.renderDeleteState()}\r\n        </List.Content>\r\n      )\r\n    }\r\n  }\r\n\r\n  buildList = () => {\r\n    let playlists = this.props.data;\r\n    let listItems = [];\r\n    let index = 0;\r\n    for (const playlist of playlists) {\r\n      if (playlist.name === this.props.choice) {\r\n        let songs = playlist.songs;\r\n        for (const song of songs) {\r\n\r\n          listItems.push(\r\n            <List.Item key={index}>\r\n            <Button inverted floated='left' size='mini' onClick={() => this.playTrack(song.song)} style={{ marginTop: 10 }} icon>\r\n              <Icon name='play'/>\r\n            </Button>\r\n              <List.Header>\r\n                {song.track}\r\n                  </List.Header>\r\n              <List.Description>{song.artist} | {song.album}</List.Description>\r\n              {this.renderRemove(song, playlist.creator)}\r\n\r\n            </List.Item>\r\n          )\r\n          index++;\r\n        }\r\n      }\r\n    }\r\n    return listItems;\r\n  }\r\n\r\n  render() {\r\n    let choice = this.props.choice;\r\n    return (\r\n      <div>\r\n        <Button onClick={this.props.reset} floated='left' size='small' icon='angle left' />\r\n        <Header centered='true' as='h2' inverted>\r\n          {choice}\r\n        </Header>\r\n        <List celled relaxed inverted>\r\n          {this.buildList()}\r\n        </List>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport { ALL_PLAYLISTS } from '../api/queries';\r\nimport '../styling/App.css';\r\nimport { Query } from 'react-apollo';\r\nimport PlaylistCards from './playlistCards';\r\nimport SongList from '../components/songlist';\r\n\r\nexport default class WebplayerPlaylists extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewSongs: false,\r\n            data: [],\r\n            choice: ''\r\n        }\r\n    }\r\n\r\n    playTrack = (songList, item) => {\r\n        let index = item\r\n        let x = document.querySelector(\"#player\");\r\n        x.src = songList[index];\r\n        index++;\r\n        var playPromise = x.play();\r\n\r\n        if (playPromise !== undefined) {\r\n            playPromise.then(_ => {\r\n                x.addEventListener('ended', async () => {\r\n                    if (index !== songList.length) {\r\n                        await this.playTrack(songList, index);\r\n                    } else {\r\n                        await this.playTrack(songList, 0);\r\n                    }\r\n                });\r\n            })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n    viewSongs = (data, choice) => {\r\n        this.setState({\r\n            viewSongs: true,\r\n            data,\r\n            choice\r\n        });\r\n    }\r\n\r\n    renderSongs = () => {\r\n        return (\r\n            <SongList\r\n                data={this.state.data}\r\n                choice={this.state.choice}\r\n                from='webplayer'\r\n                playTrack={this.playTrack}\r\n                reset={this.reset}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderPlaylists = () => (\r\n        <Query query={ALL_PLAYLISTS} pollInterval={500}>\r\n            {({ loading, error, data }) => {\r\n                if (loading) return 'Loading...';\r\n                if (error) return `Error! ${error.message}`;\r\n                let playlistData = data.allPlaylists.playlists;\r\n                let songTiles = [];\r\n                for (let z = 0; z < playlistData.length; z++) {\r\n                    let playlist = playlistData[z];\r\n                    if (playlist.songs.length > 0) {\r\n                        songTiles.push(\r\n                            <div key={z} className=\"cardDiv\">\r\n                                <PlaylistCards\r\n                                    image={playlist.songs[0].artwork}\r\n                                    songs={playlist.songs}\r\n                                    playTrack={this.playTrack}\r\n                                    playlist_meta={playlist}\r\n                                    index={z}\r\n                                /><br />\r\n                                <strong className='playlistSelect' onClick={() => this.viewSongs(playlistData, playlist.name)}>{playlist.name}</strong>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                return songTiles\r\n            }}\r\n        </Query>\r\n    )\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            viewSongs: false,\r\n            choice: ''\r\n        });\r\n    }\r\n\r\n    renderData = () => {\r\n        if (this.state.viewSongs) {\r\n            return (\r\n                <div>\r\n                    {this.renderSongs()}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Card.Group centered itemsPerRow={6}>\r\n                    {this.renderPlaylists()}\r\n                </Card.Group>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderData()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../styling/App.css';\r\nimport { Container, Card, Grid } from 'semantic-ui-react';\r\nimport Cards from '../components/card';\r\nimport Player from '../components/player';\r\nimport SidebarA from '../components/sidebar';\r\nimport OnChangeSearch from '../components/onChangeSearch';\r\nimport Playlists from '../components/webplayerPlaylists';\r\nimport { Redirect } from 'react-router-dom'\r\nexport default class Webplayer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current_Tab:'',\r\n      track:''\r\n    }\r\n  }\r\n\r\n  playTrack = (track) => {\r\n    let song_data = this.props.location.state.data.searchSong\r\n    // let x = document.querySelector(\"#player\");\r\n    this.setState({track: song_data[track].song})\r\n    // x.src = song_data[track].song\r\n    // x.play();\r\n  }\r\n\r\n  renderTab = (tab) => {\r\n    if(tab === undefined) tab = 'home'\r\n    if(tab === 'home') return this.renderData()\r\n    if(tab === 'playlist') return <Playlists />\r\n    if(tab === 'manage_playlist') return <Redirect to='/profile'/>\r\n  }\r\n\r\n  setTab = (tab) => {\r\n      this.setState({current_Tab:tab})\r\n  }\r\n\r\n  renderData = () => {\r\n    if (this.props.location.state !== undefined) {\r\n      let song_data = this.props.location.state.data.searchSong\r\n      let songTiles = [];\r\n      for (let z = 0; z < song_data.length; z++) {\r\n        songTiles.push(\r\n          <div key={z} className=\"cardDiv\">\r\n            <Cards\r\n              image={song_data[z].artwork}\r\n              artist={song_data[z].artist}\r\n              track={song_data[z].track}\r\n              song={song_data[z].song}\r\n              playTrack={this.playTrack}\r\n              song_meta={song_data[z]}\r\n              index={z}\r\n            /><br />\r\n            <strong>{song_data[z].track}</strong>\r\n          </div>\r\n        )\r\n      }\r\n      return <Card.Group centered itemsPerRow={6}>{songTiles}</Card.Group>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { current_Tab, track } = this.state\r\n    return (\r\n      <div className='webplayer'>\r\n        <SidebarA setTab={this.setTab}/>\r\n        <div className=\"cardContainer\">\r\n          <Grid >\r\n            <Grid.Row centered><OnChangeSearch switchtab={this.setTab} /></Grid.Row>\r\n          </Grid>\r\n          <Container style={{ margin: 15 }}>\r\n          {this.renderTab(current_Tab)}\r\n          </Container>\r\n        </div>\r\n        <Player source={track}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Header, Grid, Input, Button, Message, Icon, Modal, Divider, Popup, List } from 'semantic-ui-react'\r\nimport { USER_DATA, UPDATE_USER, UPDATE_PASSWORD } from '../api/queries';\r\nimport { Query, Mutation } from 'react-apollo';\r\nimport Auth from '../utils/Auth';\r\n\r\nexport default class settings extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: Auth.getUserName(),\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            response: '',\r\n            status: false,\r\n            modalOpen: false,\r\n            currentPass: '',\r\n            newPass: '',\r\n            testPass: '',\r\n            modalError: false\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    renderUserSettings = () => (\r\n        <Query query={USER_DATA} variables={{ username: Auth.getUserName() }} pollInterval={500}>\r\n            {({ loading, error, data }) => {\r\n                if (loading) return 'Loading...';\r\n                if (error) return `Error! ${error.message}`;\r\n                let info = data.userData.user;\r\n                return (\r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header inverted floated='left' as='h4'>\r\n                                    Username: {this.state.username}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={7}>\r\n                                <Input style={{ width: 200, float: 'left' }} label={{ tag: false, color: 'teal', content: 'First name' }} placeholder={info.firstName} name='firstName' onChange={this.handleChange} />\r\n                            </Grid.Column>\r\n                            <Grid.Column width={9}>\r\n                                <Input style={{ width: 200, float: 'left' }} label={{ tag: false, color: 'teal', content: 'Last name' }} placeholder={info.lastName} name='lastName' onChange={this.handleChange} />\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        {this.renderEmail(info)}\r\n                    </Grid>\r\n                )\r\n            }}\r\n        </Query>\r\n    )\r\n\r\n    renderMessage = () => {\r\n        if (this.state.status && this.state.response) {\r\n            return (\r\n                <Message positive>\r\n                    <Message.Header>{this.state.response}</Message.Header>\r\n                </Message>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleOpen = () => this.setState({ modalOpen: true })\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            modalOpen: false,\r\n            modalError: false\r\n        })\r\n    }\r\n\r\n    handleCheck = (info) => {\r\n        if (this.state.newPass === this.state.testPass) {\r\n            if (info.status) {\r\n                this.setState({ modalOpen: false })\r\n            } else {\r\n                this.setState({\r\n                    modalError: true,\r\n                    response: info.response\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                modalError: true,\r\n                response: info.response\r\n            });\r\n        }\r\n    }\r\n\r\n    renderEmail = (info) => {\r\n        return (\r\n            <Grid.Row>\r\n                <Grid.Column width={10}>\r\n                    <Input fluid label={{ tag: false, color: 'teal', content: 'Email' }} placeholder={info.email} name='email' onChange={this.handleChange} />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        )\r\n    }\r\n\r\n    handleModalError = () => {\r\n        if (this.state.modalError) {\r\n            return (\r\n                <Message style={{ margin: 0 }} negative>\r\n                    <Message.Header>{this.state.response}</Message.Header>\r\n                </Message>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let { username, firstName, lastName, email, currentPass, newPass, testPass } = this.state;\r\n        return (\r\n            <div>\r\n                {this.renderUserSettings()}\r\n                <br />\r\n                {this.renderMessage()}\r\n                <Mutation mutation={UPDATE_USER} variables={{ username, updateData: { firstName, lastName, email } }}\r\n                    update={(cache, { data }) => {\r\n                        this.setState({\r\n                            response: data.updateUser.response,\r\n                            status: data.updateUser.status\r\n                        });\r\n                    }\r\n                    }\r\n                >\r\n                    {updateInfo => (\r\n                        <Button type=\"submit\" color='teal' onClick={updateInfo}>\r\n                            Update\r\n                    </Button>\r\n                    )}\r\n                </Mutation>\r\n                <Modal\r\n                    trigger={<Button onClick={this.handleOpen}>Change Password</Button>}\r\n                    open={this.state.modalOpen}\r\n                    onClose={this.handleClose}\r\n                    size='mini'\r\n                >\r\n                    <Header icon='lock' content='Change password' />\r\n                    <Modal.Content>\r\n                        <Header as='h4'> Current Password\r\n                            <Input name='currentPass' type='password' onChange={this.handleChange}></Input>\r\n                        </Header>\r\n                    </Modal.Content>\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <Modal.Content>\r\n                        <Header as='h4'> New Password <br />\r\n                            <Input name='newPass' type='password' onChange={this.handleChange}></Input>\r\n                            <Popup trigger={<Icon size='mini' style={{ float: 'right' }} circular name='info' />} wide>\r\n                                <Header as='h2'>\r\n                                    A strong password requires:\r\n                                </Header>\r\n                                <List bulleted>\r\n                                    <List.Item>More than 8 Characters</List.Item>\r\n                                    <List.Item>Atleast 1 Uppercase letter</List.Item>\r\n                                    <List.Item>Atleast 1 Lowercase letter</List.Item>\r\n                                    <List.Item>Atleast 1 Special character (!@#$%^&*)</List.Item>\r\n                                    <List.Item>Atleast 1 Number</List.Item>\r\n                                </List>\r\n                            </Popup>\r\n                        </Header>\r\n                        <Header as='h4'> Confirm Password\r\n                        <Input style={{ marginTop: 3 }} name='testPass' type='password' onChange={this.handleChange}></Input>\r\n                        </Header>\r\n                    </Modal.Content>\r\n                    {this.handleModalError()}\r\n                    <Modal.Actions>\r\n                        <Button color='red' onClick={this.handleClose} inverted>\r\n                            <Icon name='cancel' /> Cancel\r\n                        </Button>\r\n                        <Mutation mutation={UPDATE_PASSWORD} variables={{ username, currentPass, newPass, testPass }}\r\n                            update={(cache, { data }) => {\r\n                                let info = data.updatePassword;\r\n                                this.handleCheck(info);\r\n                            }\r\n                            }\r\n                        >\r\n                            {updatePass => (\r\n                                <Button color='green' onClick={updatePass} inverted>\r\n                                    <Icon name='check' /> Update\r\n                            </Button>\r\n                            )}\r\n                        </Mutation>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Icon, Button, Message, Card, Grid, Container, Modal, Input, Header, Confirm } from 'semantic-ui-react';\r\nimport { USERS_PLAYLIST, NEW_PLAYLIST, UNFOLLOW_PLAYLIST } from '../api/queries';\r\nimport { Query, Mutation } from 'react-apollo';\r\nimport SongList from './songlist';\r\nimport Auth from '../utils/Auth';\r\nimport AudioPlayer from './player';\r\n\r\nexport default class PlaylistDisplay extends React.Component {\r\n    state = {\r\n        username: Auth.getUserName(),\r\n        showSongs: false,\r\n        playlistChoice: '',\r\n        modalOpen: false,\r\n        editSettings: false,\r\n        modalError: false,\r\n        response: '',\r\n        playlistName: '',\r\n        open: false\r\n    }\r\n\r\n    open = () => this.setState({ open: true })\r\n    close = () => this.setState({ open: false })\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleOpen = () => this.setState({ modalOpen: true })\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            modalOpen: false,\r\n            modalError: false,\r\n            playlistName: ''\r\n        })\r\n    }\r\n\r\n    handleModalError = () => {\r\n        if (this.state.modalError && this.state.response) {\r\n            return (\r\n                <Message style={{ margin: 0 }} negative>\r\n                    <Message.Header>{this.state.response}</Message.Header>\r\n                </Message>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleCheck = (res) => {\r\n        if (res.newPlaylist.status) {\r\n            this.setState({\r\n                modalOpen: false,\r\n                modalError: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                modalError: true,\r\n                response: res.newPlaylist.response\r\n            })\r\n        }\r\n    }\r\n\r\n    displaySongs = (value) => {\r\n        this.setState({\r\n            showSongs: true,\r\n            playlistChoice: value\r\n        });\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            showSongs: false,\r\n            playlistChoice: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Query query={USERS_PLAYLIST} variables={{ username: Auth.getUserName() }} pollInterval={500}>\r\n                {({ loading, error, data }) => {\r\n                    if (loading) return 'Loading...';\r\n                    if (error) return `Error! ${error.message}`;\r\n                    let playlistCards = [];\r\n                    let response;\r\n                    let index = 0;\r\n                    if (this.state.showSongs) {\r\n                        return (\r\n                            <Grid.Row>\r\n                                <Grid.Column>\r\n                                    <Mutation mutation={UNFOLLOW_PLAYLIST} variables={{ username: this.state.username, playlistName: this.state.playlistChoice }}\r\n                                        update={(cache, { data }) => {\r\n                                            this.reset() \r\n                                        }\r\n                                        }\r\n                                    >\r\n                                        {unfollow => (\r\n                                            <div>\r\n                                                <Button onClick={this.open} floated='right' basic inverted color='teal'>\r\n                                                    Unfollow\r\n                                                </Button>\r\n                                                <Confirm\r\n                                                    size='mini'\r\n                                                    open={this.state.open}\r\n                                                    onCancel={this.close}\r\n                                                    onConfirm={unfollow}\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </Mutation>\r\n                                    <SongList\r\n                                        data={data.playlistsForUser.playlists}\r\n                                        choice={this.state.playlistChoice}\r\n                                        reset={this.reset}\r\n                                    />\r\n                                    <AudioPlayer />\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        )\r\n                    } else {\r\n                        if (data.playlistsForUser.playlists) {\r\n                            for (const playlist of data.playlistsForUser.playlists) {\r\n                                let followerString = 'followers: ' + playlist.followers;\r\n                                let songString = 'songs: ' + playlist.song_count;\r\n                                playlistCards.push(\r\n                                    <Card\r\n                                        color='teal'\r\n                                        header={playlist.name}\r\n                                        meta={followerString}\r\n                                        description={songString}\r\n                                        key={index}\r\n                                        onClick={() => { this.displaySongs(playlist.name) }}\r\n                                    />\r\n                                )\r\n                                index++;\r\n                            }\r\n                        }\r\n                        response = (\r\n                            <Container>\r\n                                <Grid.Row width={16}>\r\n                                    <Card.Group itemsPerRow={3}>\r\n                                        {playlistCards}\r\n                                        <Modal\r\n                                            trigger={\r\n                                                <Card onClick={this.handleOpen} color='teal' key='create'>\r\n                                                    <Card.Content>\r\n                                                        <Button style={{ width: 50, height: 50 }} circular icon='add' />\r\n                                                    </Card.Content>\r\n                                                </Card>}\r\n                                            open={this.state.modalOpen}\r\n                                            basic\r\n                                            onClose={this.handleClose}\r\n                                            size='mini'\r\n                                        >\r\n                                            <Header icon='music' content='Give your playlist a name' />\r\n                                            <Modal.Content>\r\n                                                <Input transparent inverted placeholder='Playlist name..' name='playlistName' type='text' onChange={this.handleChange}></Input>\r\n                                            </Modal.Content>\r\n                                            {this.handleModalError()}\r\n                                            <Modal.Actions>\r\n                                                <Button color='red' onClick={this.handleClose} inverted>\r\n                                                    <Icon name='cancel' /> Cancel\r\n                                                </Button>\r\n                                                <Mutation mutation={NEW_PLAYLIST} variables={{ name: this.state.playlistName, creator: this.state.username }}\r\n                                                    update={(cache, { data }) => {\r\n                                                        let res = data;\r\n                                                        this.handleCheck(res);\r\n                                                    }\r\n                                                    }\r\n                                                >\r\n                                                    {newPlaylist => (\r\n                                                        <Button color='green' onClick={newPlaylist} inverted>\r\n                                                            <Icon name='check' /> Create\r\n                                                        </Button>\r\n                                                    )}\r\n                                                </Mutation>\r\n                                            </Modal.Actions>\r\n                                        </Modal>\r\n                                    </Card.Group>\r\n                                </Grid.Row>\r\n                            </Container>);\r\n                    }\r\n                    return response;\r\n                }}\r\n            </Query>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Image, Menu, Grid, Header, Container, Label } from 'semantic-ui-react';\r\nimport Settings from '../components/editSettings';\r\nimport PlaylistDisplay from '../components/profilePlaylist';\r\nimport { USER_DATA } from '../api/queries';\r\nimport { Query } from 'react-apollo';\r\nimport Auth from '../utils/Auth';\r\nimport Navbar from '../components/navbar';\r\n\r\n\r\nexport default class Profile extends React.Component {\r\n    state = {\r\n        activeItem: 'Playlists'\r\n    };\r\n\r\n    handleItemClick = (e, { name }) => {\r\n        this.setState({ activeItem: name });\r\n    };\r\n\r\n    setTab = (chosen_tab) => {\r\n      this.setState({activeItem: chosen_tab})\r\n    }\r\n\r\n    renderBannerInfo = () => (\r\n        <Query query={USER_DATA} variables={{ username: Auth.getUserName() }}>\r\n            {({ loading, error, data }) => {\r\n                if (loading) return 'Loading...';\r\n                if (error) return `Error! ${error.message}`;\r\n                return (\r\n                    <Header as='h1' style={{marginTop: 0.8 + 'em'}} inverted floated='left'>\r\n                        Hello,  {Auth.getUserName()} <br />\r\n                        <Label as='a' color='purple' image>\r\n                            Joined\r\n                    <Label.Detail>{data.userData.user.timeStamp.created}</Label.Detail>\r\n                        </Label>\r\n                    </Header>\r\n                )\r\n            }}\r\n        </Query>\r\n    )\r\n\r\n    renderItem = () => {\r\n        if (this.state.activeItem === 'Playlists') {\r\n            return (\r\n                <PlaylistDisplay />\r\n            )\r\n        } else if (this.state.activeItem === 'Settings') {\r\n            return (\r\n                <Settings />\r\n            )\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"profile\" style={{backgroundColor:'black'}}>\r\n                <Navbar />\r\n                <Container style={{padding:10}}>\r\n                    <Grid>\r\n                        <Grid.Row style={{ paddingBottom: 0 }}>\r\n                            <Grid.Column width={16}>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row color='teal' style={{ marginTop: 15, borderRadius:10 }}>\r\n                            <Grid.Column width={2}>\r\n                                <Image style={{width:112, height:112}} circular src='https://react.semantic-ui.com/images/avatar/large/patrick.png' />\r\n                            </Grid.Column>\r\n                            <Grid.Column width={14}>\r\n                                {this.renderBannerInfo()}\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={16}>\r\n                                <Menu pointing secondary inverted>\r\n                                    <Menu.Item\r\n                                        name='Playlists'\r\n                                        active={this.state.activeItem === 'Playlists'}\r\n                                        onClick={this.handleItemClick}\r\n                                    >\r\n                                    </Menu.Item>\r\n                                    <Menu.Item\r\n                                        name='Settings'\r\n                                        active={this.state.activeItem === 'Settings'}\r\n                                        onClick={this.handleItemClick}\r\n                                    >\r\n                                    </Menu.Item>\r\n                                </Menu>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        {this.renderItem()}\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport HomePage from './pages/Homepage';\r\nimport Webplayer from './pages/Webplayer';\r\nimport Auth from './utils/Auth';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Profile from './pages/Profile';\r\n\r\nconst Router = (props) => (\r\n\r\n  <HashRouter>\r\n    <Switch>\r\n    <Route exact path=\"/login\" component={Login} />\r\n      <Route exact path=\"/signup\" component={Signup} />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <PrivateRoute exact path=\"/webplayer\" component={Webplayer} />\r\n      <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n      {/* <PrivateRoute exact path=\"/edit-user\" component={Edit_User} /> */}\r\n    </Switch>\r\n  </HashRouter>\r\n)\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      Auth.getAuth() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\"\r\n            }}\r\n          />\r\n        )\r\n    }\r\n  />\r\n);\r\n\r\n\r\nexport default Router;\r\n","import React from 'react'\r\nimport { Dimmer, Loader, Container } from 'semantic-ui-react'\r\n\r\nconst Loading = () => (\r\n  <div>\r\n      <Container style={{margin:50}}>\r\n    {/* <Segment> */}\r\n      <Dimmer active inverted>\r\n        <Loader size='large'>Loading</Loader>\r\n      </Dimmer>\r\n\r\n      {/* <Image src='/images/wireframe/paragraph.png' /> */}\r\n    {/* </Segment> */}\r\n    </Container>\r\n  </div>\r\n)\r\n\r\nexport default Loading\r\n","import React, { Component } from 'react';\r\nimport './styling/App.css';\r\nimport Router from './Router.jsx';\r\nimport Auth from './utils/Auth';\r\nimport Loading from './components/loader';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    auth: false,\r\n    loading: true\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ auth: await Auth.check(), loading: false })\r\n  }\r\n\r\n  render() {\r\n    if(this.state.loading){\r\n      return(\r\n        <Loading />\r\n        )\r\n    }else{\r\n      return (\r\n      <div className=\"App\">\r\n        <Router />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import ApolloClient from 'apollo-boost';\r\nconst config ={\r\n\r\n    graphql: new ApolloClient({\r\n        uri: '/graphql',\r\n      })\r\n\r\n}\r\nexport default config","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styling/index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './utils/serviceWorker';\r\nimport config from './config'\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\n\r\n// const { loading, error, data } = useQuery(DATA);\r\n// console.log(data)\r\n\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={config.graphql}>\r\n    <App />\r\n  </ApolloProvider>\r\n  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}