{"version":3,"sources":["api/typedefs.js","utils/Auth.js","pages/Login.jsx","pages/Signup.jsx","pages/Search.jsx","components/card.jsx","pages/Webplayer.jsx","components/songlist.jsx","pages/Profile.jsx","components/onChangeSearch.jsx","components/navbar.jsx","Router.jsx","components/loader.jsx","App.jsx","utils/serviceWorker.js","config.js","index.js"],"names":["ADD_USER","gql","SEARCH_SONG","ONCHANGE_SEARCH","LOGIN_CHECK","USERS_PLAYLIST","Auth","isAuthenticated","isUsername","token","check","jwt","localStorage","getItem","axios","post","then","res","data","response","client_id","userLogin","status","this","getToken","getAuth","getUserName","signOutUser","removeItem","Login","state","username","password","message","setClientToken","setItem","renderError","Message","negative","Header","handleChange","event","setState","target","name","value","to","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","as","color","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","type","mutation","variables","update","cache","loginCheck","Button","onClick","href","React","Component","Signup","firstName","lastName","email","confirm","image","active","gql_res","account","console","log","createAccount","Search","search","loading","pathname","Container","runSearch","cards","props","handleShow","handleHide","intialPlayer","track","activeTrack","playTrack","index","content","primary","Dimmer","Dimmable","Image","dimmed","dimmer","onMouseEnter","onMouseLeave","src","Webplayer","song_data","location","x","document","querySelector","song","play","renderData","searchSong","songTiles","z","length","push","key","className","artwork","artist","undefined","margin","Card","Group","centered","itemsPerRow","id","controls","songlist","startTrack","songList","playlist","choice","songs","indexOf","playSong","buildList","playlists","listItems","List","Item","floated","width","Description","album","marginTop","Icon","playPromise","_","addEventListener","a","catch","error","divided","relaxed","Profile","activeItem","showSongs","playlistChoice","handleItemClick","e","reset","playlistDisplay","query","playlistCards","Row","playlistsForUser","followerString","followers","songString","song_count","header","meta","description","displaySongs","warning","renderItem","paddingBottom","Divider","circular","inverted","Menu","pointing","secondary","columns","container","initialState","isLoading","results","num","OnChangeSearch","handleResultSelect","result","title","handleSearchChange","RegExp","escapeRegExp","handleResData","onChangeSearch","onResultSelect","onSearchChange","debounce","leading","Navbar","userStatus","children","position","PrivateRoute","component","rest","render","Router","exact","path","Loading","Loader","App","auth","Boolean","window","hostname","match","config","graphql","ApolloClient","uri","ReactDOM","client","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1740f0c1.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\nexport const ADD_USER = gql`\n  mutation($account:Account) {\n   createAccount (account:$account){\n        response,\n        status\n}\n    }\n`;\n\nexport const SEARCH_SONG = gql`\n  mutation($search:String) {\n   searchSong (search:$search){\n    track\n    artist\n    song\n    album\n    artwork\n   }\n  }\n`;\n\nexport const ONCHANGE_SEARCH = gql`\n  query($search:String) {\n  onChangeSearch(search:$search){\n\n      track\n      artist\n      song\n      album\n      artwork\n  }\n}\n`;\n\nexport const LOGIN_CHECK = gql`\n    mutation($username:String, $password:String) {\n      loginCheck (username:$username, password:$password){\n        response,\n        username,\n        status\n      }\n    }\n`;\n\nexport const USER_DATA = gql`\nquery($username:String){\n  userData(username:$username){\n    response,\n    user {\n      firstName\n      lastName\n      email\n      image\n    },\n    status\n  }\n}\n`;\n\nexport const DELETE_USER = gql`\n    mutation($username:String){\n      deleteUser (username:$username){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UPDATE_USER = gql`  \n    mutation($username:String, $updateData:UpdateData){\n      updateUser(username:$username, updateData: $updateData){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UPDATE_PASSWORD = gql`  \n    mutation($username:String, $currentPass:String, $newPass: String){\n      updatePassword(username:$username, currentPass:$currentPass, newPass:$newPass){\n        response,\n        status\n      }\n    }\n`;\n\nexport const NEW_PLAYLIST = gql`  \n    mutation($playlist:Playlist){\n      newPlaylist(playlist:$playlist){\n        response,\n        status\n      }\n    }\n`;\n\nexport const NEW_TRACK = gql`  \n    mutation($track:PlaylistTrack){\n      newTrack(track:$track){\n        response,\n        status\n      }\n    }\n`;\n\nexport const DELETE_TRACK = gql`  \n    mutation($track:TrackInfo){\n      deleteTrack(track:$track){\n        response,\n        status\n      }\n    }\n`;\n\nexport const FOLLOW_PLAYLIST = gql`  \n    mutation($username:String, $playlistName: String){\n      followPlaylist(username:$username, playlistName:$playlistName){\n        response,\n        status\n      }\n    }\n`;\n\nexport const UNFOLLOW_PLAYLIST = gql`  \n    mutation($username:String, $playlistName: String){\n      unfollowPlaylist(username:$username, playlistName:$playlistName){\n        response,\n        status\n      }\n    }\n`;\n\nexport const USERS_PLAYLIST = gql`  \n  query($username:String) {\n    playlistsForUser(username:$username) {\n      playlists {\n        name\n        followers\n        song_count\n        songs {\n          track\n          artist\n          song\n          album\n          artwork\n        }\n      }\n      response\n      status\n    }\n  }\n`;\n\nexport const VERIFY_USER = gql`\n    mutation($jwt:String){\n      verifytoken(jwt:$jwt){\n        response\n      }\n    }\n\n`;","import axios from 'axios';\n\nconst Auth = {\n    isAuthenticated: false,\n    isUsername: \"\",\n    token: \"\",\n    async check() {\n        let jwt = {\n            token: \"\",\n        }\n        jwt.token = localStorage.getItem('sudo')\n        if (jwt !== \"\") {\n            await axios.post(`/verify`, jwt)\n            .then(res => {\n                this.isAuthenticated = res.data.response\n                this.isUsername = res.data.client_id\n                this.token = jwt.token\n            })\n        }\n    },\n    userLogin(status){\n        this.isAuthenticated = status\n    },\n    getToken() {\n        return this.token\n    },\n    getAuth() {\n    // return true; //uncomment this for dev, to bypass authentication, most services wont work if this is uncommented.\n        return this.isAuthenticated;\n    },\n    getUserName() {\n        return this.isUsername\n    },\n   signOutUser(){\n        localStorage.removeItem('sudo')\n        return false;\n    }\n\n};\n\nexport default Auth;","import React from 'react';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { LOGIN_CHECK } from '../api/typedefs';\nimport { Mutation } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport Auth from '../utils/Auth';\n\nexport default class Login extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    status: Auth.getAuth(),\n    message: '',\n  }\n\n  setClientToken = (token) => {\n    localStorage.setItem('sudo', token)\n  }\n\n  renderError = () => {\n    if (!this.state.status && this.state.message) {\n      return (<Message negative>\n        <Message.Header>{this.state.message}</Message.Header>\n      </Message>)\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    let { username, password,status } = this.state\n    if(status){\n      Auth.userLogin(status)\n      return  <Redirect to='/' />\n    }\n    return (\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            {/* <Image src='/logo.png' /> */}\n            Log-in to your account\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input fluid icon='user' name='username' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\n              <Form.Input fluid icon='lock' name='password' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\n              {this.renderError()}\n              <Mutation mutation={LOGIN_CHECK} variables={{ username, password }}\n                update={(cache, { data }) => {\n                  this.setState({\n                    status: data.loginCheck.status,\n                    message: data.loginCheck.response\n                  });\n                  this.setClientToken(data.loginCheck.response)\n                }\n                }\n              >\n                {loginCheck => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={loginCheck}>\n                    Login\n                  </Button>\n                )}\n              </Mutation>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <a href='#signup'>Sign Up</a>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react';\nimport { ADD_USER } from '../api/typedefs';\nimport { Mutation } from 'react-apollo';\n\n\nexport default class Signup extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    image: \"\",\n    active: true,\n    gql_res: {},\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  renderError = () => {\n    let { gql_res } = this.state\n    if (!gql_res.status && gql_res.response) {\n      return (<Message negative>\n        <Message.Header>{gql_res.response}</Message.Header>\n      </Message>)\n    }\n  }\n\n\n  render() {\n    let { firstName, lastName, username, email, password, image, active } = this.state\n    let account = {\n      firstName,\n      lastName,\n      username,\n      email,\n      password,\n      image,\n      active\n    }\n    if (this.state.gql_res.status) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Create an account\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input name='firstName' fluid icon='user' iconPosition='left' placeholder='Firstname' onChange={this.handleChange} />\n              <Form.Input name='lastName' fluid icon='user' iconPosition='left' placeholder='Lastname' onChange={this.handleChange} />\n              <Form.Input name='username' fluid icon='user' iconPosition='left' placeholder='Username' onChange={this.handleChange} />\n              <Form.Input name='email' fluid icon='mail' iconPosition='left' placeholder='E-mail address' onChange={this.handleChange} />\n              <Form.Input name='password' fluid icon='lock' iconPosition='left' placeholder='Password' type='password' onChange={this.handleChange} />\n              <Form.Input name='confirm' fluid icon='lock' iconPosition='left' placeholder='Confirm Password' type='password' onChange={this.handleChange} />\n              <Mutation mutation={ADD_USER} variables={{ account }}\n                update={(cache, { data }) => {\n                  console.log(data)\n                  this.setState({ gql_res: data.createAccount })\n                }\n                }\n              >\n                {createAccount => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={createAccount}>\n                    Signup\n                  </Button>\n                )}\n              </Mutation>\n              {this.renderError()}\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n\n}","import React from 'react';\nimport { Button, Form, Grid, Header, Segment,Container } from 'semantic-ui-react'\nimport { SEARCH_SONG } from '../api/typedefs';\nimport { Redirect } from 'react-router-dom';\nimport { Mutation } from 'react-apollo'\nexport default class Search extends React.Component {\n  state = {\n    search: \"\",\n    gql_res: \"\",\n    loading: false\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      search: event.target.value\n    })\n  }\n\n  render() {\n    let { search } = this.state\n    if(this.state.gql_res !== \"\"){\n      console.log(this.state.gql_res)\n      return(\n        <Redirect to={{pathname: '/webplayer',\n                  state: { data: this.state.gql_res }}} />\n        )\n    }\n    return (\n      <Container>\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Search from over 30 million songs\n      </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input fluid icon='music' iconPosition='left' placeholder='Search Song' onChange={this.handleChange} />\n\n              <Mutation mutation={SEARCH_SONG} variables={{ search }}\n              update={(cache, { data }) => {\n              this.setState({ gql_res: data,\n                              loading:true\n              })\n                }\n                }>\n                {runSearch => (\n                  <Button type=\"submit\" color='teal' fluid size='large' onClick={runSearch}>\n                    Search\n          </Button>\n                )}\n              </Mutation>\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n      </Container>\n    )\n  }\n\n}","import React, { Component } from 'react'\nimport { Button, Dimmer, Image } from 'semantic-ui-react'\n\nexport default class cards extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    }\n  }\n\n  handleShow = () => this.setState({ active: true })\n  handleHide = () => this.setState({ active: false })\n\n  intialPlayer = (track) => {\n    this.setState({activeTrack:track})\n    this.props.playTrack(track)\n  }\n\n  render() {\n    let {image,index} = this.props\n    const { active } = this.state\n    const content = (\n      <div>\n        {/* <Header as='h4' inverted>\n          {track}\n        </Header> */}\n\n        <Button primary icon=\"play\" onClick={() => this.intialPlayer(index)}></Button>\n        {/* <Button>View</Button> */}\n      </div>\n    )\n\n    return (\n      <Dimmer.Dimmable\n        as={Image}\n        dimmed={active}\n        dimmer={{ active, content }}\n        onMouseEnter={this.handleShow}\n        onMouseLeave={this.handleHide}\n        size='small'\n        src={image}\n      />\n    )\n  }\n}","import React from 'react';\nimport '../styling/App.css';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Card } from 'semantic-ui-react';\nimport Cards from '../components/card';\nexport default class Webplayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTrack: ''\n    }\n  }\n\n  playTrack = (track) => {\n    let song_data = this.props.location.state.data\n    let x = document.querySelector(\"#player\");\n    x.src = song_data[track].song\n    x.play();\n  }\n\n  // stopActiveTrack = () => {\n\n  // }\n\n  renderData = () => {\n    let song_data = this.props.location.state.data.searchSong\n    console.log(song_data)\n    let songTiles = [];\n    for (let z = 0; z < song_data.length; z++) {\n      songTiles.push(\n        <div key={z} className=\"cardDiv\">\n          <Cards \n            image={song_data[z].artwork}\n            artist={song_data[z].artist}\n            track={song_data[z].track}\n            song={song_data[z].song}\n            playTrack={this.playTrack}\n            index={z}\n          /><br />\n          <strong>{song_data[z].track}</strong>\n        </div>\n      )\n    }\n    return songTiles\n  }\n\n  render() {\n    if (this.props.location.state === undefined) {\n      return <Redirect to=\"/\" />\n    } else {\n      return (\n        <div className=\"cardContainer\">\n          <Container style={{ margin: 15 }}>\n            <Card.Group centered itemsPerRow={6}>\n              {this.renderData()}\n            </Card.Group>\n          </Container>\n          <div className=\"audioPlayer\">\n            <audio id=\"player\" controls>\n              <source src=\"\" />\n            </audio>\n          </div>\n        </div>\n      )\n    }\n  }\n\n}","import React, { Component } from 'react'\nimport { Header, Button, List, Image, Icon } from 'semantic-ui-react'\n\nexport default class songlist extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  playTrack = (track) => {\n    let songList = [];\n    let startTrack;\n    for (const playlist of this.props.data) {\n      if (playlist.name === this.props.choice) {\n        for (const song of playlist.songs) {\n          songList.push(song.song);\n        }\n      }\n    }\n    startTrack = songList.indexOf(track);\n    this.playSong(songList, startTrack);\n  }\n\n  async playSong(songList, startTrack) {\n    let index = startTrack;\n    let x = document.querySelector(\"#player\");\n    x.src = songList[index];\n    index++;\n    var playPromise = x.play();\n\n    if (playPromise !== undefined) {\n      playPromise.then(_ => {\n        x.addEventListener('ended', async () => {\n          if (index !== songList.length) {\n            await this.playSong(songList, index);\n          } else {\n            await this.playSong(songList, 0);\n          }\n        });\n      })\n        .catch(error => {\n        });\n    }\n  }\n\n  buildList = () => {\n    let playlists = this.props.data;\n    let listItems = [];\n    let index = 0;\n    for (const playlist of playlists) {\n      if (playlist.name === this.props.choice) {\n        let songs = playlist.songs;\n        for (const song of songs) {\n          listItems.push(\n            <List.Item key={index}>\n              <Image floated='left' style={{ height: 100, width: 100 }} src={song.artwork} />\n              <List.Header>\n                {song.track}\n              </List.Header>\n              <List.Description>{song.artist}</List.Description>\n              <List.Description>{song.album}</List.Description>\n              <Button onClick={() => this.playTrack(song.song)} style={{ marginTop: 10 }} icon>\n                <Icon name='play' />\n              </Button>\n            </List.Item>\n          )\n          index++;\n        }\n      }\n    }\n    return listItems;\n  }\n\n  render() {\n    return (\n      <div>\n\n        <Header floated='left' as='h2'>\n          {this.props.choice}\n        </Header>\n        <br/>\n        <br/>\n        <br/>\n        <List divided relaxed>\n          {this.buildList()}\n        </List>\n        <div className=\"audioPlayer\">\n          <audio id=\"player\" controls>\n            <source src=\"\" />\n          </audio>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { Icon, Button, Message, Card, Image, Menu, Grid, Header, Divider, Container } from 'semantic-ui-react';\nimport { USERS_PLAYLIST } from '../api/typedefs';\nimport { Query } from 'react-apollo';\nimport SongList from '../components/songlist';\nimport Auth from '../utils/Auth'\n\n\nexport default class Profile extends React.Component {\n    state = {\n        activeItem: 'Playlists',\n        showSongs: false,\n        playlistChoice: ''\n    };\n\n    handleItemClick = (e, { name }) => {\n        this.setState({ activeItem: name });\n    }\n\n    reset = () => {\n        this.setState({\n            showSongs: false,\n            playlistChoice: ''\n        });\n    }\n\n    playlistDisplay = () => (\n        <Query query={USERS_PLAYLIST} variables={{ username: Auth.getUserName() }}>\n            {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n                let playlistCards = [];\n                let response;\n                let index = 0;\n                if (this.state.showSongs) {\n                    return (\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Button onClick={this.reset} floated='left' icon>\n                                    <Icon name='angle left' />\n                                </Button>\n                                <SongList\n                                    data={data.playlistsForUser.playlists}\n                                    choice={this.state.playlistChoice}\n                                />\n                            </Grid.Column>\n                        </Grid.Row>\n                    )\n                } else if (data.playlistsForUser.playlists) {\n                    for (const playlist of data.playlistsForUser.playlists) {\n                        let followerString = 'followers: ' + playlist.followers;\n                        let songString = 'songs: ' + playlist.song_count;\n                        playlistCards.push(\n                            <Card\n                                color='teal'\n                                header={playlist.name}\n                                meta={followerString}\n                                description={songString}\n                                key={index}\n                                onClick={() => { this.displaySongs(playlist.name) }}\n                            />\n                        )\n                        index++;\n                    }\n                    response = (\n                        <Container>\n                            <Grid.Row width={16}>\n                                <Card.Group itemsPerRow={3}>\n                                    {playlistCards}\n                                </Card.Group>\n                            </Grid.Row>\n                        </Container>);\n                } else {\n                    response = (\n                        <Message\n                            icon='info circle'\n                            warning\n                            header='No playlists'\n                            content={data.playlistsForUser.response}\n                        />)\n                }\n                return response;\n            }}\n        </Query>\n    );\n\n    displaySongs = (value) => {\n        this.setState({\n            showSongs: true,\n            playlistChoice: value\n        });\n    }\n\n    renderItem = () => {\n        if (this.state.activeItem === 'Playlists') {\n            return (\n                this.playlistDisplay()\n            )\n        } else if (this.state.activeItem === 'Settings') {\n            return (\n                <Header as='h4'>\n                    Settings\n                </Header>\n            )\n        }\n    };\n\n    render() {\n        let username = Auth.getUserName();\n        return (\n            <Grid>\n                <Grid.Row style={{ paddingBottom: 0 }}>\n                    <Grid.Column width={16}>\n                        <Divider />\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row color='teal' style={{ marginTop: 15 }}>\n                    <Grid.Column width={3}>\n                        <Image circular src='https://react.semantic-ui.com/images/avatar/large/patrick.png' />\n                    </Grid.Column>\n                    <Grid.Column width={13}>\n                        <Header as='h2' inverted floated='left'>\n                            {username}\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        <Menu pointing secondary>\n                            <Menu.Item\n                                name='Playlists'\n                                active={this.state.activeItem === 'Playlists'}\n                                onClick={this.handleItemClick}\n                            >\n                            </Menu.Item>\n                            <Menu.Item\n                                name='Settings'\n                                active={this.state.activeItem === 'Settings'}\n                                onClick={this.handleItemClick}\n                            >\n                            </Menu.Item>\n                        </Menu>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid columns={1} divided container>\n                    {this.renderItem()}\n                </Grid>\n            </Grid>\n        )\n    }\n\n}","import React from 'react'\nimport _ from 'lodash'\nimport { Query } from 'react-apollo';\nimport { ONCHANGE_SEARCH } from '../api/typedefs';\nimport { Search, Grid } from 'semantic-ui-react'\n\nconst initialState = { isLoading: false, results: [], value: '', num: 1 }\n\nexport default class OnChangeSearch extends React.Component {\n    state = initialState\n\n    handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, value, num: 1 })\n\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n        //   const isMatch = (result) => re.test(result.title)\n\n        this.setState({\n            isLoading: false,\n        })\n    }\n\n    handleResData = (data) => {\n        if (data.onChangeSearch.length > 0) {\n            let a = data.onChangeSearch[0]\n            this.setState({\n                num: 0,\n                results: [{\n                    title: a.artist,\n                    description: a.track,\n                    image: a.artwork\n                }]\n            })\n        }\n    }\n\n    render() {\n        let { value, results, num } = this.state\n        let search = value\n        return (\n            <Query query={ONCHANGE_SEARCH} variables={{ search }}>\n                {({ loading, error, data }) => {\n                    if (!loading && num === 1) {\n                        this.handleResData(data)\n                    }\n                    return (\n                        <Grid>\n                            <Grid.Column width={6}>\n                                <Search\n                                    loading={loading}\n                                    onResultSelect={this.handleResultSelect}\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                        leading: true,\n                                    })}\n                                    results={results}\n                                    value={value}\n                                    {...this.props}\n                                />\n                            </Grid.Column>\n                        </Grid>\n                    );\n                }}\n            </Query>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Input, Menu } from 'semantic-ui-react'\nimport Auth from '../utils/Auth'\nimport OnChangeSearch from './onChangeSearch';\n\nexport default class Navbar extends Component {\n  state = { activeItem: 'home' }\n\n  handleItemClick = (e, { name }) => {\n      this.setState({ activeItem: name })\n    }\n\n    userStatus = () => {\n        const { activeItem } = this.state\n        if(Auth.getAuth() === true){\n           return <Menu.Item\n            name={`Welcome ${Auth.getUserName()}`}\n            active={activeItem === 'greet'}\n            onClick={this.handleItemClick}\n          />\n        }else{\n           return <Menu.Item\n            name='login'\n            active={activeItem === 'login'}\n            onClick={this.handleItemClick}\n          />\n        }\n    }\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu secondary\n      style={{ margin: 5 }} \n      >\n          <Menu.Header\n          style={{margin:5, color:'teal'}}\n          as=\"h2\"\n          children=\"Audago\"\n          />\n\n        <Menu.Item\n          name='home'\n          active={activeItem === 'home'}\n          href=\"#\"\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='playlist'\n          active={activeItem === 'playlist'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='about'\n          active={activeItem === 'about'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Menu position='right'>\n          <Menu.Item>\n            <OnChangeSearch />\n            {/* <Input icon='search' placeholder='Search...' /> */}\n          </Menu.Item>\n          {this.userStatus()}\n        </Menu.Menu>\n      </Menu>\n    )\n  }\n}\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Search from './pages/Search';\nimport Webplayer from './pages/Webplayer';\nimport Auth from './utils/Auth';\nimport { Redirect } from 'react-router-dom';\nimport Profile from './pages/Profile';\nimport Navbar from './components/navbar';\n\nconst Router = (props) => (\n\n  <HashRouter>\n    <Navbar />\n    <Switch>\n    <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <PrivateRoute exact path=\"/\" component={Search} />\n      <PrivateRoute exact path=\"/webplayer\" component={Webplayer} />\n      <PrivateRoute exact path=\"/profile\" component={Profile} />\n      {/* <PrivateRoute exact path=\"/edit-user\" component={Edit_User} /> */}\n    </Switch>\n  </HashRouter>\n)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      Auth.getAuth() ? (\n        <Component {...props} />\n      ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\"\n            }}\n          />\n        )\n    }\n  />\n);\n\n\nexport default Router;","import React from 'react'\nimport { Dimmer, Loader, Image, Segment, Container } from 'semantic-ui-react'\n\nconst Loading = () => (\n  <div>\n      <Container style={{margin:50}}>\n    {/* <Segment> */}\n      <Dimmer active inverted>\n        <Loader size='large'>Loading</Loader>\n      </Dimmer>\n\n      {/* <Image src='/images/wireframe/paragraph.png' /> */}\n    {/* </Segment> */}\n    </Container>\n  </div>\n)\n\nexport default Loading\n","import React, { Component } from 'react';\nimport './styling/App.css';\nimport Router from './Router.jsx';\nimport { Container } from 'semantic-ui-react';\nimport Auth from './utils/Auth';\nimport Loading from './components/loader';\n\nclass App extends Component {\n  state = {\n    auth: false,\n    loading: true\n  }\n\n  async componentDidMount() {\n    this.setState({ auth: await Auth.check(), loading: false })\n  }\n\n  render() {\n    if(this.state.loading){\n      return(\n        <Loading />\n        )\n    }else{\n      return (\n      <div className=\"App\">\n        <Container>\n        <Router />\n        </Container>\n      </div>\n    );\n  }\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ApolloClient from 'apollo-boost';\nconst config ={\n\n    graphql: new ApolloClient({\n        uri: '/graphql',\n      })\n\n}\nexport default config","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styling/index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './utils/serviceWorker';\nimport config from './config'\nimport { ApolloProvider } from '@apollo/react-hooks';\n\n// const { loading, error, data } = useQuery(DATA);\n// console.log(data)\n\n\nReactDOM.render(\n  <ApolloProvider client={config.graphql}>\n    <App />\n  </ApolloProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}